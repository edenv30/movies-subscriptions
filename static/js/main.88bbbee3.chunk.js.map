{"version":3,"sources":["firebase/firebase.utils.js","components/header/Header.jsx","redux/user/user.type.js","redux/user/user.action.js","components/SignIn/SignIn.jsx","pages/Login/LoginPage.jsx","components/SignUp/SignUp.jsx","components/SignUp/SignUpFirstUserName.js","redux/movies/movies.types.js","pages/MainPage/MainPage.jsx","redux/movies/movies.actions.js","pages/ManageUsers/ManageUsers.jsx","pages/Movies/AllMovies.js","pages/Movies/Movies.jsx","redux/members/members.types.js","pages/Subscriptions/Subscriptions.jsx","redux/members/members.actions.js","pages/Movies/AddMovie.js","pages/Movies/EditMovie.js","pages/ManageUsers/UserCard.js","pages/ManageUsers/AllUserManage.js","pages/ManageUsers/permissionsTypes.js","pages/ManageUsers/AddUser.js","pages/ManageUsers/AddUserByAdmin.js","pages/ManageUsers/EditUser.js","pages/Subscriptions/MemberCard.js","pages/Subscriptions/AllMembers.js","pages/Subscriptions/EditMember.js","pages/Subscriptions/AddMember.js","App.js","redux/user/user.reducer.js","redux/movies/movies.reducer.js","redux/members/members.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","permissionsDetails","viewSubscriptions","createSubscriptions","updateSubscriptions","deleteSubscriptions","viewMovies","createMovies","updateMovies","deleteMovies","addCollectionToDocument","collectionKey","uid","objectToAdd","a","collectionRef","collection","batch","newDocRef","doc","set","commit","console","log","createUserProfileDocument","userAuth","additionalData","userRef","get","exists","displayName","email","createdAt","Date","message","addNewUser","collecionName","objToAdd","id","getCollectionListSnapshotToMapUsersLogin","docs","map","userName","data","signup","password","createUserWithEmailAndPassword","user","error","addDocumentToCollection","getCollectionListSnapshotToMap","getCollectionListusersPermissionsSnapShotToMap","getCollectionMembersSnapshotToMap","name","city","updateUserDateInFireBase","userData","update","updateUserPermissionsDateInFireBase","permissions","deleteUserFromFirebase","permissionsUserRef","delete","updateMovieDataInFirebase","image","premiered","genres","movieData","movieRef","deleteMovieFromFirebase","collectionName","updateMemberDataInFirebase","memberData","memberRef","deleteMemberFromFirebase","checkMemberInFirebase","getMoviesByMemberid","movies","Header","loggedIn","useSelector","state","currentUser","Navbar","fixed","expand","variant","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","Form","inline","onClick","signOut","to","UserActionType","LOG_IN_USER","SET_EMAIL_PASS_LOG_IN","SET_USER_SIGNUP","GET_USERS_LIST","GET_PERMISSIONS_USERS","SET_USERS_WITH_PERMISSIONS","GET_USERS_LOGIN_LIST","setUserLoginEmailPass","type","UserActionTypes","payload","getUserLoginList","users","connect","dispatch","useState","setEmail","setPassword","handleClick","e","preventDefault","signInWithEmailAndPassword","login","htmlFor","aria-describedby","placeholder","onChange","target","value","LoginPage","confirmPassword","setConfirmPassword","setDisplayName","isSubmitted","setIsSubmitted","onChangeHandler","event","currentTarget","handleSubmit","alert","flag","useEffect","SignUpFirstUserName","setUserName","usersList","usersLoginList","useDispatch","isExist","setIsExist","isSubmit","setIsSubmit","onSnapshot","snapshot","forEach","isUserNameExist","toLowerCase","MoviesActionsTypes","SET_MOVIES_FROM_FIRE_STORE","ADD_MOVIE","MainPage","routeName","encodeURI","ManageUsers","AllMovies","searchField","moviesList","moviesListTemp","setmoviesListTemp","show","setShow","handleClose","filteredMovies","filter","movie","includes","err","key","style","width","textAlign","background","src","alt","listStyleType","gener","index","pathname","data-toggle","data-placement","title","Button","Modal","onHide","closeButton","Title","Body","Footer","deleteMovie","Movies","setSearchField","MembersActionsTypes","SET_MEMBERS_FROM_FIREBASE","SET_MOVIES_BY_MEMBER_FROM_FIREBASE","Subscriptions","AddMovie","setName","setGenres","setImage","setPremiered","movieToAdd","setMovieToAdd","changed","setChanged","url","validator","isURL","Object","keys","length","addMovie","fetchMyAPI","role","autoComplete","changeName","res","split","changeGenres","handleCancel","EditMovie","useLocation","DropdownButton","size","genr","Dropdown","Item","eventKey","aria-hidden","handleChanges","UserCard","maxWidth","maxHeight","p","deleteUser","AllUserManage","setUsers","usersPermissions","setUsersPermissions","userPremission","userp","SetUsersWithPermissions","TypesPermissions","vs","cs","us","ds","vmovies","cm","um","dm","AddUser","Group","controlId","Check","label","AddUserByAdmin","EditUser","setPermissions","viewS","setViewS","createS","setCreateS","updateS","setUpdateS","deleteS","setDeleteS","viewM","setViewM","createM","setCreateM","updateM","setUpdateM","deleteM","setDeleteM","permissionschange","func","typeP","checked","handlePermissions","MemberCard","member","moviesOfmembers","members","moviesByMember","moviesByMemberId","setmoviesByMemberId","filteredList","setFilteredList","activeKey","setActiveKey","isSubNewMovie","setIsSubNewMovie","movieId","setMovieId","date","setDate","movieName","setMovieName","handleMovieSubScripbe","memberMovies","m","obj","filteredMoviesExist","filtered","array_el","anotherOne_el","Card","defaultActiveKey","onSelect","selectedKey","Text","as","handleSubNewMovie","Menu","Label","Control","memberId","AllMembers","EditMember","setCity","AddMember","capitalize","s","charAt","toUpperCase","slice","setUserLoggenIn","callback","callbackDetails","unsubscribe","onAuthStateChanged","snapShot","path","component","SignUp","from","INITIAL_STATE","userReducer","action","moviesReducer","membersReducer","rootReducer","combineReducers","middlewares","logger","store","createStore","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88bbbee3.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyCN1VJ-36hCrlmFmMxyTrB7pXn1QubKLf0\",\r\n  authDomain: \"movies-subscriptions.firebaseapp.com\",\r\n  databaseURL: \"https://movies-subscriptions.firebaseio.com\",\r\n  projectId: \"movies-subscriptions\",\r\n  storageBucket: \"movies-subscriptions.appspot.com\",\r\n  messagingSenderId: \"261996716763\",\r\n  appId: \"1:261996716763:web:84505c38bea3ebad8d62fe\",\r\n  measurementId: \"G-BR8W9C4BC3\"\r\n};\r\n\r\n  firebase.initializeApp(config);\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n\r\n  const permissionsDetails = {\r\n    viewSubscriptions: true,\r\n    createSubscriptions: false,\r\n    updateSubscriptions: false,\r\n    deleteSubscriptions: false,\r\n    viewMovies: true,\r\n    createMovies: false,\r\n    updateMovies: false,\r\n    deleteMovies: false\r\n  }\r\n\r\n  export const addCollectionToDocument = async (collectionKey, uid, objectToAdd) => {\r\n    try {\r\n      const collectionRef = firestore.collection(collectionKey);\r\n      //with batch object we add al the sets must to add all if not not set anyone\r\n      const batch = firestore.batch();\r\n      const newDocRef = collectionRef.doc(uid); // firebase render an id for the collection\r\n      batch.set(newDocRef, objectToAdd);\r\n      // async request -> return a promise\r\n      return await batch.commit();\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n   // function that take the user object authentication and store inside our database\r\n  // async function, because we make an api request\r\n  export const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if(!userAuth) return; // if the user signin - if user Auth not exist / userAuth == null -> false -> !false\r\n    \r\n    // if the user Auth exist, we go in firestore an query\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const snapShot = await userRef.get()\r\n    //if userAuth doesn't exist, we create a one using the document object reference (not the snapshot, snapshot for the data)\r\n    if(!snapShot.exists) {  // if user not exist we create him\r\n      const { displayName, email } = userAuth;\r\n      const createdAt = new Date();\r\n      // addCollectionToDocument('permissions', userAuth.uid, permissionsDetails);\r\n      try {\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData\r\n        })\r\n        // add collection permissions to user\r\n      } catch(err) {\r\n          console.log('error creating user', err.message);\r\n      }\r\n    }\r\n    return userRef;\r\n\r\n  } \r\n\r\n  export const addNewUser = async(collecionName, objToAdd) => {\r\n    try {\r\n      const collectionRef = firestore.collection(collecionName);\r\n      //with batch object we add al the sets must to add all if not not set anyone\r\n      const batch = firestore.batch();\r\n      const newDocRef = collectionRef.doc(); // firebase render an id for the collection\r\n      if(collecionName === 'users')\r\n        objToAdd.id=newDocRef.id;\r\n      if(collecionName === 'usersLogin')\r\n        addCollectionToDocument('permissions', newDocRef.id, permissionsDetails);\r\n      batch.set(newDocRef, objToAdd);\r\n      // async request -> return a promise\r\n      return await batch.commit();\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n   //for usersLogin\r\n  export const getCollectionListSnapshotToMapUsersLogin = (collection) => {\r\n\r\n    const transformedCollections = collection.docs.map( doc => {\r\n      const { userName } = doc.data();\r\n\r\n      return {\r\n        id: doc.id,\r\n        userName\r\n      }\r\n    } );\r\n    return transformedCollections;\r\n  }\r\n\r\n  // Listening to Authentication Provider\r\n  // This will keep a connection to the firebase authentication provider, \r\n  // and change whenever the backend state of the logged in user changes.\r\n  // export const onAuthStateChangeFirebase = (callback) => {\r\n  //   return auth.onAuthStateChanged( user => {\r\n  //     console.log(user)\r\n  //     if(user) {\r\n  //       callback(true); // set loggedIn to true\r\n  //       console.log('The user is logged in')\r\n  //     }\r\n  //     else {\r\n  //       callback(false);\r\n  //       console.log(\"The user is not logged in\");\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  export const onAuthStateChangeFirebase = (callback, callbackDetails) => {\r\n    return auth.onAuthStateChanged( async userAuth => {\r\n      if(userAuth) {\r\n        callback(true); // set loggedIn to true\r\n        const userRef = await createUserProfileDocument(userAuth);\r\n        userRef.onSnapshot( snapShot => {\r\n          callbackDetails({ \r\n            id: snapShot.id,\r\n            ...snapShot.data()\r\n          })\r\n        } );\r\n        console.log('The user is logged in');\r\n      }\r\n      else {\r\n        callback(false);\r\n        callbackDetails(userAuth);\r\n        console.log(\"The user is not logged in\");\r\n      }\r\n    });\r\n  }\r\n\r\n  export const signup = async (displayName, email, password) => {\r\n    try {\r\n      const {user} = await auth.createUserWithEmailAndPassword(email, password);\r\n      await createUserProfileDocument(user, {displayName});\r\n      return true;\r\n    }\r\n    catch(err) {\r\n      console.error(err);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  export const login = (email, password) => {\r\n    auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  export const logout = () => {\r\n    auth.signOut();\r\n  }\r\n\r\n  // adding data one time \r\n  export const addCollectionsAndDocuments = async (collectionKey, objectsToAdd) => {\r\n    try {\r\n      const collectionRef = firestore.collection(collectionKey);\r\n      //with batch object we add al the sets must to add all if not not set anyone\r\n      const batch = firestore.batch();\r\n      objectsToAdd.forEach( obj => {\r\n        const newDocRef = collectionRef.doc(); // firebase render an id for the collection\r\n        batch.set(newDocRef, obj);\r\n      });\r\n      // async request -> return a promise\r\n      return await batch.commit();\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  //add one item to db\r\n  export const addDocumentToCollection = async (collectionKey, objectToAdd) => {\r\n    try {\r\n      const collectionRef = firestore.collection(collectionKey);\r\n      //with batch object we add al the sets must to add all if not not set anyone\r\n      const batch = firestore.batch();\r\n      const newDocRef = collectionRef.doc(); // firebase render an id for the collection\r\n      batch.set(newDocRef, objectToAdd);\r\n      // async request -> return a promise\r\n      return await batch.commit();\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  //for movies\r\n  export const convertCollectionsSnapshotToMap = (collections) => {\r\n    const transformedCollections = collections.docs.map( doc => {\r\n      const { name, genres, image, premiered } = doc.data();\r\n\r\n      return {\r\n        routeName: encodeURI(name.toLowerCase()),\r\n        id: doc.id,\r\n        name, \r\n        genres, \r\n        image, \r\n        premiered\r\n      }\r\n    } );\r\n    return transformedCollections;\r\n\r\n    // return transformedCollections.reduce((accumulator, collection) => {\r\n    //   // accumulator[collection.name.toLowerCase()] = collection;\r\n    //   accumulator['movies'] = collection;\r\n    //   console.log(accumulator)\r\n    //   return accumulator;\r\n    // }, {})\r\n  } \r\n\r\n  //for users \r\n  export const getCollectionListSnapshotToMap = (collection) => {\r\n\r\n    const transformedCollections = collection.docs.map( doc => {\r\n      const { displayName, email, createdAt } = doc.data();\r\n\r\n      return {\r\n        id: doc.id,\r\n        displayName, \r\n        email, \r\n        createdAt\r\n      }\r\n    } );\r\n    return transformedCollections;\r\n  }\r\n\r\n  // for users permissions\r\n  export const getCollectionListusersPermissionsSnapShotToMap = (collection) => {\r\n    const transformedCollections = collection.docs.map( doc => {\r\n      const {   viewSubscriptions, createSubscriptions, updateSubscriptions, deleteSubscriptions,\r\n                viewMovies, createMovies, updateMovies, deleteMovies } = doc.data();\r\n        return {\r\n                id: doc.id,\r\n                viewSubscriptions, \r\n                createSubscriptions, \r\n                updateSubscriptions,\r\n                deleteSubscriptions,\r\n                viewMovies,\r\n                createMovies,\r\n                updateMovies,\r\n                deleteMovies\r\n                }\r\n    } )\r\n    return transformedCollections;\r\n  }\r\n\r\n  //for members\r\n  export const getCollectionMembersSnapshotToMap = (collection) => {\r\n    const transformedCollections = collection.docs.map( doc => {\r\n      const { name, email, city } = doc.data();\r\n\r\n      return {\r\n        id: doc.id,\r\n        name, \r\n        email, \r\n        city\r\n      }\r\n    } );\r\n    return transformedCollections;\r\n  } \r\n\r\n  //update user data in firebase\r\n  export const updateUserDateInFireBase = async (id, name, email, createdAt) => {\r\n    var userData = {\r\n      displayName: name,\r\n      id: id,\r\n      email: email,\r\n      createdAt: createdAt,\r\n    };\r\n\r\n    try {\r\n      const userRef = firestore.collection('users').doc(id);\r\n      //with batch object we add al the sets must to add all if not not set anyone\r\n      const batch = firestore.batch();\r\n      batch.update(userRef, userData);\r\n      // async request -> return a promise\r\n      return await batch.commit();\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  //update user permissions data in firebase\r\n  export const updateUserPermissionsDateInFireBase = async (id, permissions) => {\r\n    const {   viewSubscriptions, createSubscriptions, updateSubscriptions, deleteSubscriptions,\r\n      viewMovies, createMovies, updateMovies, deleteMovies } = permissions;\r\n      // A post entry.\r\n    var userData = {\r\n      id: id,\r\n      viewSubscriptions, \r\n      createSubscriptions, \r\n      updateSubscriptions,\r\n      deleteSubscriptions,\r\n      viewMovies,\r\n      createMovies,\r\n      updateMovies,\r\n      deleteMovies\r\n    };\r\n\r\n    try {\r\n      const userRef = firestore.collection('permissions').doc(id);\r\n      //with batch object we add al the sets must to add all if not not set anyone\r\n      const batch = firestore.batch();\r\n      batch.update(userRef, userData);\r\n      // async request -> return a promise\r\n      return await batch.commit();\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  // delete user from firebase \r\n  export const deleteUserFromFirebase = async (id) => {\r\n    try {\r\n      const userRef = firestore.collection('users').doc(id);\r\n      const permissionsUserRef = firestore.collection('permissions').doc(id);\r\n      //with batch object we add al the sets must to add all if not not set anyone\r\n      const batch = firestore.batch();\r\n      batch.delete(userRef);\r\n      batch.delete(permissionsUserRef);\r\n      // async request -> return a promise\r\n      return await batch.commit();\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  // update movie data in firebase\r\n  export const updateMovieDataInFirebase = async (id, name, image, premiered ,genres) => {\r\n  var movieData = {\r\n    name,\r\n    image,\r\n    premiered,\r\n    genres\r\n  };\r\n\r\n  try {\r\n    const movieRef = firestore.collection('movies').doc(id);\r\n    //with batch object we add all the sets must to add all if not not set anyone\r\n    const batch = firestore.batch();\r\n    batch.update(movieRef, movieData);\r\n    // async request -> return a promise\r\n    return await batch.commit();\r\n  } catch(err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\n// delete movie from firebase\r\nexport const deleteMovieFromFirebase = async (id, collectionName) => {\r\n  try {\r\n    const collectionRef = firestore.collection(collectionName).doc(id);\r\n    //with batch object we add al the sets must to add all if not not set anyone\r\n    const batch = firestore.batch();\r\n    batch.delete(collectionRef);\r\n    // async request -> return a promise\r\n    return await batch.commit();\r\n  } catch(err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\n//update member data in firebase\r\nexport const updateMemberDataInFirebase = async (id, name, email, city, collection) => {\r\n  var memberData = {\r\n    name,\r\n    email,\r\n    city\r\n  };\r\n\r\n  try {\r\n    const memberRef = firestore.collection(collection).doc(id);\r\n    //with batch object we add all the sets must to add all if not not set anyone\r\n    const batch = firestore.batch();\r\n    batch.update(memberRef, memberData);\r\n    // async request -> return a promise\r\n    return await batch.commit();\r\n  } catch(err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\n// delete member from firebase\r\nexport const deleteMemberFromFirebase = async (id, collectionName) => {\r\n  try {\r\n    const collectionRef = firestore.collection(collectionName).doc(id);\r\n    //with batch object we add al the sets must to add all if not not set anyone\r\n    const batch = firestore.batch();\r\n    batch.delete(collectionRef);\r\n    // async request -> return a promise\r\n    return await batch.commit();\r\n  } catch(err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\n// check if member exist, no -> create a new , yes -> update in firebase\r\nexport const checkMemberInFirebase = async (collectionName, id, objectToAdd ) => {\r\n  try {\r\n    const memberRef = firestore.collection(collectionName).doc(id);\r\n    const batch = firestore.batch();\r\n    const doc = await memberRef.get();\r\n    if (!doc.exists) {\r\n      console.log('No such document!');\r\n      batch.set(memberRef, objectToAdd);\r\n    } else {\r\n      console.log('Document data:', doc.data());\r\n      // const membermovieRef = memberRef.collection('movies')\r\n      // console.log(membermovieRef)\r\n      batch.update(memberRef, objectToAdd);\r\n    }\r\n    // const collectionRef = firestore.collection(collectionName);\r\n    // //with batch object we add al the sets must to add all if not not set anyone\r\n    // const batch = firestore.batch();\r\n    // const newDocRef = collectionRef.doc(id); // firebase render an id for the collection\r\n    // batch.set(newDocRef, objectToAdd);\r\n    // // async request -> return a promise\r\n    return await batch.commit();\r\n  \r\n  } catch(err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\n// get movies from subscriptions collection by member id\r\nexport const getMoviesByMemberid = (collection) => {\r\n    \r\n    const transformedCollections = collection.docs.map( doc => {\r\n      const { movies } = doc.data();\r\n\r\n      return {\r\n        id: doc.id,\r\n        movies\r\n      }\r\n\r\n    } );\r\n    return transformedCollections;\r\n  }\r\n\r\nexport default firebase;","import React from 'react';\r\n\r\nimport { Navbar, Nav, NavDropdown, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { logout } from '../../firebase/firebase.utils';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst Header = ({ loggedIn }) => {\r\n\r\n    const user = useSelector( state => state.user.currentUser )\r\n\r\n    return (\r\n        <div>\r\n            <header>\r\n                <Navbar fixed=\"top\" expand=\"lg\" variant=\"dark\" bg=\"dark\">\r\n                <Navbar.Brand>{loggedIn ? ((user)? user.displayName: null) : \"User\" }</Navbar.Brand>\r\n                <Navbar.Brand href='mainpage'></Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#home\">Welcome to Movies-Subscriptions</Nav.Link>\r\n                    </Nav>\r\n                    <Form inline>\r\n                        {\r\n                            loggedIn ?\r\n                            (<div className=\"btn btn-outline-warning\" onClick={ () =>  logout() }>SIGN OUT</div>)\r\n                            :\r\n                            (<Link to='signin' className=\"btn btn-outline-warning\">SIGN IN</Link>)\r\n                        }\r\n                    </Form>\r\n                </Navbar.Collapse>\r\n                </Navbar>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n \r\n\r\nexport default (Header);\r\n\r\n// <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n// <Button variant=\"outline-success\">Search</Button>","const UserActionType  ={\r\n    LOG_IN_USER: 'LOG_IN_USER',\r\n    SET_EMAIL_PASS_LOG_IN: 'SET_EMAIL_PASS_LOG_IN',\r\n    SET_USER_SIGNUP: 'SET_USER_SIGNUP',\r\n    GET_USERS_LIST: 'GET_USERS_LIST',\r\n    GET_PERMISSIONS_USERS: 'GET_PERMISSIONS_USERS',\r\n    SET_USERS_WITH_PERMISSIONS: 'SET_USERS_WITH_PERMISSIONS',\r\n    GET_USERS_LOGIN_LIST: 'GET_USERS_LOGIN_LIST'\r\n}\r\n\r\nexport default UserActionType;","import UserActionTypes from './user.type';\r\n\r\nexport const setUserLoggenIn = user => ({\r\n    type: UserActionTypes.LOG_IN_USER,\r\n    payload: user\r\n});\r\n\r\nexport const setUserLoginEmailPass = user => ({\r\n    type: UserActionTypes.SET_EMAIL_PASS_LOG_IN,\r\n    payload: user\r\n});\r\n\r\nexport const setUserSignup = user => ({\r\n    type: UserActionTypes.SET_USER_SIGNUP,\r\n    payload: user\r\n});\r\n\r\nexport const getUsersList = users => ({\r\n    type: UserActionTypes.GET_USERS_LIST,\r\n    payload: users\r\n});\r\n\r\nexport const getPermissionsUsers = usersPermissions => ({\r\n    type: UserActionTypes.GET_PERMISSIONS_USERS,\r\n    payload: usersPermissions\r\n});\r\n\r\nexport const SetUsersWithPermissions = users => ({\r\n    type: UserActionTypes.SET_USERS_WITH_PERMISSIONS,\r\n    payload: users\r\n});\r\n\r\nexport const getUserLoginList = users => ({\r\n    type: UserActionTypes.GET_USERS_LOGIN_LIST,\r\n    payload: users\r\n});","import React, { useState } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { login } from '../../firebase/firebase.utils';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setUserLoginEmailPass } from '../../redux/user/user.action';\r\n\r\n\r\nconst SignIn = ({setUserLoginEmailPass}) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        // setUserLoginEmailPass({ email, password });\r\n        login(email, password);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Movies - Subscriptions: Sign In </h1>\r\n            <form className=\"text-center\">\r\n                <div className=\"form-group w-25 p-3 mx-auto\">\r\n                    <label htmlFor=\"inputEmail1\">Email address</label>\r\n                    <input type=\"email\" className=\"form-control\" id=\"inputEmail1\" \r\n                        aria-describedby=\"emailHelp\" placeholder=\"Enter email\"\r\n                        onChange={ e => setEmail(e.target.value) } />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                </div>\r\n                <div className=\"form-group w-25 p-3 mx-auto\">\r\n                    <label htmlFor=\"inputPassword1\">Password</label>\r\n                    <input type=\"password\" className=\"form-control\" id=\"inputPassword1\" \r\n                        placeholder=\"Password\"\r\n                        onChange={ e => setPassword(e.target.value) } />\r\n                </div>\r\n                \r\n                <button className=\"btn btn-warning\"\r\n                        onClick={ (e) => handleClick(e)} >\r\n                         Sign In</button><br /><br />\r\n\r\n                <div>\r\n                    <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">New User?</label>\r\n                    <Link to=\"signupusername\" className=\"badge badge-warning\"> Create Account</Link>\r\n                    <br /><br />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//     setUserLoggenIn: flag => dispatch(setUserLoggenIn(flag))\r\n// })\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedIn: state.user.loggedIn\r\n  })\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUserLoginEmailPass: user => dispatch(setUserLoginEmailPass(user))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React from 'react';\r\n\r\nimport SignIn from '../../components/SignIn/SignIn';\r\n// import SignUp from '../../components/SignUp/SignUp';\r\n\r\nconst LoginPage = () => {\r\n    return (\r\n        <div>\r\n            <SignIn />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage;","import React , { useState, useEffect } from 'react';\r\n\r\nimport { signup } from '../../firebase/firebase.utils';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setUserLoginEmailPass } from '../../redux/user/user.action';\r\n\r\n// const [firstName, setFirstName] = useState('');\r\n// const [lastName, setLastName] = useState('');\r\n//     <div className=\"form-group w-25 p-3 mx-auto\">\r\n//     <label htmlFor=\"firstName\">First Name:</label>\r\n//     <input className=\"form-control\" id=\"firstName\"\r\n//         onChange={ e => setFirstName(e.target.value) } />\r\n// </div>\r\n// <div className=\"form-group w-25 p-3 mx-auto\">\r\n//     <label htmlFor=\"lastName\">Last Name:</label>\r\n//     <input className=\"form-control\" id=\"lastName\"\r\n//         onChange={ e => setEmail(e.target.value) } />\r\n// </div>\r\n\r\nconst SignUp = () => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [displayName, setDisplayName] = useState('');\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    \r\n    const onChangeHandler = event => {\r\n        const { name, value } = event.currentTarget;\r\n        if (name === \"userEmail\") {\r\n          setEmail(value);\r\n        } else if (name === \"userPassword\") {\r\n          setPassword(value);\r\n        } else if (name === \"userconfirmPassword\") {\r\n          setConfirmPassword(value);\r\n        } else if (name === \"displayName\") {\r\n          setDisplayName(value);\r\n        }\r\n      };\r\n\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      if (password !== confirmPassword) {\r\n        alert(`password don't match!`);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const flag = await signup(displayName, email, password);\r\n        setIsSubmitted(flag);\r\n       \r\n        // createUserProfileDocument()\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n      // setUserLoginEmailPass({ email, password });\r\n      // login(email, password);\r\n    }\r\n\r\n    useEffect( () => {\r\n      if(isSubmitted) {\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n        setDisplayName('');\r\n        setIsSubmitted(false);\r\n      }\r\n\r\n    }, [isSubmitted])\r\n\r\n    return(\r\n        <div>\r\n            <h1>Movies - Subscriptions: Sign Up </h1>\r\n            <h3>Create an account</h3>\r\n            <form>\r\n                <div className=\"form-group w-25 p-3 mx-auto\">\r\n                    <label htmlFor=\"displayName\">Display Name:</label>\r\n                    <input className=\"form-control\" \r\n                        id=\"displayName\"\r\n                        name=\"displayName\"\r\n                        onChange={event => onChangeHandler(event) } />\r\n                </div>\r\n                <div className=\"form-group w-25 p-3 mx-auto\">\r\n                    <label htmlFor=\"userEmail\">Email:</label>\r\n                    <input className=\"form-control\" \r\n                            id=\"userEmail\" \r\n                            name=\"userEmail\"\r\n                            aria-describedby=\"emailHelp\"\r\n                            onChange={event => onChangeHandler(event) } />\r\n                </div>\r\n                <div className=\"form-group w-25 p-3 mx-auto\">\r\n                    <label htmlFor=\"userPassword\">Password</label>\r\n                    <input type=\"password\" className=\"form-control\" \r\n                            id=\"userPassword\"\r\n                            name=\"userPassword\"\r\n                            onChange={event => onChangeHandler(event) } />\r\n                </div>\r\n                <div className=\"form-group w-25 p-3 mx-auto\">\r\n                  <label htmlFor=\"userPassword\">Confirm Password</label>\r\n                  <input type=\"password\" className=\"form-control\" \r\n                          id=\"userconfirmPassword\"\r\n                          name=\"userconfirmPassword\"\r\n                          onChange={event => onChangeHandler(event) } />\r\n                </div>\r\n                <button className=\"btn btn-warning\"\r\n                    onClick={ (e) => handleSubmit(e) }>\r\n                        Sign up\r\n                    </button> <br /><br />\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setUserLoginEmailPass: user => dispatch(setUserLoginEmailPass(user))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { firestore,\r\n    getCollectionListSnapshotToMapUsersLogin } from '../../firebase/firebase.utils';\r\nimport { getUserLoginList } from '../../redux/user/user.action';\r\n\r\nconst SignUpFirstUserName = () => {\r\n\r\n    const [userName, setUserName] = useState('');\r\n    // first to check if the userName is exist in firebase -> if not show a message, if yes redirect to sign up page\r\n    // with the id created in the fire base when the admin create the user\r\n    // and check in users the id is not already exist !!!\r\n    const usersList = useSelector(state => state.user.usersLoginList);\r\n    const dispatch = useDispatch();\r\n\r\n    const [isExist, setIsExist] = useState(false);\r\n    const [isSubmit, setIsSubmit] = useState(false);\r\n\r\n    useEffect( () => {\r\n        const collectionRef = firestore.collection('usersLogin');\r\n            collectionRef.onSnapshot(async snapshot => {\r\n                    const collection = getCollectionListSnapshotToMapUsersLogin(snapshot);\r\n                    dispatch(getUserLoginList(collection));\r\n                })\r\n    },[]);\r\n\r\n    const isUserNameExist = () => {\r\n        let flag = false;\r\n        console.log(usersList)\r\n        usersList.forEach( user => {\r\n            if(user.userName === userName){\r\n                console.log(user.userName, userName)\r\n                flag = true;}\r\n        })\r\n        return flag;\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setIsSubmit(true);\r\n        const flag = isUserNameExist();\r\n        setIsExist(flag);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Movies - Subscriptions: Sign Up - User Name </h1>\r\n            <h3>Create an account</h3>\r\n            <form>\r\n                <div className=\"form-group w-25 p-3 mx-auto\">\r\n                    <label htmlFor=\"displayName\">User Name from admin</label>\r\n                    <input className=\"form-control\" \r\n                        onChange={event => setUserName((event.target.value.toLowerCase())) } />\r\n                        <br /><br />\r\n                        <button className=\"btn btn-warning\"\r\n                        onClick={ (e) => handleSubmit(e) }>\r\n                            Submit\r\n                        </button> <br /><br />\r\n                        {   \r\n                            console.log(isSubmit, isExist), \r\n                            (isSubmit)?(\r\n                            (isExist) ? \r\n                            <Redirect to='signup' />\r\n                            :\r\n                            alert(`User name doesn't exist !`)) : null\r\n                        }\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUpFirstUserName;","const MoviesActionsTypes = {\r\n    SET_MOVIES_FROM_FIRE_STORE: 'SET_MOVIES_FROM_FIRE_STORE',\r\n    ADD_MOVIE: 'ADD_MOVIE'\r\n}\r\n\r\nexport default MoviesActionsTypes;","import React, { useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport { setMovies } from '../../redux/movies/movies.actions.js'\r\n\r\n\r\nconst MainPage = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect( () => {    \r\n        \r\n        const collectionRef = firestore.collection('movies');\r\n        collectionRef.onSnapshot(async snapshot => {\r\n            const collection = convertCollectionsSnapshotToMap(snapshot);\r\n            dispatch(setMovies(collection));\r\n        })\r\n    \r\n      }, []);\r\n\r\n    return(\r\n        <div>\r\n            <br/><br/><br/>\r\n            <h1>Movies - Subscriptions: Main Page</h1>\r\n            <div>\r\n                <Link to='movies' className=\"btn btn-outline-warning\">Movies</Link>\r\n                <Link to='subscriptions' className=\"btn btn-outline-warning\">Subscriptions</Link>\r\n                <Link to='manageusers' className=\"btn btn-outline-warning\">Users Management</Link>\r\n                <Link to='signin' className=\"btn btn-outline-warning\">Log Out</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import MoviesActionsTypes from './movies.types';\r\n\r\nexport const setMovies = (moviesList) => ({\r\n    type: MoviesActionsTypes.SET_MOVIES_FROM_FIRE_STORE,\r\n    payload: moviesList\r\n});\r\n\r\nexport const addMovie = (movieToAdd) => ({\r\n    type: MoviesActionsTypes.ADD_MOVIE,\r\n    payload: movieToAdd\r\n})","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n// Only fron Admin!!!!!!\r\nconst ManageUsers = () => {\r\n\r\n    return(\r\n        <div>\r\n            <h1>Movies - Subscriptions: Manage Users</h1>\r\n            <Link to='allusers' className=\"btn btn-outline-warning\">All users</Link>\r\n            <Link to='adduser' className=\"btn btn-outline-warning\">Add user</Link>\r\n            <Link to='addusername' className=\"btn btn-outline-warning\">Add user By User Name</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManageUsers;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\nimport { deleteMovieFromFirebase } from '../../firebase/firebase.utils.js';\r\n\r\nconst AllMovies = ({searchField}) => {\r\n    const moviesList = useSelector(state => state.movies.movies);\r\n    const [moviesListTemp, setmoviesListTemp] = useState(moviesList);\r\n    \r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () =>{ \r\n        setShow(false);\r\n    }\r\n    const handleShow = () => { \r\n        setShow(true);\r\n    }\r\n\r\n    useEffect( ()=> {\r\n        try {\r\n            if(searchField) {\r\n                const filteredMovies = moviesList.filter( (movie) => \r\n                movie.name.toLowerCase().includes(searchField.toLowerCase()) \r\n                );\r\n                setmoviesListTemp(filteredMovies);\r\n            }\r\n           \r\n        }catch(err) {\r\n            console.log(err);\r\n        }\r\n       \r\n    }, [searchField]);\r\n\r\n    const deleteMovie = (e, id) => {\r\n        e.preventDefault();\r\n        deleteMovieFromFirebase(id, 'movies');\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container row mt-5 justify-content-center\">\r\n                {moviesListTemp.map( movie => {\r\n                    return (\r\n                        <div key={movie.id} className=\"card card-custom mx-2 mb-3\" style={{width: \"18rem\", textAlign: \"center\", background: \"black\"}}>\r\n                        <img src={movie.image} className=\"card-img-top\" alt=\"\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{movie.name}</h5>\r\n                                <p className=\"card-text\">genres:</p>\r\n                                    <ul style={{listStyleType: \"none\"}}>\r\n                                    {movie.genres.map(\r\n                                        (gener, index) => <li key={index}> {gener} </li>\r\n                                    )} \r\n                                    </ul>\r\n                                <Link to={{pathname: '/editmovie', state:{ movie}}}\r\n                                        className=\"btn btn-danger\" type=\"button\" \r\n                                        data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit\">\r\n                                    Edit\r\n                                </Link>\r\n                                <Button className=\"btn btn-danger\" onClick={e => handleShow(e)}>Delete</Button>\r\n                                    <Modal show={show} onHide={handleClose} >\r\n                                    <div className=\"card text-white bg-dark mb-3\">\r\n                                        <Modal.Header closeButton>\r\n                                            <Modal.Title>Delete Movie</Modal.Title>\r\n                                        </Modal.Header>\r\n                                        <Modal.Body>\r\n                                            Are you sure you want to delete the movie {movie.name}?\r\n                                        </Modal.Body>\r\n                                        <Modal.Footer>\r\n                                            <Button variant=\"danger\" onClick={(e) => deleteMovie(e, movie.id)}>\r\n                                                Yes\r\n                                            </Button>\r\n                                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                                No\r\n                                            </Button>\r\n                                        </Modal.Footer>\r\n                                    </div>\r\n                                </Modal>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                } )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllMovies;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setMovies } from '../../redux/movies/movies.actions.js'\r\n\r\nimport AllMovies from './AllMovies';\r\n\r\nconst Movies = () => {\r\n\r\n    const [searchField, setSearchField] = useState('');\r\n    // const dispatch = useDispatch();\r\n    // useEffect( () => {    \r\n    //     // const unsubscribe  = null;\r\n    //     // const unsubscribe = onAuthStateChangeFirebase(, );\r\n    //     const collectionRef = firestore.collection('movies');\r\n    //     collectionRef.onSnapshot(async snapshot => {\r\n    //         const collection = convertCollectionsSnapshotToMap(snapshot);\r\n    //         dispatch(setMovies(collection));\r\n    //     })\r\n    //     // return () => {\r\n    //     //   unsubscribe();\r\n    //     // };\r\n    \r\n    //   }, []);\r\n\r\n    const moviesList = useSelector(state => state.movies.movies);\r\n    return(\r\n        <div>\r\n            <h1>Movies - Subscriptions: Movies</h1>\r\n            <Link to='allmovies' className=\"btn btn-outline-warning\">All movies</Link>\r\n            <Link to='addmovie' className=\"btn btn-outline-warning\">Add movie</Link>\r\n            <br /><br />\r\n            {\r\n                moviesList ?\r\n                    (\r\n                        <div>\r\n                            Find movie: <input type='search' placeholder='Search Movie'\r\n                                         onChange={e => setSearchField(e.target.value)} /><br /><br />\r\n                            <AllMovies searchField={searchField} />\r\n                        </div>\r\n                    )\r\n                    :\r\n                    null\r\n            }\r\n            <div></div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movies;","const MembersActionsTypes = {\r\n    SET_MEMBERS_FROM_FIREBASE: 'SET_MEMBERS_FROM_FIREBASE',\r\n    SET_MOVIES_BY_MEMBER_FROM_FIREBASE: 'SET_MOVIES_BY_MEMBER_FROM_FIREBASE'\r\n}\r\n\r\nexport default MembersActionsTypes;","import React, { useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { firestore, getCollectionMembersSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setMembers } from '../../redux/members/members.actions';\r\n\r\nconst Subscriptions = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect( () => {    \r\n        const collectionRef = firestore.collection('members');\r\n        collectionRef.onSnapshot(async snapshot => {\r\n            const collection = getCollectionMembersSnapshotToMap(snapshot);\r\n            dispatch(setMembers(collection));\r\n        })\r\n      }, []);\r\n\r\n    //   const members = useSelector(state => state.members.members);\r\n\r\n    return(\r\n        <div>\r\n            <br/><br/><br/>\r\n            <h1>Movies - Subscriptions: Subscriptions</h1>\r\n            <Link to='allmembers' className=\"btn btn-outline-warning\">All Members</Link>\r\n            <Link to='addmember' className=\"btn btn-outline-warning\">Add Member</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subscriptions;","import MembersActionsTypes from './members.types';\r\n\r\nexport const setMembers = (membersList) => ({\r\n    type: MembersActionsTypes.SET_MEMBERS_FROM_FIREBASE,\r\n    payload: membersList\r\n});\r\n\r\nexport const setMoviesByMember = (moviesByMember) => ({\r\n    type: MembersActionsTypes.SET_MOVIES_BY_MEMBER_FROM_FIREBASE,\r\n    payload: moviesByMember\r\n})","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { addMovie } from '../../redux/movies/movies.actions';\r\nimport { addDocumentToCollection } from '../../firebase/firebase.utils';\r\nimport validator from 'validator';\r\n\r\nconst AddMovie = () => {\r\n    const [name, setName] = useState('');\r\n    const [genres, setGenres] = useState([]);\r\n    const [image, setImage] = useState('');\r\n    const [premiered, setPremiered] = useState(new Date());\r\n    const [movieToAdd, setMovieToAdd] = useState({});\r\n\r\n    const [changed, setChanged] = useState(false);\r\n\r\n    const moviesList = useSelector(state => state.movies.movies);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const changeName = (e) => {\r\n        let flag = false;\r\n        moviesList.map( movie => {\r\n            if(movie.name.toLowerCase() === e.target.value.toLowerCase())\r\n                flag = true;\r\n        })\r\n        if(!flag)\r\n            setName(e.target.value)\r\n        else\r\n            alert('The movie already exist')\r\n    }\r\n\r\n    const changeGenres = (e) => {\r\n        let genresStr = e.target.value;\r\n        var res = genresStr.split(\",\");\r\n        setGenres(res);\r\n    }\r\n\r\n    const isURLValid = (url) => {\r\n        return validator.isURL(url);\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!(image && isURLValid(image)))\r\n            alert('You must insert a URL')\r\n        else if(!(name && genres && image && premiered))\r\n            alert('You must fill in all the fields!');\r\n        else {\r\n            setMovieToAdd({name, genres, image, premiered});\r\n            setChanged(true);\r\n        }\r\n    }\r\n\r\n    const handleCancel = (e) => {\r\n        e.preventDefault();\r\n        setName('');\r\n        setGenres([]);\r\n        setImage('');\r\n        setPremiered(new Date());\r\n        setChanged(true);\r\n    }\r\n\r\n    useEffect( () => {   \r\n        async function fetchMyAPI() {\r\n            await addDocumentToCollection('movies',movieToAdd);\r\n            \r\n        }\r\n        if(Object.keys(movieToAdd).length !== 0){\r\n            dispatch(addMovie(movieToAdd));\r\n            fetchMyAPI()\r\n        }\r\n    }, [movieToAdd]);\r\n\r\n    return (\r\n        <div>\r\n            <br/><br/><br/>\r\n            <h1 className=\"text-center\"> Movies </h1>\r\n            <div className=\"container py-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"mx-auto col-sm-6\">\r\n                        <div className=\"card bg-dark\" >\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"mb-0\">Add new movie</h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form className=\"form\" role=\"form\" autoComplete=\"off\">\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Name</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"text\" value={name} \r\n                                                    onChange={ e => changeName(e) } />\r\n                                            </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Genres</label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input className=\"form-control\" type=\"text\" value={genres}\r\n                                                onChange={ e => changeGenres(e)} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Image Url </label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input className=\"form-control\" type=\"text\" value={image}\r\n                                                onChange={ e => setImage(e.target.value) } />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Premiered</label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input className=\"form-control\" type=\"date\" value={premiered}\r\n                                                onChange={ e => setPremiered(e.target.value) } />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\"></label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input type=\"button\" className=\"btn btn-danger\" value=\"Add movie\" onClick={e => handleSubmit(e)} />\r\n                                            <button type=\"submit\" className=\"btn btn-secondary\" onClick={ e => handleCancel(e) }>Cancel</button>\r\n                                            { changed ? <Redirect to='allmovies' /> : null}\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMovie;\r\n\r\n\r\n// <form>\r\n// <div className=\"form-group\">\r\n//     <br/><br/><br/>\r\n//     <h3>Add new movie:</h3><br /><br />\r\n//     <label>\r\n//         Name: \r\n//         <input type=\"text\" name=\"name\" value={name} onChange={ e => changeName(e) } />\r\n//     </label><br />\r\n//     <label>\r\n//         Genres: \r\n//         <input type=\"text\" name=\"genres\" value={genres} onChange={ e => changeGenres(e) } />\r\n//     </label><br />\r\n//     <label>\r\n//         Image Url: \r\n//         <input type=\"url\" name=\"image\" value={image} onChange={ e => setImage(e.target.value) } />\r\n//     </label><br />\r\n//     <label>\r\n//         Premiered: \r\n//         <input type=\"date\" name=\"premiered\" value={premiered} onChange={ e => setPremiered(e.target.value) } />\r\n//     </label><br />\r\n//     <button type=\"submit\" className=\"btn btn-danger\" onClick={e => handleSubmit(e) }>Save</button>\r\n//     <button type=\"submit\" className=\"btn btn-danger\" onClick={ e => handleCancel(e) }>Cancel</button>\r\n//     { changed ? <Redirect to='allmovies' /> : null}\r\n// </div>\r\n// </form>","import React, { useState } from 'react';\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport {DropdownButton, Dropdown, Button } from 'react-bootstrap';\r\n\r\nimport { updateMovieDataInFirebase } from '../../firebase/firebase.utils';\r\n\r\nconst EditMovie = () => {\r\n\r\n    const location = useLocation();\r\n    const movie = location.state.movie;\r\n\r\n    const [name, setName] = useState(movie.name);\r\n    const [image, setImage] = useState(movie.image); // medium\r\n    const [premiered, setPremiered] = useState(movie.premiered);\r\n    const [genres, setGenres] = useState(movie.genres);\r\n\r\n    const [changed, setChanged] = useState(false);\r\n\r\n    const handleChanges = (e) => {\r\n        e.preventDefault();\r\n        updateMovieDataInFirebase(movie.id, name, image, premiered, genres);\r\n        alert('Details changed successfully');\r\n        setChanged(true);\r\n    }   \r\n\r\n    return(\r\n        <div>\r\n        <h2>Movies</h2>\r\n        <h4>Edit movie: {name}</h4>\r\n             <div className=\"container py-3\">\r\n                 <div className=\"row\">\r\n                     <div className=\"mx-auto col-sm-6\">\r\n                         <div className=\"card bg-dark\" >\r\n                             <div className=\"card-header\">\r\n                                 <h4 className=\"mb-0\">Movie Information</h4>\r\n                             </div>\r\n                             <div className=\"card-body\">\r\n                                 <form className=\"form\" role=\"form\" autoComplete=\"off\">\r\n                                     <div className=\"form-group row\">\r\n                                         <label className=\"col-lg-3 col-form-label form-control-label\">Name: </label>\r\n                                         <div className=\"col-lg-9\">\r\n                                             <input className=\"form-control\" type=\"text\" value={name} onChange={ e => setName(e.target.value)} />\r\n                                         </div>\r\n                                     </div>\r\n                                     <div className=\"form-group row\">\r\n                                         <label className=\"col-lg-3 col-form-label form-control-label\">Iamge Url: </label>\r\n                                         <div className=\"col-lg-9\">\r\n                                             <input className=\"form-control\" type=\"text\" value={image} onChange={ e => setImage(e.target.value)} />\r\n                                         </div>\r\n                                     </div>\r\n\r\n                                     <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Premiered: </label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input className=\"form-control\" type=\"date\" value={premiered} onChange={ e => setPremiered(e.target.value)} />\r\n                                        </div>\r\n                                     </div>\r\n                                 \r\n                                     <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Genres: </label>\r\n                                        <div className=\"col-lg-9\">\r\n                                        \r\n                                            <DropdownButton className=\"btn btn-danger btn-sm rounded-0\"\r\n                                                title='See all' size=\"sm\" variant='Warning'>\r\n                                               { \r\n                                                   genres.map( (genr, index) => {\r\n                                                       return <Dropdown.Item key={index} eventKey={index}>{genr}</Dropdown.Item>\r\n                                                   } )\r\n                                                }\r\n                                                \r\n                                            </DropdownButton>\r\n                                            <Button className=\"btn btn-danger btn-sm rounded-0\" type=\"button\" data-toggle=\"tooltip\" \r\n                                                data-placement=\"top\" title=\"Add\"  size=\"sm\"\r\n                                                >\r\n                                                <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                     <div className=\"form-group row\">\r\n                                         <label className=\"col-lg-3 col-form-label form-control-label\"></label>\r\n                                         <div className=\"col-lg-9\">\r\n                                             <input type=\"button\" className=\"btn btn-danger\" value=\"Save Changes\" onClick={ e => handleChanges(e) } />\r\n                                             <Link to='allmovies' className=\"btn btn-secondary\">Cancel</Link>\r\n                                             { changed ? <Redirect to='allmovies' /> : null}\r\n                                         </div>\r\n                                     </div>\r\n                                 </form>\r\n                             </div>\r\n                         </div>\r\n             </div>\r\n         </div>\r\n     </div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default EditMovie;","import React, { useState } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Modal, Button, DropdownButton } from 'react-bootstrap';\r\n\r\nimport { deleteUserFromFirebase } from '../../firebase/firebase.utils';\r\n\r\n//<Link to=\"signup\" classNameName=\"badge badge-warning\"> Delete </Link>\r\n\r\nconst UserCard = ({user}) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () =>{ \r\n        setShow(false);\r\n    }\r\n    const handleShow = () => { \r\n        setShow(true);\r\n    }\r\n\r\n    const checkPermissionsTrue = (permissions) => {\r\n        const keys = Object.keys(permissions[0]);\r\n        const filtered = keys.filter( key => permissions[0][key] === true);\r\n        return filtered;\r\n    }\r\n\r\n    const deleteUser = (e) => {\r\n        e.preventDefault();\r\n        handleClose();\r\n        deleteUserFromFirebase(user.id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br /><br />\r\n            <div className=\"card text-white bg-dark mb-3\" style={{maxWidth: \"18rem\"}}>\r\n                <div className=\"card-header\">\r\n                    <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i>\r\n                    <span> {user.email} </span>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{user.displayName}</h5>\r\n                    <p className=\"card-text\">\r\n                        Created data:  <br />\r\n                        \r\n                    </p>\r\n                    <DropdownButton\r\n                        style=\"default\"\r\n                        size=\"small\"\r\n                        style={{ maxHeight: \"28px\" }}\r\n                        title={\"Permissions\"}\r\n                        key={1}\r\n                        id=\"dropdown-size-small\"\r\n                        variant=\"secondary\"     \r\n                    >\r\n                        <ul className=\"card-body\">\r\n                        Permissions: \r\n                        \r\n                        {\r\n                            checkPermissionsTrue(user.permissions).map( (p, index) =>{\r\n                                return <li key={index}>{p}</li> })\r\n                        }\r\n                        \r\n                        </ul>\r\n                        </DropdownButton>\r\n                </div>\r\n                <div className=\"card-footer bg-transparent\">\r\n                    <li className=\"list-inline-item\">\r\n                        <Link to={{pathname: '/edituser', state:{ user}}}\r\n                            className=\"btn btn-danger btn-sm rounded-0\" type=\"button\" \r\n                            data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit\">\r\n                            <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>    \r\n                        </Link>\r\n                    </li>     \r\n                      \r\n                    <li className=\"list-inline-item\">\r\n                        <Button className=\"btn btn-danger btn-sm rounded-0\" type=\"button\" data-toggle=\"tooltip\" \r\n                                data-placement=\"top\" title=\"Delete\"\r\n                                onClick={e => handleShow(e)}>\r\n                            <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                        </Button>\r\n                    </li>\r\n                    \r\n                    \r\n                            <Modal show={show} onHide={handleClose} >\r\n                                 <div className=\"card text-white bg-dark mb-3\">\r\n                                    <Modal.Header closeButton>\r\n                                        <Modal.Title>Delete User</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        Are you sure you want to delete the user {user.displayName}?\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer>\r\n                                        <Button variant=\"danger\" onClick={e => deleteUser(e) }>\r\n                                            Yes\r\n                                        </Button>\r\n                                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                                            No\r\n                                        </Button>\r\n                                    </Modal.Footer>\r\n                                </div>\r\n                            </Modal>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCard;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getUsersList, getPermissionsUsers, SetUsersWithPermissions } from '../../redux/user/user.action';\r\n\r\nimport { firestore, getCollectionListSnapshotToMap,\r\n    getCollectionListusersPermissionsSnapShotToMap,\r\n    onAuthStateChangeFirebase } from '../../firebase/firebase.utils';\r\n\r\nimport UserCard from './UserCard';\r\n\r\n// Only fron Admin!!!!!!\r\nconst AllUserManage = () => {\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [usersPermissions, setUsersPermissions] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const usersList = useSelector(state => state.user.users);\r\n    // const usersPermissionsList = useSelector(state => state.user.usersPermissions);\r\n\r\n    useEffect( () => {    \r\n        // const collectionRef = firestore.collection('users');\r\n        // collectionRef.onSnapshot(async snapshot => {\r\n        //     const collection = getCollectionListSnapshotToMap(snapshot);\r\n        //     dispatch(getUsersList(collection));\r\n        // })\r\n\r\n        // const collectionRef1 = firestore.collection('permissions');\r\n        // collectionRef1.onSnapshot(async snapshot => {\r\n        //     const collection =  getCollectionListusersPermissionsSnapShotToMap(snapshot);\r\n        //     dispatch(getPermissionsUsers(collection));\r\n        // })\r\n\r\n        const collectionRef = firestore.collection('users');\r\n        collectionRef.onSnapshot(async snapshot => {\r\n            const collection = getCollectionListSnapshotToMap(snapshot);\r\n            setUsers(collection);\r\n        })\r\n  \r\n\r\n        const collectionRef1 = firestore.collection('permissions');\r\n        collectionRef1.onSnapshot(async snapshot => {\r\n            const collection =  getCollectionListusersPermissionsSnapShotToMap(snapshot);\r\n            setUsersPermissions(collection);\r\n        })\r\n        \r\n      }, []);\r\n\r\n      useEffect( () => {\r\n            users.map(user => {\r\n                const userPremission = usersPermissions.filter( userp => user.id === userp.id )\r\n                user['permissions'] = userPremission;\r\n            });\r\n            dispatch(SetUsersWithPermissions(users));\r\n      },[usersPermissions])\r\n    \r\n    return (\r\n        <div>\r\n            <br /><br /><br />\r\n            <h1 className=\"text-center\"> Users List: </h1>\r\n            <div className=\"card-group justify-content-center\">\r\n                {\r\n                    (usersList) ? \r\n                    ( usersList.map( user => {\r\n                            return( \r\n                                <div key={user.id}>\r\n                                    <UserCard  user={user} />\r\n                                </div>\r\n                            )\r\n                        } )) : null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllUserManage;","const TypesPermissions = {\r\n    vs: 'viewSubscriptions',\r\n    cs: 'createSubscriptions',\r\n    us: 'updateSubscriptions',\r\n    ds: 'deleteSubscriptions',\r\n    vmovies: 'viewMovies',\r\n    cm: 'createMovies',\r\n    um:'updateMovies',\r\n    dm:'deleteMovies'\r\n}\r\n\r\nexport default TypesPermissions;","import React, { useState } from 'react';\r\n\r\nimport { Form } from 'react-bootstrap';\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport TypesPermissions from './permissionsTypes';\r\n\r\nimport { addNewUser } from '../../firebase/firebase.utils';\r\n\r\nconst AddUser = () => {\r\n\r\n    const [displayName, setDisplayName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [permissions, setPermissions] = useState([]);\r\n\r\n    const [changed, setChanged] = useState(false);\r\n\r\n    const handleChanges = (e) => {\r\n        e.preventDefault();\r\n        if(displayName && email) {\r\n            const createdAt = new Date();\r\n            addNewUser('users', {displayName, email, createdAt});\r\n            alert('Details saved successfully');\r\n            setChanged(true);\r\n\r\n        }\r\n        else{\r\n            alert('You muse insert name & email');\r\n            setDisplayName('');\r\n            setEmail('');\r\n        }\r\n    }   \r\n\r\n    return(\r\n        <div>\r\n            <br /><br /><br />\r\n            <h1 className=\"text-center\"> Users </h1>\r\n            <div className=\"container py-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"mx-auto col-sm-6\">\r\n                        <div className=\"card bg-dark\" >\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"mb-0\">Add new user</h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form className=\"form\" role=\"form\" autoComplete=\"off\">\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Name</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"text\" onChange={ e => setDisplayName(e.target.value)} />\r\n                                            </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Email</label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input className=\"form-control\" type=\"email\" onChange={ e => setEmail(e.target.value)} />\r\n                                        </div>\r\n                                    </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\">Permissions</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                    \r\n                                                <Form.Group controlId=\"formBasicCheckbox\">\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.vs} label={TypesPermissions.vs} \r\n                                                            />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.cs} label={TypesPermissions.cs}  \r\n                                                             />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.us} label={TypesPermissions.us} \r\n                                                            />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.ds} label={TypesPermissions.ds} \r\n                                                           />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.vmovies}  label={TypesPermissions.vmovies} \r\n                                                             />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.cm} label={TypesPermissions.cm} \r\n                                                             />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.um} label={TypesPermissions.um}\r\n                                                           />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.dm} label={TypesPermissions.dm}  \r\n                                                             />\r\n                                                        \r\n                                                </Form.Group>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\"></label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input type=\"button\" className=\"btn btn-danger\" value=\"Add user\" onClick={ e => handleChanges(e) } />\r\n                                                <Link to='manageuserss' className=\"btn btn-secondary\">Cancel</Link>\r\n                                                { changed ? <Redirect to='manageusers' /> : null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUser;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { firestore, addNewUser, isUserNameExist,\r\n        getCollectionListSnapshotToMapUsersLogin } from '../../firebase/firebase.utils';\r\n\r\nimport { getUserLoginList } from '../../redux/user/user.action';\r\n\r\nconst AddUserByAdmin = () => {\r\n\r\n    const [userName, setUserName] = useState('');\r\n    \r\n    const [changed, setChanged] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const usersList = useSelector(state => state.user.usersLoginList);\r\n\r\n    useEffect( () => {\r\n        const collectionRef = firestore.collection('usersLogin');\r\n            collectionRef.onSnapshot(async snapshot => {\r\n                    const collection = getCollectionListSnapshotToMapUsersLogin(snapshot);\r\n                    dispatch(getUserLoginList(collection));\r\n                })\r\n    },[]);\r\n\r\n      //check if user name from admin already exist\r\n    const isUserNameExist = () => {\r\n        let flag = true\r\n        usersList.forEach( user => {\r\n            if(user.userName === userName)\r\n                flag = false;\r\n        })\r\n        return flag;\r\n    }\r\n    \r\n    const handleChanges = (e) => {\r\n        e.preventDefault();\r\n        if(userName) {\r\n            try {\r\n                const createdAt = new Date();\r\n                const flag = isUserNameExist(userName);\r\n                if (flag)  \r\n                {\r\n                    addNewUser('usersLogin', {userName, createdAt});\r\n                    alert('Details saved successfully');\r\n                    setChanged(true);\r\n                }\r\n                else\r\n                    alert(`The user name ${userName} already exist !`);\r\n                \r\n\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        else{\r\n            alert('You must insert user name');\r\n            setUserName('');\r\n        }\r\n    }   \r\n\r\n    return(\r\n        <div>\r\n            <br /><br /><br />\r\n            <h1 className=\"text-center\"> Users </h1>\r\n            <div className=\"container py-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"mx-auto col-sm-6\">\r\n                        <div className=\"card bg-dark\" >\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"mb-0\">Add new user</h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form className=\"form\" role=\"form\" autoComplete=\"off\">\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">User Name</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"text\" onChange={ e => setUserName((e.target.value).toLowerCase())} />\r\n                                            </div>\r\n                                    </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\"></label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input type=\"button\" className=\"btn btn-danger\" value=\"Add user\" onClick={ e => handleChanges(e) } />\r\n                                                <Link to='manageusers' className=\"btn btn-secondary\">Cancel</Link>\r\n                                                { changed ? <Redirect to='manageusers' /> : null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUserByAdmin;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Form } from 'react-bootstrap';\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport TypesPermissions from './permissionsTypes';\r\n\r\nimport { updateUserDateInFireBase, updateUserPermissionsDateInFireBase } from '../../firebase/firebase.utils';\r\n\r\nconst EditUser = () => {\r\n\r\n    const location = useLocation();\r\n    const user = location.state.user\r\n\r\n    const [name, setName] = useState(user.displayName);\r\n    const [email, setEmail] = useState(user.email);\r\n    const [permissions, setPermissions] = useState(user.permissions);\r\n    \r\n    const [viewS, setViewS] = useState(permissions[0][TypesPermissions.vs]);\r\n    const [createS, setCreateS] = useState(permissions[0][TypesPermissions.cs]);\r\n    const [updateS, setUpdateS] = useState(permissions[0][TypesPermissions.us]);\r\n    const [deleteS, setDeleteS] = useState(permissions[0][TypesPermissions.ds]);\r\n    const [viewM,setViewM] = useState(permissions[0][TypesPermissions.vmovies]);\r\n    const [createM, setCreateM] = useState(permissions[0][TypesPermissions.cm]);\r\n    const [updateM, setUpdateM] = useState(permissions[0][TypesPermissions.um]);\r\n    const [deleteM, setDeleteM] = useState(permissions[0][TypesPermissions.dm]);\r\n\r\n\r\n    const [changed, setChanged] = useState(false);\r\n\r\n    const permissionschange = (func, e, typeP, flag) => {\r\n        func(e.target.checked);\r\n        permissions[0][typeP] = e.target.checked;\r\n        setPermissions(permissions);\r\n    }\r\n\r\n    const handlePermissions = e => {\r\n        if(e.target.id === TypesPermissions.vs) {\r\n            permissionschange(setViewS, e, TypesPermissions.vs, viewS);\r\n            // setViewS(e.target.checked);\r\n            // permissions[0][TypesPermissions.vs] = viewS;\r\n            // setPermissions(permissions);\r\n        }\r\n        else if (e.target.id === TypesPermissions.cs)\r\n            permissionschange(setCreateS, e, TypesPermissions.cs, createS);\r\n        else if (e.target.id === TypesPermissions.us)\r\n            permissionschange(setUpdateS, e, TypesPermissions.us, updateS);\r\n        else if (e.target.id === TypesPermissions.ds)\r\n            permissionschange(setDeleteS, e, TypesPermissions.ds, deleteS);\r\n        else if (e.target.id === TypesPermissions.vmovies)\r\n            permissionschange(setViewM, e, TypesPermissions.vmovies, viewM);\r\n        else if (e.target.id === TypesPermissions.cm)\r\n            permissionschange(setCreateM, e, TypesPermissions.cm, createM);\r\n        else if (e.target.id === TypesPermissions.um)\r\n            permissionschange(setUpdateM, e, TypesPermissions.um, updateM);\r\n        else if (e.target.id === TypesPermissions.dm)\r\n            permissionschange(setDeleteM, e, TypesPermissions.dm, deleteM);\r\n    }\r\n\r\n    const handleChanges = (e) => {\r\n        e.preventDefault();\r\n        updateUserDateInFireBase(user.id, name, email, user.createdAt);\r\n        updateUserPermissionsDateInFireBase(user.id, permissions[0]);\r\n        alert('Details changed successfully');\r\n        setChanged(true);\r\n    }   \r\n\r\n    return(\r\n        <div>\r\n           <h2>Users</h2>\r\n           <h4>Edit user: {name}</h4>\r\n                <div className=\"container py-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"mx-auto col-sm-6\">\r\n                            <div className=\"card bg-dark\" >\r\n                                <div className=\"card-header\">\r\n                                    <h4 className=\"mb-0\">User Information</h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <form className=\"form\" role=\"form\" autoComplete=\"off\">\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\">Name</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"text\" value={name} onChange={ e => setName(e.target.value)} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\">Email</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"email\" value={email} onChange={ e => setEmail(e.target.value)} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\">Permissions</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                \r\n                                                <Form.Group controlId=\"formBasicCheckbox\">\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.vs} label={TypesPermissions.vs} checked={viewS} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.cs} label={TypesPermissions.cs} checked={createS} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.us} label={TypesPermissions.us} checked={updateS} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.ds} label={TypesPermissions.ds} checked={deleteS} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.vmovies}  label={TypesPermissions.vmovies} checked={viewM} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.cm} label={TypesPermissions.cm} checked={createM} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.um} label={TypesPermissions.um} checked={updateM} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.dm} label={TypesPermissions.dm} checked={deleteM} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    \r\n                                                </Form.Group>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\"></label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input type=\"button\" className=\"btn btn-danger\" value=\"Save Changes\" onClick={ e => handleChanges(e) } />\r\n                                                <Link to='allusers' className=\"btn btn-secondary\">Cancel</Link>\r\n                                                { changed ? <Redirect to='allusers' /> : null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditUser;\r\n\r\n\r\n    // useEffect( () => {\r\n    //     setExtractPermissions(getListPermission(permissions));\r\n    // },[]);\r\n\r\n    // const getListPermission = (permissions) => {\r\n    //     delete permissions[0]['id']\r\n    //     console.log(permissions);\r\n\r\n    //     // const keys = Object.keys(permissions[0]);\r\n    //     // const filterId = keys.filter( key => {\r\n    //     //     if(key !== 'id')\r\n    //     //         return key\r\n    //     // });\r\n    //     // console.log(filterId)\r\n    //     // const maps = filterId.map( p => permissions[0][p])\r\n    //     // console.log(maps)\r\n    //     // return maps;\r\n    // }\r\n\r\n    // permissions.map ( p => {\r\n    //     return <Form.Check type=\"checkbox\" label={p} checked={permissions[0][p]} onChange={(e) => handlePermissions(e, p)} />\r\n    // }\r\n    // )\r\n\r\n  ","import React, { useState, useRef, useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Card, Nav, Button, Modal, Form, Dropdown } from 'react-bootstrap';\r\n\r\nimport { deleteMemberFromFirebase, checkMemberInFirebase, firestore } from '../../firebase/firebase.utils';\r\n\r\nconst MemberCard = ({member}) => {\r\n\r\n    const moviesList = useSelector(state => state.movies.movies);\r\n    const moviesOfmembers = useSelector(state => state.members.moviesByMember);\r\n    const [moviesByMemberId, setmoviesByMemberId] = useState([]);\r\n    const [filteredList, setFilteredList] = useState([]);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [activeKey, setActiveKey] = useState('/details');\r\n    const [isSubNewMovie, setIsSubNewMovie] = useState(false);\r\n\r\n    const [movieId, setMovieId] = useState('');\r\n    const [date,setDate] = useState('');\r\n    const [movieName, setMovieName] = useState('');\r\n    \r\n    const handleClose = () => { \r\n        setShow(false);\r\n    }\r\n\r\n    const handleShow = () => { \r\n        setShow(true);\r\n    }\r\n\r\n    const deleteUser = (e) => {\r\n        e.preventDefault();\r\n        handleClose();\r\n        deleteMemberFromFirebase(member.id, 'members');\r\n        deleteMemberFromFirebase(member.id, 'subscriptions');\r\n\r\n\r\n    }\r\n\r\n    const handleSubNewMovie = e => {\r\n        e.preventDefault();\r\n        setIsSubNewMovie(!isSubNewMovie);\r\n        if(moviesList && moviesByMemberId)\r\n            filteredMoviesExist();\r\n    }\r\n\r\n    const handleMovieSubScripbe = (e, id, name) => {\r\n        e.preventDefault();\r\n        setMovieId(id);\r\n        setMovieName(name);\r\n    }\r\n\r\n    const handleSubscribe = e => {\r\n        e.preventDefault();\r\n        if(movieId && date) {\r\n            // const obj = { movieId, date };\r\n            // console.log(obj)\r\n            // const movies = [...moviesByMemberId , obj];\r\n            // setmoviesByMemberId([...moviesByMemberId , obj]);  /// to check assingment!!!\r\n            const memberId = member.id;\r\n            checkMemberInFirebase('subscriptions', memberId, {movies: moviesByMemberId} );\r\n            console.log(moviesByMemberId )\r\n            // checkMemberInFirebase('subscriptions', memberId, obj );\r\n            alert(`${member.name} member is subscribed to ${movieName} movie`);\r\n            \r\n        }\r\n        else {\r\n            alert('You must choose movie & date');\r\n            setMovieId('');\r\n            setDate('');\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(moviesOfmembers.length > 0) {\r\n            const memberMovies = moviesOfmembers.filter( m => m.id === member.id);\r\n            setmoviesByMemberId(memberMovies[0].movies);\r\n        }\r\n    }, [moviesOfmembers]);\r\n\r\n    useEffect( () => {\r\n        if(movieId && date) {\r\n            const obj = { movieId, date };\r\n            // const movies = [...moviesByMemberId , obj];\r\n            setmoviesByMemberId([...moviesByMemberId , obj]);  /// to check assingment!!!\r\n        }\r\n    }, [movieId, date])\r\n   \r\n    const filteredMoviesExist = () => {\r\n        const filtered  = moviesList.filter(function(array_el){\r\n            return moviesByMemberId.filter(function(anotherOne_el){\r\n                return anotherOne_el.movieId == array_el.id;\r\n            }).length == 0\r\n        });\r\n        setFilteredList(filtered);\r\n    }\r\n       \r\n    return(\r\n        <div>\r\n            <Card bg='dark'>\r\n                <Card.Header bg='secondary'>\r\n                    <Nav variant=\"tabs\" defaultActiveKey=\"#details\"\r\n                        activeKey=\"/details\"\r\n                        onSelect={(selectedKey) => setActiveKey(selectedKey)}>\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"/details\">Member Details</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"watched\">Movies watched</Nav.Link>\r\n                    </Nav.Item>\r\n                    </Nav>\r\n                </Card.Header>\r\n                {\r\n                    (activeKey === '/details') ? \r\n                    <div>\r\n                        <Card.Body>\r\n                            <Card.Title>{member.name}</Card.Title>\r\n                            <Card.Text>\r\n                                Email: {member.email}<br />\r\n                                City: {member.city}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <li className=\"list-inline-item\">\r\n                                <Link to={{pathname: '/editmember', state:{ member}}}\r\n                                    className=\"btn btn-danger btn-sm rounded-0\" type=\"button\" \r\n                                    data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit\">\r\n                                    <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>    \r\n                                </Link>\r\n                            </li>     \r\n                    \r\n                            <li className=\"list-inline-item\">\r\n                                <Button className=\"btn btn-danger btn-sm rounded-0\" type=\"button\" data-toggle=\"tooltip\" \r\n                                        data-placement=\"top\" title=\"Delete\"\r\n                                        onClick={e => handleShow(e)}>\r\n                                    <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                </Button>\r\n                            </li>\r\n                            <Modal show={show} onHide={handleClose} >\r\n                                        <div className=\"card text-white bg-dark mb-3\">\r\n                                            <Modal.Header closeButton>\r\n                                                <Modal.Title>Delete Member</Modal.Title>\r\n                                            </Modal.Header>\r\n                                            <Modal.Body>\r\n                                                Are you sure you want to delete the user {member.name}?\r\n                                            </Modal.Body>\r\n                                            <Modal.Footer>\r\n                                                <Button variant=\"danger\" onClick={e => deleteUser(e) }>\r\n                                                    Yes\r\n                                                </Button>\r\n                                                <Button variant=\"secondary\" onClick={handleClose}>\r\n                                                    No\r\n                                                </Button>\r\n                                            </Modal.Footer>\r\n                                        </div>\r\n                                    </Modal>\r\n                        </Card.Footer>\r\n                    </div> : \r\n                    <div>\r\n                        <Card.Body>\r\n                            <Card.Title>Movies watched</Card.Title>\r\n                            <Card.Text as=\"ul\">\r\n                                    \r\n                                    {\r\n                                        (moviesByMemberId) ?\r\n                                        moviesByMemberId.map( (m, index) => {\r\n                                        {   var name = '';\r\n                                            var names = moviesList.filter( movie => {\r\n                                            if(movie.id === m.movieId){\r\n                                                name = movie.name\r\n                        \r\n                                            }\r\n                                                return name\r\n                                        } ) }\r\n                                        return <li key={index}>\r\n                                                Movie : {name} <br />\r\n                                                Date: {m.date}\r\n                                            </li>\r\n                                    } )\r\n                                    : null\r\n                                    }\r\n                                    \r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <Button className=\"btn btn-danger\" onClick={ e => {handleSubNewMovie(e)}}>Subscribe to new movie </Button>\r\n                            {\r\n                                (isSubNewMovie) ? \r\n                                <div>\r\n                                    <br />\r\n                                    <Dropdown>\r\n                                        <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                                            {(!movieName) ? 'Movies List' : `${movieName}` }\r\n                                        </Dropdown.Toggle>\r\n\r\n                                        <Dropdown.Menu>\r\n                                        {\r\n                                            (filteredList.length > 0) ? \r\n                                                (\r\n                                                    filteredList.map( (m, index) => {\r\n                                                        return <Dropdown.Item key={index}\r\n                                                                variant=\"warning\"\r\n                                                                className=\"btn btn-secondary\"\r\n                                                                onClick={e => handleMovieSubScripbe(e, m.id, m.name)}>\r\n                                                                {m.name}\r\n                                                                </Dropdown.Item>\r\n                                                    }) \r\n                                                \r\n                                                )\r\n                                            : \r\n                                                (\r\n                                                    moviesList.map( (m, index) => {\r\n                                                        return <Dropdown.Item key={index}\r\n                                                                variant=\"warning\"\r\n                                                                className=\"btn btn-secondary\"\r\n                                                                onClick={e => handleMovieSubScripbe(e, m.id, m.name)}>\r\n                                                                {m.name}\r\n                                                                </Dropdown.Item>\r\n                                                    }) \r\n                                                \r\n                                            ) \r\n                                        }\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n\r\n                                    <Form.Group controlId=\"dw\">\r\n                                        <Form.Label>Select Date watched:</Form.Label>\r\n                                        <Form.Control className=\"btn btn-secondary\" type=\"date\" name=\"dw\" \r\n                                            placeholder=\"Date watched\" \r\n                                            onChange={e => setDate(e.target.value)} />\r\n                                    </Form.Group>\r\n                                    <Button className=\"btn btn-danger\" onClick={handleSubscribe}>Subscribe</Button>\r\n                                </div> : null\r\n                            }\r\n                        </Card.Footer>\r\n                    </div>\r\n                }\r\n               \r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemberCard;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport MemberCard from './MemberCard';\r\n\r\nimport { firestore, getMoviesByMemberid } from '../../firebase/firebase.utils';\r\n\r\nimport { setMoviesByMember } from '../../redux/members/members.actions';\r\n\r\nconst AllMembers = () => {\r\n\r\n    const members = useSelector(state => state.members.members);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect( ()=> {\r\n        const collectionRef = firestore.collection('subscriptions');\r\n        collectionRef.onSnapshot(async snapshot => {\r\n            const collection = getMoviesByMemberid(snapshot);\r\n            dispatch(setMoviesByMember(collection));\r\n        })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <br/><br/><br/>\r\n            <h1 className=\"text-center\"> Members List: </h1>\r\n            <div className=\"card-group justify-content-center\">\r\n\r\n            {\r\n                members.map( (member, index) => {\r\n                    return <MemberCard key={index} member={member}/>\r\n                })\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllMembers;","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { updateMemberDataInFirebase } from '../../firebase/firebase.utils';\r\n\r\nconst EditMember = () => {\r\n\r\n    const location = useLocation();\r\n    const member = location.state.member;\r\n\r\n    const [name, setName] = useState(member.name);\r\n    const [email, setEmail] = useState(member.email);\r\n    const [city, setCity] = useState(member.city);\r\n\r\n    const [changed, setChanged] = useState(false);\r\n\r\n    const handleChanges = (e) => {\r\n        e.preventDefault();\r\n        updateMemberDataInFirebase(member.id, name, email,city, 'members')\r\n        alert('Details changed successfully');\r\n        setChanged(true);\r\n    }   \r\n\r\n    return(\r\n        <div>\r\n            <br/><br/><br/>\r\n            <h2>Members</h2>\r\n            <h4>Edit member: {name}</h4>\r\n            <div className=\"container py-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"mx-auto col-sm-6\">\r\n                            <div className=\"card bg-dark\" >\r\n                                <div className=\"card-header\">\r\n                                    <h4 className=\"mb-0\">Member Information</h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <form className=\"form\" role=\"form\" autoComplete=\"off\">\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\">Name</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"text\" value={name} onChange={ e => setName(e.target.value)} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\">Email</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"email\" value={email} onChange={ e => setEmail(e.target.value)} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\">City</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"text\" value={city} onChange={ e => setCity(e.target.value)} />\r\n                                            </div>\r\n                                         </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\"></label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input type=\"button\" className=\"btn btn-danger\" value=\"Save Changes\" onClick={ e => handleChanges(e) } />\r\n                                                <Link to='allmembers' className=\"btn btn-secondary\">Cancel</Link>\r\n                                                { changed ? <Redirect to='allmembers' /> : null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMember;","import React, { useState } from 'react';\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { addNewUser } from '../../firebase/firebase.utils';\r\n\r\n\r\nconst AddMember = () => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [city, setCity] = useState('');\r\n\r\n    const [changed, setChanged] = useState(false);\r\n\r\n    const capitalize = (s) => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n      }\r\n\r\n    const handleChanges = (e) => {\r\n        e.preventDefault();\r\n        if(name && email && city) {\r\n            addNewUser('members', {name, email, city});\r\n            alert('Details saved successfully');\r\n            setChanged(true);\r\n        }\r\n        else{\r\n            alert('You muse insert name & email & city');\r\n            setName('');\r\n            setEmail('');\r\n            setCity('');\r\n        }\r\n    }   \r\n\r\n    return(\r\n        <div>\r\n            <br/><br/><br/>\r\n            <h1 className=\"text-center\"> Members </h1>\r\n            <div className=\"container py-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"mx-auto col-sm-6\">\r\n                        <div className=\"card bg-dark\" >\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"mb-0\">Add new member</h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form className=\"form\" role=\"form\" autoComplete=\"off\">\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Name</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"text\" onChange={ e => setName(capitalize(e.target.value))} />\r\n                                            </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Email</label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input className=\"form-control\" type=\"email\" onChange={ e => setEmail(capitalize(e.target.value))} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">City</label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input className=\"form-control\" type=\"text\" onChange={ e => setCity(capitalize(e.target.value))} />\r\n                                        </div>\r\n                                    </div>\r\n                                       \r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\"></label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input type=\"button\" className=\"btn btn-danger\" value=\"Add member\" onClick={ e => handleChanges(e) } />\r\n                                                <Link to='allmembers' className=\"btn btn-secondary\">Cancel</Link>\r\n                                                { changed ? <Redirect to='allmembers' /> : null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMember;","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport { Switch, Route, Redirect  } from 'react-router-dom';\n\nimport Header from './components/header/Header';\nimport LoginPage from './pages/Login/LoginPage';\nimport SignUp from './components/SignUp/SignUp';\nimport SignUpFirstUserName from './components/SignUp/SignUpFirstUserName';\nimport MainPage from './pages/MainPage/MainPage.jsx';\n\nimport ManageUsers from './pages/ManageUsers/ManageUsers.jsx';\nimport Movies from './pages/Movies/Movies.jsx';\nimport Subscriptions from './pages/Subscriptions/Subscriptions.jsx';\n\nimport AllMovies from './pages/Movies/AllMovies';\nimport AddMovie from './pages/Movies/AddMovie';\nimport EditMovie from './pages/Movies/EditMovie';\nimport AllUserManage from './pages/ManageUsers/AllUserManage';\nimport AddUser from './pages/ManageUsers/AddUser';\nimport AddUserByAdmin from './pages/ManageUsers/AddUserByAdmin';\nimport EditUser from './pages/ManageUsers/EditUser';\nimport AllMembers from './pages/Subscriptions/AllMembers';\nimport EditMember from './pages/Subscriptions/EditMember';\nimport AddMember from './pages/Subscriptions/AddMember';\n\nimport { onAuthStateChangeFirebase, addCollectionsAndDocuments } from './firebase/firebase.utils';\n\nimport { connect } from 'react-redux';\nimport { setUserLoggenIn, setUserLoginEmailPass } from './redux/user/user.action';\n\nimport util from './utils/utils';\n\n\n// <Route exact path='/' component={LoginPage} />\n\nfunction App({ loggedIn, setUserLoggenIn, setUserLoginEmailPass }) {\n  // const [movies, setMovies] = useState([]);\n  const [members, setMembers] = useState([]);\n  //  will be to start listening to auth state changes when our application mounts.\n  useEffect( () => {\n    // for first time insert to db in firebase\n    // util.getMovies().then(resp => setMovies(resp));\n    // util.getMembers().then(resp => setMembers(resp));\n\n    const unsubscribe = onAuthStateChangeFirebase(setUserLoggenIn, setUserLoginEmailPass);\n    return () => {\n      unsubscribe();\n    };\n\n  }, []);\n\n    // needs to delete - for first time insert to db in firebase\n    // useEffect( () => {\n    //   addCollectionsAndDocuments('members', members);\n    // }, [members]);\n  \n      // needs to delete - for first time insert to db in firebase\n    // useEffect( () => {\n    //   addCollectionsAndDocuments('movies', movies);\n    // }, [movies]);\n\n  \n  return (\n      <div className=\"App\">\n        <Header loggedIn={loggedIn} />\n            <Switch>  \n              <Route path='/signup' component={SignUp} />\n              <Route path='/signupusername' component={SignUpFirstUserName} />\n              <Route path='/mainpage' component={MainPage} />\n              <Route path='/signin' component={LoginPage} />\n              <Route path='/manageusers' component={ManageUsers} />\n              <Route path='/allusers' component={AllUserManage} />\n              <Route path='/adduser' component={AddUser} />\n              <Route path='/addusername' component={AddUserByAdmin} />\n              <Route path='/edituser' component={EditUser} />\n              <Route path='/movies' component={Movies} />\n              <Route path='/allmovies' component={AllMovies} />\n              <Route path='/editmovie' component={EditMovie} />\n              <Route path='/addmovie' component={AddMovie} />\n              <Route path='/subscriptions' component={Subscriptions} />\n              <Route path='/allmembers' component={AllMembers} />\n              <Route path='/editmember' component={EditMember} />\n              <Route path='/addmember' component={AddMember} />\n            </Switch>\n            { loggedIn ? <Redirect from=\"/signin\" to=\"/mainpage\" /> : <Redirect  to=\"signin\" />  }\n      </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  loggedIn: state.user.loggedIn\n})\n\n\nconst mapDispatchToProps = dispatch => ({\n  setUserLoggenIn: flag => dispatch(setUserLoggenIn(flag)),\n  setUserLoginEmailPass: user => dispatch(setUserLoginEmailPass(user))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import UserActionTypes from './user.type';\r\nconst INITIAL_STATE = {\r\n    currentUser: null,\r\n    loggedIn: false,\r\n    error: null,\r\n    users: [],\r\n    usersPermissions: [],\r\n    usersLoginList : []\r\n}\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case UserActionTypes.LOG_IN_USER:\r\n            return {\r\n                ...state,\r\n                loggedIn: action.payload\r\n            }\r\n        case UserActionTypes.SET_EMAIL_PASS_LOG_IN:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload\r\n            }\r\n        case UserActionTypes.GET_USERS_LIST:\r\n            return {\r\n                ...state,\r\n                users: action.payload\r\n            }\r\n        case UserActionTypes.GET_PERMISSIONS_USERS:\r\n            return {\r\n                ...state,\r\n                usersPermissions: action.payload\r\n            } \r\n        case UserActionTypes.SET_USERS_WITH_PERMISSIONS:\r\n            return{\r\n                ...state,\r\n                users: action.payload\r\n            }\r\n            case UserActionTypes.GET_USERS_LOGIN_LIST:\r\n                return {\r\n                    ...state,\r\n                    usersLoginList: action.payload\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import MoviesActionsTypes from './movies.types';\r\n\r\nconst INITIAL_STATE = {\r\n    movies: []\r\n}\r\n\r\nconst moviesReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case MoviesActionsTypes.SET_MOVIES_FROM_FIRE_STORE:\r\n            return {\r\n                ...state,\r\n                movies: action.payload\r\n            }\r\n        case MoviesActionsTypes.ADD_MOVIE:\r\n            return {\r\n                ...state,\r\n                movies: [...state.movies, action.payload]\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default moviesReducer;","import MembersActionsTypes from './members.types';\r\n\r\nconst INITIAL_STATE = {\r\n    members: [],\r\n    moviesByMember: []\r\n}\r\n\r\nconst membersReducer = (state=INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case MembersActionsTypes.SET_MEMBERS_FROM_FIREBASE:\r\n            return {\r\n                ...state,\r\n                members: action.payload\r\n            }\r\n        case MembersActionsTypes.SET_MOVIES_BY_MEMBER_FROM_FIREBASE:\r\n            return {\r\n                ...state,\r\n                moviesByMember: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default membersReducer;","// represent all the state of the application\r\nimport { combineReducers } from 'redux';\r\n\r\nimport userReducer from './user/user.reducer';\r\nimport moviesReducer from './movies/movies.reducer';\r\nimport membersReducer from './members/members.reducer';\r\n\r\nconst rootReducer = combineReducers ({\r\n    user: userReducer,\r\n    movies: moviesReducer,\r\n    members: membersReducer\r\n});\r\n\r\nexport default rootReducer;\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from './root-reducer';\r\n// import thunk from 'redux-thunk';\r\n\r\n\r\n// if (process.env.NODE_ENV === 'development') {\r\n//     push(logger);\r\n// } \r\n\r\nconst middlewares = [logger];\r\n\r\nexport const store = createStore(rootReducer,  applyMiddleware(...middlewares));\r\n// export const store = createStore(rootReducer,  applyMiddleware(thunk));\r\n\r\nexport default {store};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nimport {store} from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}