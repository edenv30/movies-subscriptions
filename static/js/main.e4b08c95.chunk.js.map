{"version":3,"sources":["firebase/firebase.utils.js","components/header/Header.jsx","redux/user/user.type.js","redux/user/user.action.js","components/SignIn/SignIn.jsx","pages/Login/LoginPage.jsx","components/SignUp/SignUp.jsx","components/SignUp/SignUpFirstUserName.js","redux/movies/movies.types.js","pages/MainPage/MainPage.jsx","redux/movies/movies.actions.js","pages/ManageUsers/ManageUsers.jsx","pages/ManageUsers/permissionsTypes.js","pages/Movies/AllMovies.js","pages/Movies/Movies.jsx","redux/members/members.types.js","pages/Subscriptions/Subscriptions.jsx","redux/members/members.actions.js","pages/Movies/AddMovie.js","pages/Movies/EditMovie.js","pages/ManageUsers/UserCard.js","pages/ManageUsers/AllUserManage.js","pages/ManageUsers/AddUserByAdmin.js","pages/ManageUsers/EditUser.js","pages/Subscriptions/MemberCard.js","pages/Subscriptions/AllMembers.js","pages/Subscriptions/EditMember.js","pages/Subscriptions/AddMember.js","App.js","redux/user/user.reducer.js","redux/movies/movies.reducer.js","redux/members/members.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","permissionsDetails","viewSubscriptions","createSubscriptions","updateSubscriptions","deleteSubscriptions","viewMovies","createMovies","updateMovies","deleteMovies","addCollectionToDocument","collectionKey","uid","objectToAdd","a","collectionRef","collection","batch","newDocRef","doc","set","commit","console","log","createUserProfileDocument","userAuth","additionalData","userRef","get","exists","displayName","email","createdAt","Date","message","addNewUser","collecionName","objToAdd","id","getCollectionListSnapshotToMapUsersLogin","docs","map","data","userName","signup","updateUsersLogin","update","password","createUserWithEmailAndPassword","user","error","addDocumentToCollection","getCollectionListSnapshotToMap","getCollectionListusersPermissionsSnapShotToMap","getCollectionMembersSnapshotToMap","name","city","updateUserDateInFireBase","userData","updateUserPermissionsDateInFireBase","permissions","deleteUserFromFirebase","permissionsUserRef","delete","updateMovieDataInFirebase","image","premiered","genres","movieData","movieRef","deleteMovieFromFirebase","collectionName","updateMemberDataInFirebase","memberData","memberRef","deleteMemberFromFirebase","checkMemberInFirebase","getMoviesByMemberid","movies","Header","loggedIn","useSelector","state","currentUser","Navbar","fixed","expand","variant","bg","Brand","style","fontWeight","color","fontSize","Toggle","aria-controls","Collapse","Nav","className","defaultActiveKey","as","Item","to","activeClassName","activeStyle","Form","inline","onClick","signOut","UserActionType","LOG_IN_USER","SET_EMAIL_PASS_LOG_IN","SET_USER_SIGNUP","GET_USERS_LIST","GET_PERMISSIONS_USERS","SET_USERS_WITH_PERMISSIONS","GET_USERS_LOGIN_LIST","GET_CURRENT_USER_PERMISSIONS","setUserLoginEmailPass","type","UserActionTypes","payload","getUserLoginList","users","connect","dispatch","useState","setEmail","setPassword","handleClick","e","preventDefault","signInWithEmailAndPassword","login","htmlFor","aria-describedby","placeholder","onChange","target","value","LoginPage","useLocation","userId","confirmPassword","setConfirmPassword","setDisplayName","isSubmitted","setIsSubmitted","onChangeHandler","event","currentTarget","handleSubmit","alert","flag","useEffect","SignUpFirstUserName","setUserName","usersList","usersLoginList","useDispatch","isExist","setIsExist","isSignup","setIsSignup","isSubmit","setIsSubmit","setUserId","onSnapshot","snapshot","isSign","forEach","isUserNameExist","toLowerCase","pathname","MoviesActionsTypes","SET_MOVIES_FROM_FIRE_STORE","ADD_MOVIE","MainPage","permissionsUsers","usersPermissions","routeName","encodeURI","userPremission","filter","permission","ManageUsers","TypesPermissions","vs","cs","us","ds","vmovies","cm","um","dm","AllMovies","searchField","currentUserPermissions","moviesList","moviesListTemp","setmoviesListTemp","show","setShow","handleClose","filteredMovies","movie","includes","err","key","width","textAlign","background","src","alt","ListGroup","gener","index","data-toggle","data-placement","title","Button","Modal","onHide","closeButton","Title","Body","Footer","deleteMovie","Movies","setSearchField","MembersActionsTypes","SET_MEMBERS_FROM_FIREBASE","SET_MOVIES_BY_MEMBER_FROM_FIREBASE","Subscriptions","AddMovie","setName","setGenres","setImage","setPremiered","movieToAdd","setMovieToAdd","changed","setChanged","url","validator","isURL","Object","keys","length","addMovie","fetchMyAPI","role","autoComplete","changeName","res","split","changeGenres","handleCancel","EditMovie","capitalizeFirstLetter","str","charAt","toUpperCase","slice","genr","movieName","handleChanges","UserCard","maxWidth","aria-hidden","DropdownButton","size","maxHeight","p","deleteUser","AllUserManage","setUsers","setUsersPermissions","userp","setUsersWithPermissions","AddUserByAdmin","EditUser","setPermissions","viewS","setViewS","createS","setCreateS","updateS","setUpdateS","deleteS","setDeleteS","viewM","setViewM","createM","setCreateM","updateM","setUpdateM","deleteM","setDeleteM","permissionschange","func","typeP","handlePermissions","checked","Group","controlId","Check","label","MemberCard","member","moviesOfmembers","members","moviesByMember","moviesByMemberId","setmoviesByMemberId","filteredList","setFilteredList","activeKey","setActiveKey","isSubNewMovie","setIsSubNewMovie","movieId","setMovieId","date","setDate","setMovieName","handleMovieSubScripbe","memberMovies","m","obj","filteredMoviesExist","filtered","array_el","anotherOne_el","Card","onSelect","selectedKey","Link","eventKey","Text","handleSubNewMovie","Dropdown","Menu","Label","Control","memberId","AllMembers","EditMember","setCity","AddMember","capitalize","s","setUserLoggenIn","callback","callbackDetails","unsubscribe","onAuthStateChanged","snapShot","path","component","SignUp","from","INITIAL_STATE","userReducer","action","moviesReducer","membersReducer","rootReducer","combineReducers","middlewares","logger","store","createStore","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4b08c95.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyCN1VJ-36hCrlmFmMxyTrB7pXn1QubKLf0\",\r\n  authDomain: \"movies-subscriptions.firebaseapp.com\",\r\n  databaseURL: \"https://movies-subscriptions.firebaseio.com\",\r\n  projectId: \"movies-subscriptions\",\r\n  storageBucket: \"movies-subscriptions.appspot.com\",\r\n  messagingSenderId: \"261996716763\",\r\n  appId: \"1:261996716763:web:84505c38bea3ebad8d62fe\",\r\n  measurementId: \"G-BR8W9C4BC3\"\r\n};\r\n\r\n  firebase.initializeApp(config);\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n\r\n  const permissionsDetails = {\r\n    viewSubscriptions: true,\r\n    createSubscriptions: false,\r\n    updateSubscriptions: false,\r\n    deleteSubscriptions: false,\r\n    viewMovies: true,\r\n    createMovies: false,\r\n    updateMovies: false,\r\n    deleteMovies: false\r\n  }\r\n\r\n  export const addCollectionToDocument = async (collectionKey, uid, objectToAdd) => {\r\n    try {\r\n      const collectionRef = firestore.collection(collectionKey);\r\n      //with batch object we add al the sets must to add all if not not set anyone\r\n      const batch = firestore.batch();\r\n      const newDocRef = collectionRef.doc(uid); // firebase render an id for the collection\r\n      batch.set(newDocRef, objectToAdd);\r\n      // async request -> return a promise\r\n      return await batch.commit();\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n   // function that take the user object authentication and store inside our database\r\n  // async function, because we make an api request\r\n  export const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if(!userAuth) return; // if the user signin - if user Auth not exist / userAuth == null -> false -> !false\r\n    \r\n    // if the user Auth exist, we go in firestore an query\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const snapShot = await userRef.get()\r\n    //if userAuth doesn't exist, we create a one using the document object reference (not the snapshot, snapshot for the data)\r\n    if(!snapShot.exists) {  // if user not exist we create him\r\n      const { displayName, email } = userAuth;\r\n      const createdAt = new Date();\r\n      addCollectionToDocument('permissions', userAuth.uid, permissionsDetails);\r\n      try {\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData\r\n        })\r\n        // add collection permissions to user\r\n      } catch(err) {\r\n          console.log('error creating user', err.message);\r\n      }\r\n    }\r\n    return userRef;\r\n\r\n  } \r\n\r\n  export const addNewUser = async(collecionName, objToAdd) => {\r\n    try {\r\n      const collectionRef = firestore.collection(collecionName);\r\n      //with batch object we add al the sets must to add all if not not set anyone\r\n      const batch = firestore.batch();\r\n      const newDocRef = collectionRef.doc(); // firebase render an id for the collection\r\n      if(collecionName === 'users')\r\n        objToAdd.id=newDocRef.id;\r\n      if(collecionName === 'usersLogin')\r\n        addCollectionToDocument('permissions', newDocRef.id, permissionsDetails);\r\n      batch.set(newDocRef, objToAdd);\r\n      // async request -> return a promise\r\n      return await batch.commit();\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n   //for usersLogin\r\n  export const getCollectionListSnapshotToMapUsersLogin = (collection) => {\r\n\r\n    const transformedCollections = collection.docs.map( doc => {\r\n      const { userName, signup } = doc.data();\r\n\r\n      return {\r\n        id: doc.id,\r\n        userName,\r\n        signup\r\n      }\r\n    } );\r\n    return transformedCollections;\r\n  }\r\n\r\n  // Listening to Authentication Provider\r\n  // This will keep a connection to the firebase authentication provider, \r\n  // and change whenever the backend state of the logged in user changes.\r\n  // export const onAuthStateChangeFirebase = (callback) => {\r\n  //   return auth.onAuthStateChanged( user => {\r\n  //     console.log(user)\r\n  //     if(user) {\r\n  //       callback(true); // set loggedIn to true\r\n  //       console.log('The user is logged in')\r\n  //     }\r\n  //     else {\r\n  //       callback(false);\r\n  //       console.log(\"The user is not logged in\");\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  export const onAuthStateChangeFirebase = (callback, callbackDetails) => {\r\n    return auth.onAuthStateChanged( async userAuth => {\r\n      if(userAuth) {\r\n        callback(true); // set loggedIn to true\r\n        const userRef = await createUserProfileDocument(userAuth);\r\n        userRef.onSnapshot( snapShot => {\r\n          callbackDetails({ \r\n            id: snapShot.id,\r\n            ...snapShot.data()\r\n          })\r\n        } );\r\n        console.log('The user is logged in');\r\n      }\r\n      else {\r\n        callback(false);\r\n        callbackDetails(userAuth);\r\n        console.log(\"The user is not logged in\");\r\n      }\r\n    });\r\n  }\r\n\r\n  // for usersLogin update signup when the user signup \r\n  export const updateUsersLogin = async (collectionKey, id) => {\r\n    try {\r\n      const userRef = firestore.collection(collectionKey).doc(id);\r\n      //with batch object we add al the sets must to add all if not not set anyone\r\n      const batch = firestore.batch();\r\n      batch.update(userRef, {signup: true});\r\n      // async request -> return a promise\r\n      return await batch.commit();\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  export const signup = async (userName, displayName, email, password) => {\r\n    try {\r\n      const {user} = await auth.createUserWithEmailAndPassword(email, password);\r\n      await createUserProfileDocument(user, {userName, displayName});\r\n      return true;\r\n    }\r\n    catch(err) {\r\n      console.error(err);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  export const login = (email, password) => {\r\n    auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  export const logout = () => {\r\n    auth.signOut();\r\n  }\r\n\r\n  // adding data one time \r\n  export const addCollectionsAndDocuments = async (collectionKey, objectsToAdd) => {\r\n    try {\r\n      const collectionRef = firestore.collection(collectionKey);\r\n      //with batch object we add al the sets must to add all if not not set anyone\r\n      const batch = firestore.batch();\r\n      objectsToAdd.forEach( obj => {\r\n        const newDocRef = collectionRef.doc(); // firebase render an id for the collection\r\n        batch.set(newDocRef, obj);\r\n      });\r\n      // async request -> return a promise\r\n      return await batch.commit();\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  //add one item to db\r\n  export const addDocumentToCollection = async (collectionKey, objectToAdd) => {\r\n    try {\r\n      const collectionRef = firestore.collection(collectionKey);\r\n      //with batch object we add al the sets must to add all if not not set anyone\r\n      const batch = firestore.batch();\r\n      const newDocRef = collectionRef.doc(); // firebase render an id for the collection\r\n      batch.set(newDocRef, objectToAdd);\r\n      // async request -> return a promise\r\n      return await batch.commit();\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  //for movies\r\n  export const convertCollectionsSnapshotToMap = (collections) => {\r\n    const transformedCollections = collections.docs.map( doc => {\r\n      const { name, genres, image, premiered } = doc.data();\r\n\r\n      return {\r\n        routeName: encodeURI(name.toLowerCase()),\r\n        id: doc.id,\r\n        name, \r\n        genres, \r\n        image, \r\n        premiered\r\n      }\r\n    } );\r\n    return transformedCollections;\r\n\r\n    // return transformedCollections.reduce((accumulator, collection) => {\r\n    //   // accumulator[collection.name.toLowerCase()] = collection;\r\n    //   accumulator['movies'] = collection;\r\n    //   console.log(accumulator)\r\n    //   return accumulator;\r\n    // }, {})\r\n  } \r\n\r\n  //for users \r\n  export const getCollectionListSnapshotToMap = (collection) => {\r\n\r\n    const transformedCollections = collection.docs.map( doc => {\r\n      const { displayName, email, createdAt } = doc.data();\r\n\r\n      return {\r\n        id: doc.id,\r\n        displayName, \r\n        email, \r\n        createdAt\r\n      }\r\n    } );\r\n    return transformedCollections;\r\n  }\r\n\r\n  // for users permissions\r\n  export const getCollectionListusersPermissionsSnapShotToMap = (collection) => {\r\n    const transformedCollections = collection.docs.map( doc => {\r\n      const {   viewSubscriptions, createSubscriptions, updateSubscriptions, deleteSubscriptions,\r\n                viewMovies, createMovies, updateMovies, deleteMovies } = doc.data();\r\n        return {\r\n                id: doc.id,\r\n                viewSubscriptions, \r\n                createSubscriptions, \r\n                updateSubscriptions,\r\n                deleteSubscriptions,\r\n                viewMovies,\r\n                createMovies,\r\n                updateMovies,\r\n                deleteMovies\r\n                }\r\n    } )\r\n    return transformedCollections;\r\n  }\r\n\r\n  //for members\r\n  export const getCollectionMembersSnapshotToMap = (collection) => {\r\n    const transformedCollections = collection.docs.map( doc => {\r\n      const { name, email, city } = doc.data();\r\n\r\n      return {\r\n        id: doc.id,\r\n        name, \r\n        email, \r\n        city\r\n      }\r\n    } );\r\n    return transformedCollections;\r\n  } \r\n\r\n  //update user data in firebase\r\n  export const updateUserDateInFireBase = async (id, name, email, createdAt) => {\r\n    var userData = {\r\n      displayName: name,\r\n      id: id,\r\n      email: email,\r\n      createdAt: createdAt,\r\n    };\r\n\r\n    try {\r\n      const userRef = firestore.collection('users').doc(id);\r\n      //with batch object we add al the sets must to add all if not not set anyone\r\n      const batch = firestore.batch();\r\n      batch.update(userRef, userData);\r\n      // async request -> return a promise\r\n      return await batch.commit();\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  //update user permissions data in firebase\r\n  export const updateUserPermissionsDateInFireBase = async (id, permissions) => {\r\n    const {   viewSubscriptions, createSubscriptions, updateSubscriptions, deleteSubscriptions,\r\n      viewMovies, createMovies, updateMovies, deleteMovies } = permissions;\r\n      // A post entry.\r\n    var userData = {\r\n      id: id,\r\n      viewSubscriptions, \r\n      createSubscriptions, \r\n      updateSubscriptions,\r\n      deleteSubscriptions,\r\n      viewMovies,\r\n      createMovies,\r\n      updateMovies,\r\n      deleteMovies\r\n    };\r\n\r\n    try {\r\n      const userRef = firestore.collection('permissions').doc(id);\r\n      //with batch object we add al the sets must to add all if not not set anyone\r\n      const batch = firestore.batch();\r\n      batch.update(userRef, userData);\r\n      // async request -> return a promise\r\n      return await batch.commit();\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  // delete user from firebase \r\n  export const deleteUserFromFirebase = async (id) => {\r\n    try {\r\n      const userRef = firestore.collection('users').doc(id);\r\n      const permissionsUserRef = firestore.collection('permissions').doc(id);\r\n      //with batch object we add al the sets must to add all if not not set anyone\r\n      const batch = firestore.batch();\r\n      batch.delete(userRef);\r\n      batch.delete(permissionsUserRef);\r\n      // async request -> return a promise\r\n      return await batch.commit();\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  // update movie data in firebase\r\n  export const updateMovieDataInFirebase = async (id, name, image, premiered ,genres) => {\r\n  var movieData = {\r\n    name,\r\n    image,\r\n    premiered,\r\n    genres\r\n  };\r\n\r\n  try {\r\n    const movieRef = firestore.collection('movies').doc(id);\r\n    //with batch object we add all the sets must to add all if not not set anyone\r\n    const batch = firestore.batch();\r\n    batch.update(movieRef, movieData);\r\n    // async request -> return a promise\r\n    return await batch.commit();\r\n  } catch(err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\n// delete movie from firebase\r\nexport const deleteMovieFromFirebase = async (id, collectionName) => {\r\n  try {\r\n    const collectionRef = firestore.collection(collectionName).doc(id);\r\n    //with batch object we add al the sets must to add all if not not set anyone\r\n    const batch = firestore.batch();\r\n    batch.delete(collectionRef);\r\n    // async request -> return a promise\r\n    return await batch.commit();\r\n  } catch(err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\n//update member data in firebase\r\nexport const updateMemberDataInFirebase = async (id, name, email, city, collection) => {\r\n  var memberData = {\r\n    name,\r\n    email,\r\n    city\r\n  };\r\n\r\n  try {\r\n    const memberRef = firestore.collection(collection).doc(id);\r\n    //with batch object we add all the sets must to add all if not not set anyone\r\n    const batch = firestore.batch();\r\n    batch.update(memberRef, memberData);\r\n    // async request -> return a promise\r\n    return await batch.commit();\r\n  } catch(err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\n// delete member from firebase\r\nexport const deleteMemberFromFirebase = async (id, collectionName) => {\r\n  try {\r\n    const collectionRef = firestore.collection(collectionName).doc(id);\r\n    //with batch object we add al the sets must to add all if not not set anyone\r\n    const batch = firestore.batch();\r\n    batch.delete(collectionRef);\r\n    // async request -> return a promise\r\n    return await batch.commit();\r\n  } catch(err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\n// check if member exist, no -> create a new , yes -> update in firebase\r\nexport const checkMemberInFirebase = async (collectionName, id, objectToAdd ) => {\r\n  try {\r\n    const memberRef = firestore.collection(collectionName).doc(id);\r\n    const batch = firestore.batch();\r\n    const doc = await memberRef.get();\r\n    if (!doc.exists) {\r\n      console.log('No such document!');\r\n      batch.set(memberRef, objectToAdd);\r\n    } else {\r\n      console.log('Document data:', doc.data());\r\n      // const membermovieRef = memberRef.collection('movies')\r\n      // console.log(membermovieRef)\r\n      batch.update(memberRef, objectToAdd);\r\n    }\r\n    // const collectionRef = firestore.collection(collectionName);\r\n    // //with batch object we add al the sets must to add all if not not set anyone\r\n    // const batch = firestore.batch();\r\n    // const newDocRef = collectionRef.doc(id); // firebase render an id for the collection\r\n    // batch.set(newDocRef, objectToAdd);\r\n    // // async request -> return a promise\r\n    return await batch.commit();\r\n  \r\n  } catch(err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\n// get movies from subscriptions collection by member id\r\nexport const getMoviesByMemberid = (collection) => {\r\n    \r\n    const transformedCollections = collection.docs.map( doc => {\r\n      const { movies } = doc.data();\r\n\r\n      return {\r\n        id: doc.id,\r\n        movies\r\n      }\r\n\r\n    } );\r\n    return transformedCollections;\r\n  }\r\n\r\nexport default firebase;","import React from 'react';\r\n\r\nimport { Navbar, Nav, Form } from 'react-bootstrap';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nimport { logout } from '../../firebase/firebase.utils';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\n// <Nav className=\"mr-auto\" defaultActiveKey=\"/home\" as=\"ul\">\r\n// <Nav.Link href='mainpage'>Welcome to Movies-Subscriptions</Nav.Link>\r\n// </Nav>\r\n// <Nav className=\"mr-auto\"  as=\"li\">\r\n// <Nav.Link href='movies'>Movies</Nav.Link>\r\n// </Nav>\r\n// <Nav className=\"mr-auto\"  as=\"li\">\r\n// <Nav.Link href='subscriptions'>Subscriptions</Nav.Link>\r\n// </Nav>\r\n\r\n//                 <Navbar.Brand href='mainpage'></Navbar.Brand>\r\n\r\nconst Header = ({ loggedIn }) => {\r\n\r\n    const user = useSelector( state => state.user.currentUser )\r\n\r\n    return (\r\n        <div>\r\n            <header>\r\n                <Navbar fixed=\"top\" expand=\"lg\" variant=\"dark\" bg=\"dark\">\r\n                <Navbar.Brand style={{fontWeight: \"bold\", color: \"orange\", fontSize: \"12px\"}}>{loggedIn ? ((user)? user.displayName: null) : \"User\" }</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    {\r\n                        (user)?\r\n                        (\r\n                            <Nav className=\"mr-auto\" defaultActiveKey=\"mainpage\" as=\"ul\">\r\n                                <Nav.Item  as=\"li\">\r\n                                    <NavLink to='mainpage' className=\"nav-link\" activeClassName=\"selected\" \r\n                                        activeStyle={{fontWeight: \"bold\"}}>\r\n                                        Home\r\n                                    </NavLink>\r\n                                </Nav.Item>\r\n                                <Nav.Item as=\"li\">\r\n                                    <NavLink to='movies' className=\"nav-link\" activeClassName=\"selected\" \r\n                                        activeStyle={{fontWeight: \"bold\"}}>\r\n                                        Movies\r\n                                    </NavLink>\r\n                                </Nav.Item>\r\n                                <Nav.Item as=\"li\">\r\n                                    <NavLink to='subscriptions' className=\"nav-link\" activeClassName=\"selected\" \r\n                                            activeStyle={{fontWeight: \"bold\"}}>\r\n                                        Subscription\r\n                                    </NavLink>\r\n                                </Nav.Item>\r\n                                {\r\n                                    (user.userName === 'admin') ?\r\n                                    (  \r\n                                        <Nav.Item as=\"li\">\r\n                                            <NavLink to='manageusers' className=\"nav-link\" activeClassName=\"selected\" \r\n                                                activeStyle={{fontWeight: \"bold\"}} >\r\n                                                Users Management\r\n                                            </NavLink>\r\n                                        </Nav.Item>\r\n                                    ) : null\r\n                                  \r\n                                }\r\n                            </Nav>\r\n\r\n                        ) : \r\n                        (\r\n                            (\r\n                                <Nav className=\"mr-auto\" defaultActiveKey=\"signin\" as=\"ul\">\r\n                                    <Nav.Item  as=\"li\">\r\n                                        <NavLink to='signin' className=\"nav-link\" activeClassName=\"selected\" \r\n                                            activeStyle={{fontWeight: \"bold\"}}>\r\n                                            Home\r\n                                        </NavLink>\r\n                                    </Nav.Item>\r\n                                </Nav>\r\n                            )\r\n                        )\r\n                    }\r\n                   \r\n\r\n                    <Form inline>\r\n                        {\r\n                            loggedIn ?\r\n                            (<div className=\"btn btn-outline-warning\" onClick={ () =>  logout() }>SIGN OUT</div>)\r\n                            :\r\n                            (<Link to='signin' className=\"btn btn-outline-warning\">SIGN IN</Link>)\r\n                        }\r\n                    </Form>\r\n                </Navbar.Collapse>\r\n                </Navbar>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n \r\n\r\nexport default (Header);\r\n\r\n// <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n// <Button variant=\"outline-success\">Search</Button>","const UserActionType  ={\r\n    LOG_IN_USER: 'LOG_IN_USER',\r\n    SET_EMAIL_PASS_LOG_IN: 'SET_EMAIL_PASS_LOG_IN',\r\n    SET_USER_SIGNUP: 'SET_USER_SIGNUP',\r\n    GET_USERS_LIST: 'GET_USERS_LIST',\r\n    GET_PERMISSIONS_USERS: 'GET_PERMISSIONS_USERS',\r\n    SET_USERS_WITH_PERMISSIONS: 'SET_USERS_WITH_PERMISSIONS',\r\n    GET_USERS_LOGIN_LIST: 'GET_USERS_LOGIN_LIST',\r\n    GET_CURRENT_USER_PERMISSIONS: 'GET_CURRENT_USER_PERMISSIONS'\r\n}\r\n\r\nexport default UserActionType;","import UserActionTypes from './user.type';\r\n\r\nexport const setUserLoggenIn = user => ({\r\n    type: UserActionTypes.LOG_IN_USER,\r\n    payload: user\r\n});\r\n\r\nexport const setUserLoginEmailPass = user => ({\r\n    type: UserActionTypes.SET_EMAIL_PASS_LOG_IN,\r\n    payload: user\r\n});\r\n\r\nexport const setUserSignup = user => ({\r\n    type: UserActionTypes.SET_USER_SIGNUP,\r\n    payload: user\r\n});\r\n\r\nexport const getUsersList = users => ({\r\n    type: UserActionTypes.GET_USERS_LIST,\r\n    payload: users\r\n});\r\n\r\nexport const getPermissionsUsers = usersPermissions => ({\r\n    type: UserActionTypes.GET_PERMISSIONS_USERS,\r\n    payload: usersPermissions\r\n});\r\n\r\nexport const setUsersWithPermissions = users => ({\r\n    type: UserActionTypes.SET_USERS_WITH_PERMISSIONS,\r\n    payload: users\r\n});\r\n\r\nexport const getUserLoginList = users => ({\r\n    type: UserActionTypes.GET_USERS_LOGIN_LIST,\r\n    payload: users\r\n});\r\n\r\nexport const getCurrentUserPermissions = user => ({\r\n    type: UserActionTypes.GET_CURRENT_USER_PERMISSIONS,\r\n    payload: user\r\n});","import React, { useState } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { login } from '../../firebase/firebase.utils';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setUserLoginEmailPass } from '../../redux/user/user.action';\r\n\r\n\r\nconst SignIn = ({setUserLoginEmailPass}) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        // setUserLoginEmailPass({ email, password });\r\n        login(email, password);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Movies - Subscriptions: Sign In </h1>\r\n            <form className=\"text-center\">\r\n                <div className=\"form-group w-25 p-3 mx-auto\">\r\n                    <label htmlFor=\"inputEmail1\">Email address</label>\r\n                    <input type=\"email\" className=\"form-control\" id=\"inputEmail1\" \r\n                        aria-describedby=\"emailHelp\" placeholder=\"Enter email\"\r\n                        onChange={ e => setEmail(e.target.value) } />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                </div>\r\n                <div className=\"form-group w-25 p-3 mx-auto\">\r\n                    <label htmlFor=\"inputPassword1\">Password</label>\r\n                    <input type=\"password\" className=\"form-control\" id=\"inputPassword1\" \r\n                        placeholder=\"Password\"\r\n                        onChange={ e => setPassword(e.target.value) } />\r\n                </div>\r\n                \r\n                <button className=\"btn btn-warning\"\r\n                        onClick={ (e) => handleClick(e)} >\r\n                         Sign In</button><br /><br />\r\n\r\n                <div>\r\n                    <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">New User?</label>\r\n                    <Link to=\"signupusername\" className=\"badge badge-warning\"> Create Account</Link>\r\n                    <br /><br />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//     setUserLoggenIn: flag => dispatch(setUserLoggenIn(flag))\r\n// })\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedIn: state.user.loggedIn\r\n  })\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUserLoginEmailPass: user => dispatch(setUserLoginEmailPass(user))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React from 'react';\r\n\r\nimport SignIn from '../../components/SignIn/SignIn';\r\n// import SignUp from '../../components/SignUp/SignUp';\r\n\r\nconst LoginPage = () => {\r\n    return (\r\n        <div>\r\n            <SignIn />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage;","import React , { useState, useEffect } from 'react';\r\n\r\nimport { signup, updateUsersLogin } from '../../firebase/firebase.utils';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setUserLoginEmailPass } from '../../redux/user/user.action';\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n// const [firstName, setFirstName] = useState('');\r\n// const [lastName, setLastName] = useState('');\r\n//     <div className=\"form-group w-25 p-3 mx-auto\">\r\n//     <label htmlFor=\"firstName\">First Name:</label>\r\n//     <input className=\"form-control\" id=\"firstName\"\r\n//         onChange={ e => setFirstName(e.target.value) } />\r\n// </div>\r\n// <div className=\"form-group w-25 p-3 mx-auto\">\r\n//     <label htmlFor=\"lastName\">Last Name:</label>\r\n//     <input className=\"form-control\" id=\"lastName\"\r\n//         onChange={ e => setEmail(e.target.value) } />\r\n// </div>\r\n\r\nconst SignUp = () => {\r\n\r\n  \r\n  const location = useLocation();\r\n  const {userName, userId} = location.state;\r\n\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [displayName, setDisplayName] = useState('');\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    \r\n    const onChangeHandler = event => {\r\n        const { name, value } = event.currentTarget;\r\n        if (name === \"userEmail\") {\r\n          setEmail(value);\r\n        } else if (name === \"userPassword\") {\r\n          setPassword(value);\r\n        } else if (name === \"userconfirmPassword\") {\r\n          setConfirmPassword(value);\r\n        } else if (name === \"displayName\") {\r\n          setDisplayName(value);\r\n        }\r\n      };\r\n\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      if (password !== confirmPassword) {\r\n        alert(`password don't match!`);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const flag = await signup(userName, displayName, email, password);\r\n        console.log(flag)\r\n        setIsSubmitted(flag);\r\n        if(flag){\r\n          updateUsersLogin('usersLogin', userId);\r\n        }\r\n       \r\n        // createUserProfileDocument()\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n      // setUserLoginEmailPass({ email, password });\r\n      // login(email, password);\r\n    }\r\n\r\n    useEffect( () => {\r\n      if(isSubmitted) {\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n        setDisplayName('');\r\n        setIsSubmitted(false);\r\n      }\r\n\r\n    }, [isSubmitted])\r\n    return(\r\n        <div>\r\n            <h1>Movies - Subscriptions: Sign Up </h1>\r\n            <h3>Create an account</h3>\r\n            <form>\r\n                <div className=\"form-group w-25 p-3 mx-auto\">\r\n                    <label htmlFor=\"displayName\">Display Name:</label>\r\n                    <input className=\"form-control\" \r\n                        id=\"displayName\"\r\n                        name=\"displayName\"\r\n                        onChange={event => onChangeHandler(event) } />\r\n                </div>\r\n                <div className=\"form-group w-25 p-3 mx-auto\">\r\n                    <label htmlFor=\"userEmail\">Email:</label>\r\n                    <input className=\"form-control\" \r\n                            id=\"userEmail\" \r\n                            name=\"userEmail\"\r\n                            aria-describedby=\"emailHelp\"\r\n                            onChange={event => onChangeHandler(event) } />\r\n                </div>\r\n                <div className=\"form-group w-25 p-3 mx-auto\">\r\n                    <label htmlFor=\"userPassword\">Password</label>\r\n                    <input type=\"password\" className=\"form-control\" \r\n                            id=\"userPassword\"\r\n                            name=\"userPassword\"\r\n                            onChange={event => onChangeHandler(event) } />\r\n                </div>\r\n                <div className=\"form-group w-25 p-3 mx-auto\">\r\n                  <label htmlFor=\"userPassword\">Confirm Password</label>\r\n                  <input type=\"password\" className=\"form-control\" \r\n                          id=\"userconfirmPassword\"\r\n                          name=\"userconfirmPassword\"\r\n                          onChange={event => onChangeHandler(event) } />\r\n                </div>\r\n                <button className=\"btn btn-warning\"\r\n                    onClick={ (e) => handleSubmit(e) }>\r\n                        Sign up\r\n                    </button> <br /><br />\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setUserLoginEmailPass: user => dispatch(setUserLoginEmailPass(user))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { firestore,\r\n    getCollectionListSnapshotToMapUsersLogin } from '../../firebase/firebase.utils';\r\nimport { getUserLoginList } from '../../redux/user/user.action';\r\n\r\nconst SignUpFirstUserName = () => {\r\n\r\n    const [userName, setUserName] = useState('');\r\n    // first to check if the userName is exist in firebase -> if not show a message, if yes redirect to sign up page\r\n    // with the id created in the fire base when the admin create the user\r\n    // and check in users the id is not already exist !!!\r\n    const usersList = useSelector(state => state.user.usersLoginList);\r\n    const dispatch = useDispatch();\r\n\r\n    const [isExist, setIsExist] = useState(false);  // if the user name exist\r\n    const [isSignup, setIsSignup] = useState(false);  // if already sign up \r\n    const [isSubmit, setIsSubmit] = useState(false);\r\n    const [userId, setUserId] = useState('');\r\n \r\n    useEffect( () => {\r\n        const collectionRef = firestore.collection('usersLogin');\r\n            collectionRef.onSnapshot(async snapshot => {\r\n                    const collection = getCollectionListSnapshotToMapUsersLogin(snapshot);\r\n                    dispatch(getUserLoginList(collection));\r\n                })\r\n    },[]);\r\n\r\n    const isUserNameExist = () => {\r\n        let flag = false;\r\n        let isSign=false;\r\n        let id = '';\r\n        console.log(usersList)\r\n        usersList.forEach( user => {\r\n            if(user.userName === userName){\r\n                flag = true;\r\n                isSign = user.signup;\r\n                id = user.id;\r\n            }\r\n        })\r\n        return {flag, isSign, id};\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setIsSubmit(true);\r\n        const {flag, isSign, id} = isUserNameExist();\r\n        setIsExist(flag);\r\n        setIsSignup(isSign);\r\n        setUserId(id);\r\n    }\r\n\r\n    const clear = () => {\r\n        alert(`${userName} already sign in the system!`) \r\n        return <Redirect to='signin'></Redirect>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Movies - Subscriptions: Sign Up - User Name </h1>\r\n            <h3>Create an account</h3>\r\n            <form>\r\n                <div className=\"form-group w-25 p-3 mx-auto\">\r\n                    <label htmlFor=\"displayName\">User Name from admin</label>\r\n                    <input className=\"form-control\" \r\n                        onChange={event => setUserName((event.target.value.toLowerCase())) } />\r\n                        <br /><br />\r\n                        <button className=\"btn btn-warning\"\r\n                        onClick={ (e) => handleSubmit(e) }>\r\n                            Submit\r\n                        </button> <br /><br />\r\n                        {   \r\n                            (isSubmit)?(\r\n                            (isExist) ? \r\n                            ((isSignup)?\r\n                                (\r\n                                clear())\r\n                                :\r\n                                <Redirect to={{\r\n                                pathname: 'signup',\r\n                                state: {userName, userId}\r\n                                }} />\r\n                            )\r\n                            :\r\n                            alert(`User name doesn't exist !`)) : null\r\n                        }\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUpFirstUserName;","const MoviesActionsTypes = {\r\n    SET_MOVIES_FROM_FIRE_STORE: 'SET_MOVIES_FROM_FIRE_STORE',\r\n    ADD_MOVIE: 'ADD_MOVIE'\r\n}\r\n\r\nexport default MoviesActionsTypes;","import React, { useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap,\r\n        getCollectionListusersPermissionsSnapShotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport { setMovies } from '../../redux/movies/movies.actions.js'\r\nimport { getPermissionsUsers, getCurrentUserPermissions } from '../../redux/user/user.action';\r\n\r\nconst MainPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const currentUser = useSelector(state => state.user.currentUser);  // from redux\r\n    \r\n    const permissionsUsers = useSelector(state => state.user.usersPermissions);  // from redux\r\n\r\n    useEffect( () => {    \r\n        \r\n        const collectionRef = firestore.collection('movies');\r\n        collectionRef.onSnapshot(async snapshot => {\r\n            const collection = convertCollectionsSnapshotToMap(snapshot);\r\n            dispatch(setMovies(collection));\r\n        })\r\n\r\n        const collectionRef2 = firestore.collection('permissions');\r\n        collectionRef2.onSnapshot(async snapshot => {\r\n            const collection =  getCollectionListusersPermissionsSnapShotToMap(snapshot);\r\n            // dispatch(getPermissionsUsers(collection));\r\n            dispatch(getPermissionsUsers(collection));\r\n        })\r\n        \r\n      }, []);\r\n\r\n      useEffect( () => {\r\n        if(permissionsUsers && currentUser){\r\n            const userPremission = permissionsUsers.filter( permission => permission.id === currentUser.id )\r\n            // currentUserPermissions['permissions'] = userPremission \r\n            dispatch(getCurrentUserPermissions(userPremission))\r\n        }\r\n        \r\n      }, [permissionsUsers, currentUser]);\r\n\r\n    return(\r\n        <div>\r\n            <br/><br/><br/>\r\n            <h1>Movies - Subscriptions: Main Page</h1>\r\n            <div>\r\n            { \r\n                (currentUser) ? ((currentUser.userName !== 'admin')) ?\r\n                ( <div>\r\n                    <Link to='movies' className=\"btn btn-outline-warning\">Movies</Link>\r\n                    <Link to='subscriptions' className=\"btn btn-outline-warning\">Subscriptions</Link>\r\n                    <Link to='signin' className=\"btn btn-outline-warning\">Log Out</Link>\r\n                </div>\r\n                )\r\n                :\r\n               (<div> \r\n                    <Link to='movies' className=\"btn btn-outline-warning\">Movies</Link>\r\n                    <Link to='subscriptions' className=\"btn btn-outline-warning\">Subscriptions</Link>\r\n                    <Link to='manageusers' className=\"btn btn-outline-warning\">Users Management</Link>\r\n                    <Link to='signin' className=\"btn btn-outline-warning\">Log Out</Link> \r\n                </div>\r\n                ) : null\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import MoviesActionsTypes from './movies.types';\r\n\r\nexport const setMovies = (moviesList) => ({\r\n    type: MoviesActionsTypes.SET_MOVIES_FROM_FIRE_STORE,\r\n    payload: moviesList\r\n});\r\n\r\nexport const addMovie = (movieToAdd) => ({\r\n    type: MoviesActionsTypes.ADD_MOVIE,\r\n    payload: movieToAdd\r\n})","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n// <Link to='adduser' className=\"btn btn-outline-warning\">Add user</Link>\r\n\r\n// Only fron Admin!!!!!!\r\nconst ManageUsers = () => {\r\n\r\n    return(\r\n        <div>\r\n            <h1>Movies - Subscriptions: Manage Users</h1>\r\n            <Link to='allusers' className=\"btn btn-outline-warning\">All users</Link>\r\n            <Link to='addusername' className=\"btn btn-outline-warning\">Add user</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManageUsers;","const TypesPermissions = {\r\n    vs: 'viewSubscriptions',\r\n    cs: 'createSubscriptions',\r\n    us: 'updateSubscriptions',\r\n    ds: 'deleteSubscriptions',\r\n    vmovies: 'viewMovies',\r\n    cm: 'createMovies',\r\n    um:'updateMovies',\r\n    dm:'deleteMovies'\r\n}\r\n\r\nexport default TypesPermissions;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Button, Modal, ListGroup  } from 'react-bootstrap';\r\n\r\nimport { deleteMovieFromFirebase } from '../../firebase/firebase.utils.js';\r\n\r\nimport TypesPermissions from '../ManageUsers/permissionsTypes';\r\n\r\nconst AllMovies = ({searchField}) => {\r\n\r\n    const currentUserPermissions = useSelector(state => state.user.currentUserPermissions);\r\n\r\n    const moviesList = useSelector(state => state.movies.movies);\r\n    const currentUser = useSelector(state => state.user.currentUser);\r\n    console.log(currentUser)\r\n\r\n    const [moviesListTemp, setmoviesListTemp] = useState(moviesList);\r\n    \r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () =>{ \r\n        setShow(false);\r\n    }\r\n    const handleShow = () => { \r\n        setShow(true);\r\n    }\r\n\r\n    useEffect( ()=> {\r\n        try {\r\n            if(searchField) {\r\n                const filteredMovies = moviesList.filter( (movie) => \r\n                movie.name.toLowerCase().includes(searchField.toLowerCase()) \r\n                );\r\n                setmoviesListTemp(filteredMovies);\r\n            }\r\n           \r\n        }catch(err) {\r\n            console.log(err);\r\n        }\r\n       \r\n    }, [searchField]);\r\n\r\n    const deleteMovie = (e, id) => {\r\n        e.preventDefault();\r\n        deleteMovieFromFirebase(id, 'movies');\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container row mt-5 justify-content-center\">\r\n                {moviesListTemp.map( movie => {\r\n                    return (\r\n                        <div key={movie.id} className=\"card card-custom mx-2 mb-3\" style={{width: \"18rem\", textAlign: \"center\", background: \"black\"}}>\r\n                        <img src={movie.image} className=\"card-img-top\" alt=\"\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{movie.name}</h5>\r\n                                <p className=\"card-text\">Genres:</p>\r\n                                    <ListGroup as=\"ul\">\r\n                                        {movie.genres.map(\r\n                                            (gener, index) => <ListGroup.Item as=\"li\" variant=\"danger\" key={index}> {gener} </ListGroup.Item>\r\n                                        )} \r\n                                    </ListGroup>\r\n                                    {\r\n                                        (currentUserPermissions[0][TypesPermissions.um])?\r\n                                        (\r\n                                            <Link to={{pathname: '/editmovie', state:{ movie}}}\r\n                                                className=\"btn btn-danger\" type=\"button\" \r\n                                                data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit\">\r\n                                                Edit\r\n                                            </Link>\r\n                                        ) : null\r\n                                    }\r\n                                \r\n                                {\r\n                                    (currentUserPermissions[0][TypesPermissions.dm])?\r\n                                    (\r\n                                        <Button className=\"btn btn-danger\" onClick={e => handleShow(e)}>Delete</Button>\r\n                                    ) : null\r\n                                }\r\n                                    <Modal show={show} onHide={handleClose} >\r\n                                    <div className=\"card text-white bg-dark mb-3\">\r\n                                        <Modal.Header closeButton>\r\n                                            <Modal.Title>Delete Movie</Modal.Title>\r\n                                        </Modal.Header>\r\n                                        <Modal.Body>\r\n                                            Are you sure you want to delete the movie {movie.name}?\r\n                                        </Modal.Body>\r\n                                        <Modal.Footer>\r\n                                            <Button variant=\"danger\" onClick={(e) => deleteMovie(e, movie.id)}>\r\n                                                Yes\r\n                                            </Button>\r\n                                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                                No\r\n                                            </Button>\r\n                                        </Modal.Footer>\r\n                                    </div>\r\n                                </Modal>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                } )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllMovies;\r\n\r\n// <ul style={{listStyleType: \"none\"}}>\r\n// {movie.genres.map(\r\n//     (gener, index) => <li key={index}> {gener} </li>\r\n// )} \r\n// </ul>","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n// import { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import { setMovies } from '../../redux/movies/movies.actions.js'\r\n\r\nimport AllMovies from './AllMovies';\r\n\r\nimport TypesPermissions from '../ManageUsers/permissionsTypes';\r\n\r\nconst Movies = () => {\r\n\r\n    const [searchField, setSearchField] = useState('');\r\n    // const dispatch = useDispatch();\r\n    // useEffect( () => {    \r\n    //     // const unsubscribe  = null;\r\n    //     // const unsubscribe = onAuthStateChangeFirebase(, );\r\n    //     const collectionRef = firestore.collection('movies');\r\n    //     collectionRef.onSnapshot(async snapshot => {\r\n    //         const collection = convertCollectionsSnapshotToMap(snapshot);\r\n    //         dispatch(setMovies(collection));\r\n    //     })\r\n    //     // return () => {\r\n    //     //   unsubscribe();\r\n    //     // };\r\n    \r\n    //   }, []);\r\n\r\n    const moviesList = useSelector(state => state.movies.movies);\r\n    const currentUserPermissions = useSelector(state => state.user.currentUserPermissions);\r\n\r\n    return(\r\n        <div>\r\n            <h1>Movies - Subscriptions: Movies</h1>\r\n            <Link to='allmovies' className=\"btn btn-outline-warning\">All movies</Link>\r\n            {\r\n                (currentUserPermissions[0][TypesPermissions.cm])?\r\n                <Link to='addmovie' className=\"btn btn-outline-warning\">Add movie</Link>\r\n                : null\r\n\r\n            }\r\n            <br /><br />\r\n            {\r\n                moviesList ?\r\n                    (\r\n                        <div>\r\n                            Find movie: <input type='search' placeholder='Search Movie'\r\n                                         onChange={e => setSearchField(e.target.value)} /><br /><br />\r\n                            <AllMovies searchField={searchField} />\r\n                        </div>\r\n                    )\r\n                    :\r\n                    null\r\n            }\r\n            <div></div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movies;","const MembersActionsTypes = {\r\n    SET_MEMBERS_FROM_FIREBASE: 'SET_MEMBERS_FROM_FIREBASE',\r\n    SET_MOVIES_BY_MEMBER_FROM_FIREBASE: 'SET_MOVIES_BY_MEMBER_FROM_FIREBASE'\r\n}\r\n\r\nexport default MembersActionsTypes;","import React, { useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { firestore, getCollectionMembersSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setMembers } from '../../redux/members/members.actions';\r\n\r\nimport TypesPermissions from '../ManageUsers/permissionsTypes';\r\n\r\nconst Subscriptions = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const currentUserPermissions = useSelector(state => state.user.currentUserPermissions);\r\n\r\n    useEffect( () => {    \r\n        const collectionRef = firestore.collection('members');\r\n        collectionRef.onSnapshot(async snapshot => {\r\n            const collection = getCollectionMembersSnapshotToMap(snapshot);\r\n            dispatch(setMembers(collection));\r\n        })\r\n      }, []);\r\n\r\n    //   const members = useSelector(state => state.members.members);\r\n\r\n    return(\r\n        <div>\r\n            <br/><br/><br/>\r\n            <h1>Movies - Subscriptions: Subscriptions</h1>\r\n            <Link to='allmembers' className=\"btn btn-outline-warning\">All Members</Link>\r\n            {\r\n                (currentUserPermissions[0])?\r\n                (\r\n                    (currentUserPermissions[0][TypesPermissions.cs])?\r\n                    (             \r\n                        <Link to='addmember' className=\"btn btn-outline-warning\">Add Member</Link>\r\n                    )                    \r\n                    : null\r\n                ) \r\n                : null\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subscriptions;","import MembersActionsTypes from './members.types';\r\n\r\nexport const setMembers = (membersList) => ({\r\n    type: MembersActionsTypes.SET_MEMBERS_FROM_FIREBASE,\r\n    payload: membersList\r\n});\r\n\r\nexport const setMoviesByMember = (moviesByMember) => ({\r\n    type: MembersActionsTypes.SET_MOVIES_BY_MEMBER_FROM_FIREBASE,\r\n    payload: moviesByMember\r\n})","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { addMovie } from '../../redux/movies/movies.actions';\r\nimport { addDocumentToCollection } from '../../firebase/firebase.utils';\r\nimport validator from 'validator';\r\n\r\nconst AddMovie = () => {\r\n    const [name, setName] = useState('');\r\n    const [genres, setGenres] = useState([]);\r\n    const [image, setImage] = useState('');\r\n    const [premiered, setPremiered] = useState(new Date());\r\n    const [movieToAdd, setMovieToAdd] = useState({});\r\n\r\n    const [changed, setChanged] = useState(false);\r\n\r\n    const moviesList = useSelector(state => state.movies.movies);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const changeName = (e) => {\r\n        let flag = false;\r\n        moviesList.map( movie => {\r\n            if(movie.name.toLowerCase() === e.target.value.toLowerCase())\r\n                flag = true;\r\n        })\r\n        if(!flag)\r\n            setName(e.target.value)\r\n        else\r\n            alert('The movie already exist')\r\n    }\r\n\r\n    const changeGenres = (e) => {\r\n        let genresStr = e.target.value;\r\n        var res = genresStr.split(\",\");\r\n        setGenres(res);\r\n    }\r\n\r\n    const isURLValid = (url) => {\r\n        return validator.isURL(url);\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!(image && isURLValid(image)))\r\n            alert('You must insert a URL')\r\n        else if(!(name && genres && image && premiered))\r\n            alert('You must fill in all the fields!');\r\n        else {\r\n            setMovieToAdd({name, genres, image, premiered});\r\n            setChanged(true);\r\n        }\r\n    }\r\n\r\n    const handleCancel = (e) => {\r\n        e.preventDefault();\r\n        setName('');\r\n        setGenres([]);\r\n        setImage('');\r\n        setPremiered(new Date());\r\n        setChanged(true);\r\n    }\r\n\r\n    useEffect( () => {   \r\n        async function fetchMyAPI() {\r\n            await addDocumentToCollection('movies',movieToAdd);\r\n            \r\n        }\r\n        if(Object.keys(movieToAdd).length !== 0){\r\n            dispatch(addMovie(movieToAdd));\r\n            fetchMyAPI()\r\n        }\r\n    }, [movieToAdd]);\r\n\r\n    return (\r\n        <div>\r\n            <br/><br/><br/>\r\n            <h1 className=\"text-center\"> Movies </h1>\r\n            <div className=\"container py-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"mx-auto col-sm-6\">\r\n                        <div className=\"card bg-dark\" >\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"mb-0\">Add new movie</h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form className=\"form\" role=\"form\" autoComplete=\"off\">\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Name</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"text\" value={name} \r\n                                                    onChange={ e => changeName(e) } />\r\n                                            </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Genres</label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input className=\"form-control\" type=\"text\" value={genres}\r\n                                                onChange={ e => changeGenres(e)} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Image Url </label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input className=\"form-control\" type=\"text\" value={image}\r\n                                                onChange={ e => setImage(e.target.value) } />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Premiered</label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input className=\"form-control\" type=\"date\" value={premiered}\r\n                                                onChange={ e => setPremiered(e.target.value) } />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\"></label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input type=\"button\" className=\"btn btn-danger\" value=\"Add movie\" onClick={e => handleSubmit(e)} />\r\n                                            <button type=\"submit\" className=\"btn btn-secondary\" onClick={ e => handleCancel(e) }>Cancel</button>\r\n                                            { changed ? <Redirect to='allmovies' /> : null}\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMovie;\r\n\r\n\r\n// <form>\r\n// <div className=\"form-group\">\r\n//     <br/><br/><br/>\r\n//     <h3>Add new movie:</h3><br /><br />\r\n//     <label>\r\n//         Name: \r\n//         <input type=\"text\" name=\"name\" value={name} onChange={ e => changeName(e) } />\r\n//     </label><br />\r\n//     <label>\r\n//         Genres: \r\n//         <input type=\"text\" name=\"genres\" value={genres} onChange={ e => changeGenres(e) } />\r\n//     </label><br />\r\n//     <label>\r\n//         Image Url: \r\n//         <input type=\"url\" name=\"image\" value={image} onChange={ e => setImage(e.target.value) } />\r\n//     </label><br />\r\n//     <label>\r\n//         Premiered: \r\n//         <input type=\"date\" name=\"premiered\" value={premiered} onChange={ e => setPremiered(e.target.value) } />\r\n//     </label><br />\r\n//     <button type=\"submit\" className=\"btn btn-danger\" onClick={e => handleSubmit(e) }>Save</button>\r\n//     <button type=\"submit\" className=\"btn btn-danger\" onClick={ e => handleCancel(e) }>Cancel</button>\r\n//     { changed ? <Redirect to='allmovies' /> : null}\r\n// </div>\r\n// </form>","import React, { useState } from 'react';\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n// import {DropdownButton, Dropdown, Button } from 'react-bootstrap';\r\n\r\nimport { updateMovieDataInFirebase } from '../../firebase/firebase.utils';\r\n\r\nconst EditMovie = () => {\r\n\r\n    const location = useLocation();\r\n    const movie = location.state.movie;\r\n\r\n    const [name, setName] = useState(movie.name);\r\n    const [image, setImage] = useState(movie.image); // medium\r\n    const [premiered, setPremiered] = useState(movie.premiered);\r\n    const [genres, setGenres] = useState(movie.genres);\r\n\r\n    const [changed, setChanged] = useState(false);\r\n\r\n    const handleChanges = (e) => {\r\n        e.preventDefault();\r\n        updateMovieDataInFirebase(movie.id, name, image, premiered, genres);\r\n        alert('Details changed successfully');\r\n        setChanged(true);\r\n    }   \r\n\r\n    const changeGenres = (e) => {\r\n        let genresStr = e.target.value;\r\n        var temp = genresStr.split(\",\");\r\n        var res = temp.map( movieName => {\r\n            let name = capitalizeFirstLetter(movieName);\r\n            return name;\r\n        } )\r\n        setGenres(res);\r\n    }\r\n\r\n    const  capitalizeFirstLetter = (str) => {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n      }\r\n\r\n    return(\r\n        <div>\r\n        <h2>Movies</h2>\r\n        <h4>Edit movie: {name}</h4>\r\n             <div className=\"container py-3\">\r\n                 <div className=\"row\">\r\n                     <div className=\"mx-auto col-sm-6\">\r\n                         <div className=\"card bg-dark\" >\r\n                             <div className=\"card-header\">\r\n                                 <h4 className=\"mb-0\">Movie Information</h4>\r\n                             </div>\r\n                             <div className=\"card-body\">\r\n                                 <form className=\"form\" role=\"form\" autoComplete=\"off\">\r\n                                     <div className=\"form-group row\">\r\n                                         <label className=\"col-lg-3 col-form-label form-control-label\">Name: </label>\r\n                                         <div className=\"col-lg-9\">\r\n                                             <input className=\"form-control\" type=\"text\" value={name} onChange={ e => setName(e.target.value)} />\r\n                                         </div>\r\n                                     </div>\r\n                                     <div className=\"form-group row\">\r\n                                         <label className=\"col-lg-3 col-form-label form-control-label\">Iamge Url: </label>\r\n                                         <div className=\"col-lg-9\">\r\n                                             <input className=\"form-control\" type=\"text\" value={image} onChange={ e => setImage(e.target.value)} />\r\n                                         </div>\r\n                                     </div>\r\n\r\n                                     <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Premiered: </label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input className=\"form-control\" type=\"date\" value={premiered} onChange={ e => setPremiered(e.target.value)} />\r\n                                        </div>\r\n                                     </div>\r\n                                 \r\n                                     <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Genres: </label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input className=\"form-control\" type=\"text\" value={ genres.map( genr => genr) } \r\n                                            onChange={ e => changeGenres(e)} />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                     <div className=\"form-group row\">\r\n                                         <label className=\"col-lg-3 col-form-label form-control-label\"></label>\r\n                                         <div className=\"col-lg-9\">\r\n                                             <input type=\"button\" className=\"btn btn-danger\" value=\"Save Changes\" onClick={ e => handleChanges(e) } />\r\n                                             <Link to='allmovies' className=\"btn btn-secondary\">Cancel</Link>\r\n                                             { changed ? <Redirect to='allmovies' /> : null}\r\n                                         </div>\r\n                                     </div>\r\n                                 </form>\r\n                             </div>\r\n                         </div>\r\n             </div>\r\n         </div>\r\n     </div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default EditMovie;\r\n\r\n// <DropdownButton className=\"btn btn-danger btn-sm rounded-0\"\r\n// title='See all' size=\"sm\" variant='Warning'>\r\n// { \r\n//    genres.map( (genr, index) => {\r\n//        return <Dropdown.Item key={index} eventKey={index}>{genr}</Dropdown.Item>\r\n//    } )\r\n// }\r\n\r\n// </DropdownButton>\r\n// <Button className=\"btn btn-danger btn-sm rounded-0\" type=\"button\" data-toggle=\"tooltip\" \r\n// data-placement=\"top\" title=\"Add\"  size=\"sm\"\r\n// >\r\n// <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n// </Button>","import React, { useState } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Modal, Button, DropdownButton } from 'react-bootstrap';\r\n\r\nimport { deleteUserFromFirebase } from '../../firebase/firebase.utils';\r\n\r\n//<Link to=\"signup\" classNameName=\"badge badge-warning\"> Delete </Link>\r\n\r\nconst UserCard = ({user}) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () =>{ \r\n        setShow(false);\r\n    }\r\n    const handleShow = () => { \r\n        setShow(true);\r\n    }\r\n\r\n    const checkPermissionsTrue = (permissions) => {\r\n        const keys = Object.keys(permissions[0]);\r\n        const filtered = keys.filter( key => permissions[0][key] === true);\r\n        return filtered;\r\n    }\r\n\r\n    const deleteUser = (e) => {\r\n        e.preventDefault();\r\n        handleClose();\r\n        deleteUserFromFirebase(user.id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br /><br />\r\n            <div className=\"card text-white bg-dark mb-3\" style={{maxWidth: \"18rem\"}}>\r\n                <div className=\"card-header\">\r\n                    <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i>\r\n                    <span> {user.email} </span>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{user.displayName}</h5>\r\n                    <p className=\"card-text\">\r\n                        Created data:  <br />\r\n                        \r\n                    </p>\r\n                    <DropdownButton\r\n                        style=\"default\"\r\n                        size=\"small\"\r\n                        style={{ maxHeight: \"28px\" }}\r\n                        title={\"Permissions\"}\r\n                        key={1}\r\n                        id=\"dropdown-size-small\"\r\n                        variant=\"secondary\"     \r\n                    >\r\n                        <ul className=\"card-body\">\r\n                        Permissions: \r\n                        \r\n                        {\r\n                            checkPermissionsTrue(user.permissions).map( (p, index) =>{\r\n                                return <li key={index}>{p}</li> })\r\n                        }\r\n                        \r\n                        </ul>\r\n                        </DropdownButton>\r\n                </div>\r\n                <div className=\"card-footer bg-transparent\">\r\n                    <li className=\"list-inline-item\">\r\n                        <Link to={{pathname: '/edituser', state:{ user}}}\r\n                            className=\"btn btn-danger btn-sm rounded-0\" type=\"button\" \r\n                            data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit\">\r\n                            <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>    \r\n                        </Link>\r\n                    </li>     \r\n                      \r\n                    <li className=\"list-inline-item\">\r\n                        <Button className=\"btn btn-danger btn-sm rounded-0\" type=\"button\" data-toggle=\"tooltip\" \r\n                                data-placement=\"top\" title=\"Delete\"\r\n                                onClick={e => handleShow(e)}>\r\n                            <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                        </Button>\r\n                    </li>\r\n                    \r\n                    \r\n                            <Modal show={show} onHide={handleClose} >\r\n                                 <div className=\"card text-white bg-dark mb-3\">\r\n                                    <Modal.Header closeButton>\r\n                                        <Modal.Title>Delete User</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        Are you sure you want to delete the user {user.displayName}?\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer>\r\n                                        <Button variant=\"danger\" onClick={e => deleteUser(e) }>\r\n                                            Yes\r\n                                        </Button>\r\n                                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                                            No\r\n                                        </Button>\r\n                                    </Modal.Footer>\r\n                                </div>\r\n                            </Modal>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCard;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getUsersList, getPermissionsUsers, setUsersWithPermissions } from '../../redux/user/user.action';\r\n\r\nimport { firestore, getCollectionListSnapshotToMap,\r\n    getCollectionListusersPermissionsSnapShotToMap,\r\n    onAuthStateChangeFirebase } from '../../firebase/firebase.utils';\r\n\r\nimport UserCard from './UserCard';\r\n\r\n// Only fron Admin!!!!!!\r\nconst AllUserManage = () => {\r\n\r\n    const [users, setUsers] = useState([]);  // from firebase\r\n    const [usersPermissions, setUsersPermissions] = useState([]);  // from firebase\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const usersList = useSelector(state => state.user.users);  // from redux\r\n    // const usersPermissionsList = useSelector(state => state.user.usersPermissions);\r\n\r\n    useEffect( () => {    \r\n        // const collectionRef = firestore.collection('users');\r\n        // collectionRef.onSnapshot(async snapshot => {\r\n        //     const collection = getCollectionListSnapshotToMap(snapshot);\r\n        //     dispatch(getUsersList(collection));\r\n        // })\r\n\r\n        // const collectionRef1 = firestore.collection('permissions');\r\n        // collectionRef1.onSnapshot(async snapshot => {\r\n        //     const collection =  getCollectionListusersPermissionsSnapShotToMap(snapshot);\r\n        //     dispatch(getPermissionsUsers(collection));\r\n        // })\r\n\r\n        const collectionRef = firestore.collection('users');\r\n        collectionRef.onSnapshot(async snapshot => {\r\n            const collection = getCollectionListSnapshotToMap(snapshot);\r\n            // dispatch(getUsersList(collection));\r\n            setUsers(collection);\r\n        })\r\n  \r\n\r\n        const collectionRef1 = firestore.collection('permissions');\r\n        collectionRef1.onSnapshot(async snapshot => {\r\n            const collection =  getCollectionListusersPermissionsSnapShotToMap(snapshot);\r\n            // dispatch(getPermissionsUsers(collection));\r\n            setUsersPermissions(collection);\r\n        })\r\n        \r\n      }, []);\r\n\r\n      useEffect( () => {\r\n            users.map(user => {\r\n                const userPremission = usersPermissions.filter( userp => user.id === userp.id )\r\n                user['permissions'] = userPremission;\r\n            });\r\n            dispatch(setUsersWithPermissions(users));\r\n      },[usersPermissions])\r\n\r\n    return (\r\n        <div>\r\n            <br /><br /><br />\r\n            <h1 className=\"text-center\"> Users List: </h1>\r\n            <div className=\"card-group justify-content-center\">\r\n                {\r\n                    (usersList) ? \r\n                    ( usersList.map( user => {\r\n                            return( \r\n                                <div key={user.id}>\r\n                                    <UserCard  user={user} />\r\n                                </div>\r\n                            )\r\n                        } )) : null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllUserManage;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { firestore, addNewUser, isUserNameExist,\r\n        getCollectionListSnapshotToMapUsersLogin } from '../../firebase/firebase.utils';\r\n\r\nimport { getUserLoginList } from '../../redux/user/user.action';\r\n\r\nconst AddUserByAdmin = () => {\r\n\r\n    const [userName, setUserName] = useState('');\r\n    \r\n    const [changed, setChanged] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const usersList = useSelector(state => state.user.usersLoginList);\r\n\r\n    useEffect( () => {\r\n        const collectionRef = firestore.collection('usersLogin');\r\n            collectionRef.onSnapshot(async snapshot => {\r\n                    const collection = getCollectionListSnapshotToMapUsersLogin(snapshot);\r\n                    dispatch(getUserLoginList(collection));\r\n                })\r\n    },[]);\r\n\r\n      //check if user name from admin already exist\r\n    const isUserNameExist = () => {\r\n        let flag = true\r\n        usersList.forEach( user => {\r\n            if(user.userName === userName)\r\n                flag = false;\r\n        })\r\n        return flag;\r\n    }\r\n    \r\n    const handleChanges = (e) => {\r\n        e.preventDefault();\r\n        if(userName) {\r\n            try {\r\n                const createdAt = new Date();\r\n                const flag = isUserNameExist(userName);\r\n                const signup = false;\r\n                if (flag)  \r\n                {\r\n                    addNewUser('usersLogin', {userName, createdAt, signup});\r\n                    alert('Details saved successfully');\r\n                    setChanged(true);\r\n                }\r\n                else\r\n                    alert(`The user name ${userName} already exist !`);\r\n                \r\n\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        else{\r\n            alert('You must insert user name');\r\n            setUserName('');\r\n        }\r\n    }   \r\n\r\n    return(\r\n        <div>\r\n            <br /><br /><br />\r\n            <h1 className=\"text-center\"> Users </h1>\r\n            <div className=\"container py-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"mx-auto col-sm-6\">\r\n                        <div className=\"card bg-dark\" >\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"mb-0\">Add new user</h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form className=\"form\" role=\"form\" autoComplete=\"off\">\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">User Name</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"text\" onChange={ e => setUserName((e.target.value).toLowerCase())} />\r\n                                            </div>\r\n                                    </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\"></label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input type=\"button\" className=\"btn btn-danger\" value=\"Add user\" onClick={ e => handleChanges(e) } />\r\n                                                <Link to='manageusers' className=\"btn btn-secondary\">Cancel</Link>\r\n                                                { changed ? <Redirect to='manageusers' /> : null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUserByAdmin;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Form } from 'react-bootstrap';\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport TypesPermissions from './permissionsTypes';\r\n\r\nimport { updateUserDateInFireBase, updateUserPermissionsDateInFireBase } from '../../firebase/firebase.utils';\r\n\r\nconst EditUser = () => {\r\n\r\n    const location = useLocation();\r\n    const user = location.state.user;\r\n\r\n    const [name, setName] = useState(user.displayName);\r\n    const [email, setEmail] = useState(user.email);\r\n    const [permissions, setPermissions] = useState(user.permissions);\r\n    \r\n    const [viewS, setViewS] = useState(permissions[0][TypesPermissions.vs]);\r\n    const [createS, setCreateS] = useState(permissions[0][TypesPermissions.cs]);\r\n    const [updateS, setUpdateS] = useState(permissions[0][TypesPermissions.us]);\r\n    const [deleteS, setDeleteS] = useState(permissions[0][TypesPermissions.ds]);\r\n    const [viewM,setViewM] = useState(permissions[0][TypesPermissions.vmovies]);\r\n    const [createM, setCreateM] = useState(permissions[0][TypesPermissions.cm]);\r\n    const [updateM, setUpdateM] = useState(permissions[0][TypesPermissions.um]);\r\n    const [deleteM, setDeleteM] = useState(permissions[0][TypesPermissions.dm]);\r\n\r\n\r\n    const [changed, setChanged] = useState(false);\r\n\r\n\r\n    useEffect( () => {\r\n        if(createM && updateM && deleteM) \r\n            permissionschange(setViewM, true, TypesPermissions.vmovies);\r\n        if(createS && updateS && deleteS) \r\n            permissionschange(setViewS, true, TypesPermissions.vs);\r\n        \r\n    }, [viewS, createS, updateS, deleteS, viewM, createM, updateM, deleteM ]);\r\n\r\n    const permissionschange = (func, flag, typeP) => {\r\n        func(flag);\r\n        permissions[0][typeP] = flag;\r\n        setPermissions(permissions);\r\n    }\r\n\r\n    const handlePermissions = e => {\r\n        if(e.target.id === TypesPermissions.vs) {\r\n            permissionschange(setViewS, e.target.checked, TypesPermissions.vs, viewS);\r\n            // setViewS(e.target.checked);\r\n            // permissions[0][TypesPermissions.vs] = viewS;\r\n            // setPermissions(permissions);\r\n        }\r\n        else if (e.target.id === TypesPermissions.cs)\r\n            permissionschange(setCreateS, e.target.checked, TypesPermissions.cs);\r\n        else if (e.target.id === TypesPermissions.us)\r\n            permissionschange(setUpdateS, e.target.checked, TypesPermissions.us);\r\n        else if (e.target.id === TypesPermissions.ds)\r\n            permissionschange(setDeleteS, e.target.checked, TypesPermissions.ds);\r\n        else if (e.target.id === TypesPermissions.vmovies)\r\n            permissionschange(setViewM, e.target.checked, TypesPermissions.vmovies);\r\n        else if (e.target.id === TypesPermissions.cm)\r\n            permissionschange(setCreateM, e.target.checked, TypesPermissions.cm);\r\n        else if (e.target.id === TypesPermissions.um)\r\n            permissionschange(setUpdateM, e.target.checked, TypesPermissions.um);\r\n        else if (e.target.id === TypesPermissions.dm)\r\n            permissionschange(setDeleteM, e.target.checked, TypesPermissions.dm);\r\n    }\r\n\r\n    const handleChanges = (e) => {\r\n        e.preventDefault();\r\n        updateUserDateInFireBase(user.id, name, email, user.createdAt);\r\n        updateUserPermissionsDateInFireBase(user.id, permissions[0]);\r\n        alert('Details changed successfully');\r\n        setChanged(true);\r\n    }   \r\n\r\n    return(\r\n        <div>\r\n           <h2>Users</h2>\r\n           <h4>Edit user: {name}</h4>\r\n                <div className=\"container py-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"mx-auto col-sm-6\">\r\n                            <div className=\"card bg-dark\" >\r\n                                <div className=\"card-header\">\r\n                                    <h4 className=\"mb-0\">User Information</h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <form className=\"form\" role=\"form\" autoComplete=\"off\">\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\">Name</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"text\" value={name} onChange={ e => setName(e.target.value)} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\">Email</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"email\" value={email} onChange={ e => setEmail(e.target.value)} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\">Permissions</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                \r\n                                                <Form.Group controlId=\"formBasicCheckbox\">\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.vs} label={TypesPermissions.vs} checked={viewS} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.cs} label={TypesPermissions.cs} checked={createS} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.us} label={TypesPermissions.us} checked={updateS} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.ds} label={TypesPermissions.ds} checked={deleteS} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.vmovies}  label={TypesPermissions.vmovies} checked={viewM} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.cm} label={TypesPermissions.cm} checked={createM} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.um} label={TypesPermissions.um} checked={updateM} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.dm} label={TypesPermissions.dm} checked={deleteM} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    \r\n                                                </Form.Group>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\"></label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input type=\"button\" className=\"btn btn-danger\" value=\"Save Changes\" onClick={ e => handleChanges(e) } />\r\n                                                <Link to='allusers' className=\"btn btn-secondary\">Cancel</Link>\r\n                                                { changed ? <Redirect to='allusers' /> : null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditUser;\r\n\r\n\r\n    // useEffect( () => {\r\n    //     setExtractPermissions(getListPermission(permissions));\r\n    // },[]);\r\n\r\n    // const getListPermission = (permissions) => {\r\n    //     delete permissions[0]['id']\r\n    //     console.log(permissions);\r\n\r\n    //     // const keys = Object.keys(permissions[0]);\r\n    //     // const filterId = keys.filter( key => {\r\n    //     //     if(key !== 'id')\r\n    //     //         return key\r\n    //     // });\r\n    //     // console.log(filterId)\r\n    //     // const maps = filterId.map( p => permissions[0][p])\r\n    //     // console.log(maps)\r\n    //     // return maps;\r\n    // }\r\n\r\n    // permissions.map ( p => {\r\n    //     return <Form.Check type=\"checkbox\" label={p} checked={permissions[0][p]} onChange={(e) => handlePermissions(e, p)} />\r\n    // }\r\n    // )\r\n\r\n  ","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Card, Nav, Button, Modal, Form, Dropdown } from 'react-bootstrap';\r\n\r\nimport { deleteMemberFromFirebase, checkMemberInFirebase } from '../../firebase/firebase.utils';\r\n\r\nimport TypesPermissions from '../ManageUsers/permissionsTypes';\r\n\r\n\r\nconst MemberCard = ({member}) => {\r\n\r\n    const currentUserPermissions = useSelector(state => state.user.currentUserPermissions);\r\n\r\n    const moviesList = useSelector(state => state.movies.movies);\r\n    const moviesOfmembers = useSelector(state => state.members.moviesByMember);\r\n    const [moviesByMemberId, setmoviesByMemberId] = useState([]);\r\n    const [filteredList, setFilteredList] = useState([]);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [activeKey, setActiveKey] = useState('details');\r\n    const [isSubNewMovie, setIsSubNewMovie] = useState(false);\r\n\r\n    const [movieId, setMovieId] = useState('');\r\n    const [date,setDate] = useState('');\r\n    const [movieName, setMovieName] = useState('');\r\n    \r\n    const handleClose = () => { \r\n        setShow(false);\r\n    }\r\n\r\n    const handleShow = () => { \r\n        setShow(true);\r\n    }\r\n\r\n    const deleteUser = (e) => {\r\n        e.preventDefault();\r\n        handleClose();\r\n        deleteMemberFromFirebase(member.id, 'members');\r\n        deleteMemberFromFirebase(member.id, 'subscriptions');\r\n\r\n\r\n    }\r\n\r\n    const handleSubNewMovie = e => {\r\n        e.preventDefault();\r\n        setIsSubNewMovie(!isSubNewMovie);\r\n        if(moviesList && moviesByMemberId)\r\n            filteredMoviesExist();\r\n    }\r\n\r\n    const handleMovieSubScripbe = (e, id, name) => {\r\n        e.preventDefault();\r\n        setMovieId(id);\r\n        setMovieName(name);\r\n    }\r\n\r\n    const handleSubscribe = e => {\r\n        e.preventDefault();\r\n        if(movieId && date) {\r\n            // const obj = { movieId, date };\r\n            // console.log(obj)\r\n            // const movies = [...moviesByMemberId , obj];\r\n            // setmoviesByMemberId([...moviesByMemberId , obj]);  /// to check assingment!!!\r\n            const memberId = member.id;\r\n            checkMemberInFirebase('subscriptions', memberId, {movies: moviesByMemberId} );\r\n            console.log(moviesByMemberId )\r\n            // checkMemberInFirebase('subscriptions', memberId, obj );\r\n            alert(`${member.name} member is subscribed to ${movieName} movie`);\r\n            \r\n        }\r\n        else {\r\n            alert('You must choose movie & date');\r\n            setMovieId('');\r\n            setDate('');\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(moviesOfmembers.length > 0) {\r\n            const memberMovies = moviesOfmembers.filter( m => m.id === member.id);\r\n            setmoviesByMemberId(memberMovies[0].movies);\r\n        }\r\n    }, [moviesOfmembers]);\r\n\r\n    useEffect( () => {\r\n        if(movieId && date) {\r\n            const obj = { movieId, date };\r\n            // const movies = [...moviesByMemberId , obj];\r\n            setmoviesByMemberId([...moviesByMemberId , obj]);  /// to check assingment!!!\r\n        }\r\n    }, [movieId, date])\r\n   \r\n    const filteredMoviesExist = () => {\r\n        const filtered  = moviesList.filter(function(array_el){\r\n            return moviesByMemberId.filter(function(anotherOne_el){\r\n                return anotherOne_el.movieId === array_el.id;\r\n            }).length === 0\r\n        });\r\n        setFilteredList(filtered);\r\n    }\r\n       \r\n    return(\r\n        <div>\r\n            <Card bg='dark'>\r\n                <Card.Header bg='secondary'>\r\n                    <Nav variant=\"tabs\" defaultActiveKey=\"details\"\r\n                        activeKey={activeKey} as=\"ul\" \r\n                        onSelect={(selectedKey) => setActiveKey(selectedKey)}>\r\n                        <Nav.Item as=\"li\"> \r\n                            <Nav.Link eventKey=\"details\" className=\"nav nav-tabs btn btn-danger\" \r\n                                >\r\n                                Member Details\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item as=\"li\">\r\n                            <Nav.Link eventKey=\"watched\" className=\"nav nav-tabs btn btn-danger\" \r\n                            >\r\n                                Movies watched\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </Card.Header>\r\n                {\r\n                    (activeKey === 'details') ? \r\n                    <div>\r\n                        <Card.Body>\r\n                            <Card.Title>{member.name}</Card.Title>\r\n                            <Card.Text>\r\n                                Email: {member.email}<br />\r\n                                City: {member.city}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                        {\r\n                            (currentUserPermissions[0][TypesPermissions.us])?\r\n                            (\r\n                                <li className=\"list-inline-item\">\r\n                                    <Link to={{pathname: '/editmember', state:{ member}}}\r\n                                        className=\"btn btn-danger btn-sm rounded-0\" type=\"button\" \r\n                                        data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit\">\r\n                                        <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>    \r\n                                    </Link>\r\n                                </li>     \r\n                            ) : null\r\n                        }\r\n                        {\r\n                            (currentUserPermissions[0][TypesPermissions.ds])?\r\n                            (\r\n                                <li className=\"list-inline-item\">\r\n                                    <Button className=\"btn btn-danger btn-sm rounded-0\" type=\"button\" data-toggle=\"tooltip\" \r\n                                            data-placement=\"top\" title=\"Delete\"\r\n                                            onClick={e => handleShow(e)}>\r\n                                        <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                    </Button>\r\n                                </li>\r\n                            ) : null\r\n                        }\r\n                            <Modal show={show} onHide={handleClose} >\r\n                                        <div className=\"card text-white bg-dark mb-3\">\r\n                                            <Modal.Header closeButton>\r\n                                                <Modal.Title>Delete Member</Modal.Title>\r\n                                            </Modal.Header>\r\n                                            <Modal.Body>\r\n                                                Are you sure you want to delete the user {member.name}?\r\n                                            </Modal.Body>\r\n                                            <Modal.Footer>\r\n                                                <Button variant=\"danger\" onClick={e => deleteUser(e) }>\r\n                                                    Yes\r\n                                                </Button>\r\n                                                <Button variant=\"secondary\" onClick={handleClose}>\r\n                                                    No\r\n                                                </Button>\r\n                                            </Modal.Footer>\r\n                                        </div>\r\n                                    </Modal>\r\n                        </Card.Footer>\r\n                    </div> : \r\n                    <div>\r\n                        <Card.Body>\r\n                            <Card.Title>Movies watched</Card.Title>\r\n                            <Card.Text as=\"ul\">\r\n                                    \r\n                                    {\r\n                                        (moviesByMemberId) ?\r\n                                        moviesByMemberId.map( (m, index) => {\r\n                                        {   var name = '';\r\n                                            moviesList.filter( movie => {\r\n                                            if(movie.id === m.movieId){\r\n                                                name = movie.name\r\n                                            }\r\n                                                return name\r\n                                            } ) \r\n                                        }\r\n                                        return <li key={index}>\r\n                                                Movie : {name} <br />\r\n                                                Date: {m.date}\r\n                                            </li>\r\n                                    } )\r\n                                    : null\r\n                                    }\r\n                                    \r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                        {\r\n                            (currentUserPermissions[0][TypesPermissions.us])?\r\n                            (\r\n                                <Button className=\"btn btn-danger\" onClick={ e => {handleSubNewMovie(e)}}>Subscribe to new movie </Button>\r\n                            ): null\r\n                        }\r\n                            {\r\n                                (isSubNewMovie) ? \r\n                                <div>\r\n                                    <br />\r\n                                    <Dropdown>\r\n                                        <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                                            {(!movieName) ? 'Movies List' : `${movieName}` }\r\n                                        </Dropdown.Toggle>\r\n\r\n                                        <Dropdown.Menu>\r\n                                        {\r\n                                            (filteredList.length > 0) ? \r\n                                                (\r\n                                                    filteredList.map( (m, index) => {\r\n                                                        return <Dropdown.Item key={index}\r\n                                                                variant=\"warning\"\r\n                                                                className=\"btn btn-secondary\"\r\n                                                                onClick={e => handleMovieSubScripbe(e, m.id, m.name)}>\r\n                                                                {m.name}\r\n                                                                </Dropdown.Item>\r\n                                                    }) \r\n                                                \r\n                                                )\r\n                                            : \r\n                                                (\r\n                                                    moviesList.map( (m, index) => {\r\n                                                        return <Dropdown.Item key={index}\r\n                                                                variant=\"warning\"\r\n                                                                className=\"btn btn-secondary\"\r\n                                                                onClick={e => handleMovieSubScripbe(e, m.id, m.name)}>\r\n                                                                {m.name}\r\n                                                                </Dropdown.Item>\r\n                                                    }) \r\n                                                \r\n                                            ) \r\n                                        }\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n\r\n                                    <Form.Group controlId=\"dw\">\r\n                                        <Form.Label>Select Date watched:</Form.Label>\r\n                                        <Form.Control className=\"btn btn-secondary\" type=\"date\" name=\"dw\" \r\n                                            placeholder=\"Date watched\" \r\n                                            onChange={e => setDate(e.target.value)} />\r\n                                    </Form.Group>\r\n                                    <Button className=\"btn btn-danger\" onClick={handleSubscribe}>Subscribe</Button>\r\n                                </div> : null\r\n                            }\r\n                        </Card.Footer>\r\n                    </div>\r\n                }\r\n               \r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemberCard;","import React, { useEffect } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport MemberCard from './MemberCard';\r\n\r\nimport { firestore, getMoviesByMemberid } from '../../firebase/firebase.utils';\r\n\r\nimport { setMoviesByMember } from '../../redux/members/members.actions';\r\n\r\nconst AllMembers = () => {\r\n\r\n    const members = useSelector(state => state.members.members);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect( ()=> {\r\n        const collectionRef = firestore.collection('subscriptions');\r\n        collectionRef.onSnapshot(async snapshot => {\r\n            const collection = getMoviesByMemberid(snapshot);\r\n            dispatch(setMoviesByMember(collection));\r\n        })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <br/><br/><br/>\r\n            <h1 className=\"text-center\"> Members List: </h1>\r\n            <div className=\"card-group justify-content-center\">\r\n\r\n            {\r\n                members.map( (member, index) => {\r\n                    return <MemberCard key={index} member={member}/>\r\n                })\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllMembers;","import React, { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { updateMemberDataInFirebase } from '../../firebase/firebase.utils';\r\n\r\nconst EditMember = () => {\r\n\r\n    const location = useLocation();\r\n    const member = location.state.member;\r\n\r\n    const [name, setName] = useState(member.name);\r\n    const [email, setEmail] = useState(member.email);\r\n    const [city, setCity] = useState(member.city);\r\n\r\n    const [changed, setChanged] = useState(false);\r\n\r\n    const handleChanges = (e) => {\r\n        e.preventDefault();\r\n        updateMemberDataInFirebase(member.id, name, email,city, 'members')\r\n        alert('Details changed successfully');\r\n        setChanged(true);\r\n    }   \r\n\r\n    return(\r\n        <div>\r\n            <br/><br/><br/>\r\n            <h2>Members</h2>\r\n            <h4>Edit member: {name}</h4>\r\n            <div className=\"container py-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"mx-auto col-sm-6\">\r\n                            <div className=\"card bg-dark\" >\r\n                                <div className=\"card-header\">\r\n                                    <h4 className=\"mb-0\">Member Information</h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <form className=\"form\" role=\"form\" autoComplete=\"off\">\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\">Name</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"text\" value={name} onChange={ e => setName(e.target.value)} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\">Email</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"email\" value={email} onChange={ e => setEmail(e.target.value)} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\">City</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"text\" value={city} onChange={ e => setCity(e.target.value)} />\r\n                                            </div>\r\n                                         </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\"></label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input type=\"button\" className=\"btn btn-danger\" value=\"Save Changes\" onClick={ e => handleChanges(e) } />\r\n                                                <Link to='allmembers' className=\"btn btn-secondary\">Cancel</Link>\r\n                                                { changed ? <Redirect to='allmembers' /> : null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMember;","import React, { useState } from 'react';\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { addNewUser } from '../../firebase/firebase.utils';\r\n\r\nconst AddMember = () => {\r\n\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [city, setCity] = useState('');\r\n\r\n    const [changed, setChanged] = useState(false);\r\n\r\n    const capitalize = (s) => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n      }\r\n\r\n    const handleChanges = (e) => {\r\n        e.preventDefault();\r\n        if(name && email && city) {\r\n            addNewUser('members', {name, email, city});\r\n            alert('Details saved successfully');\r\n            setChanged(true);\r\n        }\r\n        else{\r\n            alert('You muse insert name & email & city');\r\n            setName('');\r\n            setEmail('');\r\n            setCity('');\r\n        }\r\n    }   \r\n\r\n    return(\r\n        <div>\r\n            <br/><br/><br/>\r\n            <h1 className=\"text-center\"> Members </h1>\r\n            <div className=\"container py-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"mx-auto col-sm-6\">\r\n                        <div className=\"card bg-dark\" >\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"mb-0\">Add new member</h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form className=\"form\" role=\"form\" autoComplete=\"off\">\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Name</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"text\" onChange={ e => setName(capitalize(e.target.value))} />\r\n                                            </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Email</label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input className=\"form-control\" type=\"email\" onChange={ e => setEmail(capitalize(e.target.value))} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">City</label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input className=\"form-control\" type=\"text\" onChange={ e => setCity(capitalize(e.target.value))} />\r\n                                        </div>\r\n                                    </div>\r\n                                       \r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\"></label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input type=\"button\" className=\"btn btn-danger\" value=\"Add member\" onClick={ e => handleChanges(e) } />\r\n                                                <Link to='allmembers' className=\"btn btn-secondary\">Cancel</Link>\r\n                                                { changed ? <Redirect to='allmembers' /> : null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMember;","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport { Switch, Route, Redirect  } from 'react-router-dom';\n\nimport Header from './components/header/Header';\nimport LoginPage from './pages/Login/LoginPage';\nimport SignUp from './components/SignUp/SignUp';\nimport SignUpFirstUserName from './components/SignUp/SignUpFirstUserName';\nimport MainPage from './pages/MainPage/MainPage.jsx';\n\nimport ManageUsers from './pages/ManageUsers/ManageUsers.jsx';\nimport Movies from './pages/Movies/Movies.jsx';\nimport Subscriptions from './pages/Subscriptions/Subscriptions.jsx';\n\nimport AllMovies from './pages/Movies/AllMovies';\nimport AddMovie from './pages/Movies/AddMovie';\nimport EditMovie from './pages/Movies/EditMovie';\nimport AllUserManage from './pages/ManageUsers/AllUserManage';\nimport AddUserByAdmin from './pages/ManageUsers/AddUserByAdmin';\nimport EditUser from './pages/ManageUsers/EditUser';\nimport AllMembers from './pages/Subscriptions/AllMembers';\nimport EditMember from './pages/Subscriptions/EditMember';\nimport AddMember from './pages/Subscriptions/AddMember';\n\nimport { onAuthStateChangeFirebase, addCollectionsAndDocuments } from './firebase/firebase.utils';\n\nimport { connect } from 'react-redux';\nimport { setUserLoggenIn, setUserLoginEmailPass } from './redux/user/user.action';\n\n// import util from './utils/utils';\n\n// <Route path='/adduser' component={AddUser} />\n// <Route exact path='/' component={LoginPage} />\n\nfunction App({ loggedIn, setUserLoggenIn, setUserLoginEmailPass }) {\n  // const [movies, setMovies] = useState([]);\n  // const [members, setMembers] = useState([]);\n  //  will be to start listening to auth state changes when our application mounts.\n  useEffect( () => {\n    // for first time insert to db in firebase\n    // util.getMovies().then(resp => setMovies(resp));\n    // util.getMembers().then(resp => setMembers(resp));\n\n    const unsubscribe = onAuthStateChangeFirebase(setUserLoggenIn, setUserLoginEmailPass);\n    return () => {\n      unsubscribe();\n    };\n\n  }, []);\n\n    // needs to delete - for first time insert to db in firebase\n    // useEffect( () => {\n    //   addCollectionsAndDocuments('members', members);\n    // }, [members]);\n  \n      // needs to delete - for first time insert to db in firebase\n    // useEffect( () => {\n    //   addCollectionsAndDocuments('movies', movies);\n    // }, [movies]);\n\n  \n  return (\n      <div className=\"App\">\n        <Header loggedIn={loggedIn} />\n            <Switch>  \n              <Route path='/signup' component={SignUp} />\n              <Route path='/signupusername' component={SignUpFirstUserName} />\n              <Route path='/mainpage' component={MainPage} />\n              <Route path='/signin' component={LoginPage} />\n              <Route path='/manageusers' component={ManageUsers} />\n              <Route path='/allusers' component={AllUserManage} />\n              <Route path='/addusername' component={AddUserByAdmin} />\n              <Route path='/edituser' component={EditUser} />\n              <Route path='/movies' component={Movies} />\n              <Route path='/allmovies' component={AllMovies} />\n              <Route path='/editmovie' component={EditMovie} />\n              <Route path='/addmovie' component={AddMovie} />\n              <Route path='/subscriptions' component={Subscriptions} />\n              <Route path='/allmembers' component={AllMembers} />\n              <Route path='/editmember' component={EditMember} />\n              <Route path='/addmember' component={AddMember} />\n            </Switch>\n            { loggedIn ? <Redirect from=\"/signin\" to=\"/mainpage\" /> : <Redirect  to=\"signin\" />  }\n      </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  loggedIn: state.user.loggedIn\n})\n\n\nconst mapDispatchToProps = dispatch => ({\n  setUserLoggenIn: flag => dispatch(setUserLoggenIn(flag)),\n  setUserLoginEmailPass: user => dispatch(setUserLoginEmailPass(user))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import UserActionTypes from './user.type';\r\nconst INITIAL_STATE = {\r\n    currentUser: null,\r\n    currentUserPermissions: [],\r\n    loggedIn: false,\r\n    error: null,\r\n    users: [],\r\n    usersPermissions: [],\r\n    usersLoginList : [],\r\n}\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case UserActionTypes.LOG_IN_USER:\r\n            return {\r\n                ...state,\r\n                loggedIn: action.payload\r\n            }\r\n        case UserActionTypes.SET_EMAIL_PASS_LOG_IN:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload\r\n            }\r\n        case UserActionTypes.GET_USERS_LIST:\r\n            return {\r\n                ...state,\r\n                users: action.payload\r\n            }\r\n        case UserActionTypes.GET_PERMISSIONS_USERS:\r\n            return {\r\n                ...state,\r\n                usersPermissions: action.payload\r\n            } \r\n        case UserActionTypes.SET_USERS_WITH_PERMISSIONS:\r\n            return{\r\n                ...state,\r\n                users: action.payload\r\n            }\r\n            case UserActionTypes.GET_USERS_LOGIN_LIST:\r\n                return {\r\n                    ...state,\r\n                    usersLoginList: action.payload\r\n                }\r\n            case UserActionTypes.GET_CURRENT_USER_PERMISSIONS: \r\n                return {\r\n                    ...state,\r\n                    currentUserPermissions: action.payload\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import MoviesActionsTypes from './movies.types';\r\n\r\nconst INITIAL_STATE = {\r\n    movies: []\r\n}\r\n\r\nconst moviesReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case MoviesActionsTypes.SET_MOVIES_FROM_FIRE_STORE:\r\n            return {\r\n                ...state,\r\n                movies: action.payload\r\n            }\r\n        case MoviesActionsTypes.ADD_MOVIE:\r\n            return {\r\n                ...state,\r\n                movies: [...state.movies, action.payload]\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default moviesReducer;","import MembersActionsTypes from './members.types';\r\n\r\nconst INITIAL_STATE = {\r\n    members: [],\r\n    moviesByMember: []\r\n}\r\n\r\nconst membersReducer = (state=INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case MembersActionsTypes.SET_MEMBERS_FROM_FIREBASE:\r\n            return {\r\n                ...state,\r\n                members: action.payload\r\n            }\r\n        case MembersActionsTypes.SET_MOVIES_BY_MEMBER_FROM_FIREBASE:\r\n            return {\r\n                ...state,\r\n                moviesByMember: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default membersReducer;","// represent all the state of the application\r\nimport { combineReducers } from 'redux';\r\n\r\nimport userReducer from './user/user.reducer';\r\nimport moviesReducer from './movies/movies.reducer';\r\nimport membersReducer from './members/members.reducer';\r\n\r\nconst rootReducer = combineReducers ({\r\n    user: userReducer,\r\n    movies: moviesReducer,\r\n    members: membersReducer\r\n});\r\n\r\nexport default rootReducer;\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from './root-reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst middlewares = [logger];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    middlewares.push(logger);\r\n} \r\n\r\nexport const store = createStore(rootReducer,  applyMiddleware(...middlewares));\r\n// export const store = createStore(rootReducer,  applyMiddleware(thunk));\r\n\r\nexport default {store};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nimport {store} from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}