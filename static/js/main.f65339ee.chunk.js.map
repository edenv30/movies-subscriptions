{"version":3,"sources":["components/Error.js","pages/MainPage/Home.js","firebase/firebase.utils.js","components/header/Header.jsx","redux/user/user.type.js","redux/user/user.action.js","components/SignIn/SignIn.jsx","pages/Login/LoginPage.jsx","components/SignUp/SignUp.jsx","components/BackButton.js","components/SignUp/SignUpFirstUserName.js","redux/movies/movies.types.js","pages/MainPage/MainPage.jsx","redux/movies/movies.actions.js","pages/ManageUsers/ManageUsers.jsx","pages/ManageUsers/permissionsTypes.js","pages/Movies/MovieCard.js","pages/Movies/AllMovies.js","pages/Movies/Movies.jsx","redux/members/members.types.js","pages/Subscriptions/Subscriptions.jsx","redux/members/members.actions.js","pages/Movies/AddMovie.js","pages/Movies/EditMovie.js","pages/ManageUsers/UserCard.js","pages/ManageUsers/AllUserManage.js","pages/ManageUsers/AddUserByAdmin.js","pages/ManageUsers/EditUser.js","pages/Subscriptions/MemberCard.js","pages/Subscriptions/AllMembers.js","pages/Subscriptions/EditMember.js","pages/Subscriptions/AddMember.js","App.js","redux/user/user.reducer.js","redux/movies/movies.reducer.js","redux/members/members.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["Error","Home","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","permissionsDetails","viewSubscriptions","createSubscriptions","updateSubscriptions","deleteSubscriptions","viewMovies","createMovies","updateMovies","deleteMovies","addCollectionToDocument","collectionKey","uid","objectToAdd","a","collectionRef","collection","batch","newDocRef","doc","set","commit","console","log","createUserProfileDocument","userAuth","additionalData","userRef","get","exists","displayName","email","createdAt","Date","message","addNewUser","collecionName","objToAdd","id","signup","userName","userId","password","createUserWithEmailAndPassword","user","error","addDocumentToCollection","getCollectionListSnapshotToMapUsersLogin","docs","map","data","getCollectionListSnapshotToMap","getCollectionListusersPermissionsSnapShotToMap","getCollectionMembersSnapshotToMap","name","city","getMoviesByMemberid","movies","updateDataInFirebase","objToUpdate","memberRef","update","deleteDataFromFirebase","delete","checkMemberInFirebase","collectionName","Header","loggedIn","useSelector","state","currentUser","Navbar","fixed","expand","variant","bg","Brand","style","fontWeight","color","fontSize","Toggle","aria-controls","Collapse","Nav","className","defaultActiveKey","as","Item","to","activeClassName","activeStyle","Form","inline","onClick","signOut","UserActionType","LOG_IN_USER","SET_EMAIL_PASS_LOG_IN","SET_USER_SIGNUP","GET_USERS_LIST","GET_PERMISSIONS_USERS","SET_USERS_WITH_PERMISSIONS","GET_USERS_LOGIN_LIST","GET_CURRENT_USER_PERMISSIONS","setUserLoginEmailPass","type","UserActionTypes","payload","getUserLoginList","users","connect","dispatch","useState","setEmail","setPassword","handleClick","e","preventDefault","signInWithEmailAndPassword","login","htmlFor","aria-describedby","placeholder","onChange","target","value","LoginPage","useLocation","confirmPassword","setConfirmPassword","setDisplayName","isSubmitted","setIsSubmitted","onChangeHandler","event","currentTarget","handleSubmit","alert","flag","useEffect","BackButton","children","history","useHistory","Button","goBack","SignUpFirstUserName","setUserName","usersList","usersLoginList","useDispatch","isExist","setIsExist","isSignup","setIsSignup","isSubmit","setIsSubmit","setUserId","onSnapshot","snapshot","isSign","forEach","isUserNameExist","toLowerCase","pathname","MoviesActionsTypes","SET_MOVIES_FROM_FIRE_STORE","ADD_MOVIE","MainPage","permissionsUsers","usersPermissions","genres","image","premiered","routeName","encodeURI","userPremission","filter","permission","ManageUsers","TypesPermissions","vs","cs","us","ds","vmovies","cm","um","dm","MovieCard","movie","currentUserPermissions","show","setShow","handleClose","key","width","textAlign","background","src","alt","ListGroup","gener","index","data-toggle","data-placement","title","Modal","onHide","closeButton","Title","Body","Footer","deleteMovie","AllMovies","searchField","moviesList","moviesListTemp","setmoviesListTemp","filteredMovies","includes","err","Movies","setSearchField","MembersActionsTypes","SET_MEMBERS_FROM_FIREBASE","SET_MOVIES_BY_MEMBER_FROM_FIREBASE","Subscriptions","AddMovie","setName","setGenres","setImage","setPremiered","movieToAdd","setMovieToAdd","changed","setChanged","url","validator","isURL","Object","keys","length","addMovie","fetchMyAPI","autoComplete","changeName","res","split","changeGenres","handleCancel","EditMovie","capitalizeFirstLetter","str","charAt","toUpperCase","slice","genr","movieName","handleChanges","UserCard","permissions","maxWidth","aria-hidden","DropdownButton","size","maxHeight","p","deleteUser","AllUserManage","setUsers","setUsersPermissions","userp","setUsersWithPermissions","AddUserByAdmin","EditUser","setPermissions","viewS","setViewS","createS","setCreateS","updateS","setUpdateS","deleteS","setDeleteS","viewM","setViewM","createM","setCreateM","updateM","setUpdateM","deleteM","setDeleteM","permissionschange","func","typeP","handlePermissions","checked","Group","controlId","Check","label","userData","userDataPermissions","MemberCard","member","moviesOfmembers","members","moviesByMember","moviesByMemberId","setmoviesByMemberId","filteredList","setFilteredList","activeKey","setActiveKey","isSubNewMovie","setIsSubNewMovie","movieId","setMovieId","date","setDate","setMovieName","handleMovieSubScripbe","updateSubscriptionsMovies","memberMovies","m","obj","filtered","array_el","anotherOne_el","filteredMoviesExist","Card","onSelect","selectedKey","Link","eventKey","Text","handleSubNewMovie","Dropdown","Menu","Label","Control","memberId","AllMembers","EditMember","setCity","AddMember","capitalize","s","setUserLoggenIn","callback","callbackDetails","unsubscribe","onAuthStateChanged","snapShot","exact","path","component","SignUp","from","INITIAL_STATE","userReducer","action","moviesReducer","membersReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.f65339ee.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Error = () => {\r\n\r\n    return(\r\n        <div>  \r\n            <br /><br /><br />\r\n            <h1>Oops! Page not found!</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error;","import React from 'react';\r\n\r\nconst Home = () => {\r\n\r\n    return(\r\n        <div>  \r\n            <br /><br /><br />\r\n            <h1>Movies - Subscriptions</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyCN1VJ-36hCrlmFmMxyTrB7pXn1QubKLf0\",\r\n  authDomain: \"movies-subscriptions.firebaseapp.com\",\r\n  databaseURL: \"https://movies-subscriptions.firebaseio.com\",\r\n  projectId: \"movies-subscriptions\",\r\n  storageBucket: \"movies-subscriptions.appspot.com\",\r\n  messagingSenderId: \"261996716763\",\r\n  appId: \"1:261996716763:web:84505c38bea3ebad8d62fe\",\r\n  measurementId: \"G-BR8W9C4BC3\"\r\n};\r\n\r\n  firebase.initializeApp(config);\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n\r\n  const permissionsDetails = {\r\n    viewSubscriptions: true,\r\n    createSubscriptions: false,\r\n    updateSubscriptions: false,\r\n    deleteSubscriptions: false,\r\n    viewMovies: true,\r\n    createMovies: false,\r\n    updateMovies: false,\r\n    deleteMovies: false\r\n  }\r\n\r\n  export const addCollectionToDocument = async (collectionKey, uid, objectToAdd) => {\r\n    try {\r\n      const collectionRef = firestore.collection(collectionKey);\r\n      //with batch object we add al the sets must to add all if not not set anyone\r\n      const batch = firestore.batch();\r\n      const newDocRef = collectionRef.doc(uid); // firebase render an id for the collection\r\n      batch.set(newDocRef, objectToAdd);\r\n      // async request -> return a promise\r\n      return await batch.commit();\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n   // function that take the user object authentication and store inside our database\r\n  // async function, because we make an api request\r\n  export const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if(!userAuth) return; // if the user signin - if user Auth not exist / userAuth == null -> false -> !false\r\n    \r\n    // if the user Auth exist, we go in firestore an query\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const snapShot = await userRef.get()\r\n    //if userAuth doesn't exist, we create a one using the document object reference (not the snapshot, snapshot for the data)\r\n    if(!snapShot.exists) {  // if user not exist we create him\r\n      const { displayName, email } = userAuth;\r\n      const createdAt = new Date();\r\n      addCollectionToDocument('permissions', userAuth.uid, permissionsDetails);\r\n      try {\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData\r\n        })\r\n        // add collection permissions to user\r\n      } catch(err) {\r\n          console.log('error creating user', err.message);\r\n      }\r\n    }\r\n    return userRef;\r\n\r\n  } \r\n\r\n  export const addNewUser = async(collecionName, objToAdd) => {\r\n    try {\r\n      const collectionRef = firestore.collection(collecionName);\r\n      //with batch object we add al the sets must to add all if not not set anyone\r\n      const batch = firestore.batch();\r\n      const newDocRef = collectionRef.doc(); // firebase render an id for the collection\r\n      if(collecionName === 'users')\r\n        objToAdd.id=newDocRef.id;\r\n      if(collecionName === 'usersLogin')\r\n        addCollectionToDocument('permissions', newDocRef.id, permissionsDetails);\r\n      batch.set(newDocRef, objToAdd);\r\n      // async request -> return a promise\r\n      return await batch.commit();\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  export const onAuthStateChangeFirebase = (callback, callbackDetails) => {\r\n    return auth.onAuthStateChanged( async userAuth => {\r\n      if(userAuth) {\r\n        callback(true); // set loggedIn to true\r\n        const userRef = await createUserProfileDocument(userAuth);\r\n        userRef.onSnapshot( snapShot => {\r\n          callbackDetails({ \r\n            id: snapShot.id,\r\n            ...snapShot.data()\r\n          })\r\n        } );\r\n        console.log('The user is logged in');\r\n      }\r\n      else {\r\n        callback(false);\r\n        callbackDetails(userAuth);\r\n        console.log(\"The user is not logged in\");\r\n      }\r\n    });\r\n  }\r\n\r\n  export const signup = async (userName, userId, displayName, email, password) => {\r\n    try {\r\n      const {user} = await auth.createUserWithEmailAndPassword(email, password);\r\n      await createUserProfileDocument(user, {userName, userId, displayName});\r\n      return true;\r\n    }\r\n    catch(err) {\r\n      console.error(err);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  export const login = (email, password) => {\r\n    auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  export const logout = () => {\r\n    auth.signOut();\r\n  }\r\n\r\n  // adding data one time \r\n  export const addCollectionsAndDocuments = async (collectionKey, objectsToAdd) => {\r\n    try {\r\n      const collectionRef = firestore.collection(collectionKey);\r\n      //with batch object we add al the sets must to add all if not not set anyone\r\n      const batch = firestore.batch();\r\n      objectsToAdd.forEach( obj => {\r\n        const newDocRef = collectionRef.doc(); // firebase render an id for the collection\r\n        batch.set(newDocRef, obj);\r\n      });\r\n      // async request -> return a promise\r\n      return await batch.commit();\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  //add one item to db\r\n  export const addDocumentToCollection = async (collectionKey, objectToAdd) => {\r\n    try {\r\n      const collectionRef = firestore.collection(collectionKey);\r\n      //with batch object we add al the sets must to add all if not not set anyone\r\n      const batch = firestore.batch();\r\n      const newDocRef = collectionRef.doc(); // firebase render an id for the collection\r\n      batch.set(newDocRef, objectToAdd);\r\n      // async request -> return a promise\r\n      return await batch.commit();\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  //for usersLogin\r\n  export const getCollectionListSnapshotToMapUsersLogin = (collection) => {\r\n\r\n    const transformedCollections = collection.docs.map( doc => {\r\n      const { userName, signup } = doc.data();\r\n\r\n      return {\r\n        id: doc.id,\r\n        userName,\r\n        signup\r\n      }\r\n    } );\r\n    return transformedCollections;\r\n  }\r\n\r\n  //for movies\r\n  export const convertCollectionsSnapshotToMap = (collections) => {\r\n    const transformedCollections = collections.docs.map( doc => {\r\n      const { name, genres, image, premiered } = doc.data();\r\n\r\n      return {\r\n        routeName: encodeURI(name.toLowerCase()),\r\n        id: doc.id,\r\n        name, \r\n        genres, \r\n        image, \r\n        premiered\r\n      }\r\n    } );\r\n    return transformedCollections;\r\n\r\n    // return transformedCollections.reduce((accumulator, collection) => {\r\n    //   // accumulator[collection.name.toLowerCase()] = collection;\r\n    //   accumulator['movies'] = collection;\r\n    //   console.log(accumulator)\r\n    //   return accumulator;\r\n    // }, {})\r\n  } \r\n\r\n  //for users \r\n  export const getCollectionListSnapshotToMap = (collection) => {\r\n\r\n    const transformedCollections = collection.docs.map( doc => {\r\n      const { displayName, email, createdAt, userName, userId } = doc.data();\r\n\r\n      return {\r\n        id: doc.id,\r\n        displayName, \r\n        email, \r\n        createdAt,\r\n        userName,\r\n        userId\r\n      }\r\n    } );\r\n    return transformedCollections;\r\n  }\r\n\r\n  // for users permissions\r\n  export const getCollectionListusersPermissionsSnapShotToMap = (collection) => {\r\n    const transformedCollections = collection.docs.map( doc => {\r\n      const {   viewSubscriptions, createSubscriptions, updateSubscriptions, deleteSubscriptions,\r\n                viewMovies, createMovies, updateMovies, deleteMovies } = doc.data();\r\n        return {\r\n                id: doc.id,\r\n                viewSubscriptions, \r\n                createSubscriptions, \r\n                updateSubscriptions,\r\n                deleteSubscriptions,\r\n                viewMovies,\r\n                createMovies,\r\n                updateMovies,\r\n                deleteMovies\r\n                }\r\n    } )\r\n    return transformedCollections;\r\n  }\r\n\r\n  //for members\r\n  export const getCollectionMembersSnapshotToMap = (collection) => {\r\n    const transformedCollections = collection.docs.map( doc => {\r\n      const { name, email, city } = doc.data();\r\n\r\n      return {\r\n        id: doc.id,\r\n        name, \r\n        email, \r\n        city\r\n      }\r\n    } );\r\n    return transformedCollections;\r\n  } \r\n\r\n  // get movies from subscriptions collection by member id\r\nexport const getMoviesByMemberid = (collection) => {\r\n    \r\n  const transformedCollections = collection.docs.map( doc => {\r\n    const { movies } = doc.data();\r\n\r\n    return {\r\n      id: doc.id,\r\n      movies\r\n    }\r\n\r\n  } );\r\n  return transformedCollections;\r\n}\r\n\r\nexport const updateDataInFirebase = async (collection, id, objToUpdate) => {\r\n  try {\r\n    const memberRef = firestore.collection(collection).doc(id);\r\n    //with batch object we add all the sets must to add all if not not set anyone\r\n    const batch = firestore.batch();\r\n    batch.update(memberRef, objToUpdate);\r\n    // async request -> return a promise\r\n    return await batch.commit();\r\n  } catch(err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport const deleteDataFromFirebase = async (collection, id) => {\r\n  try {\r\n    const collectionRef = firestore.collection(collection).doc(id);\r\n    //with batch object we add al the sets must to add all if not not set anyone\r\n    const batch = firestore.batch();\r\n    batch.delete(collectionRef);\r\n    // async request -> return a promise\r\n    return await batch.commit();\r\n  } catch(err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\n// check if member exist, no -> create a new , yes -> update in firebase\r\nexport const checkMemberInFirebase = async (collectionName, id, objectToAdd ) => {\r\n  try {\r\n    const memberRef = firestore.collection(collectionName).doc(id);\r\n    const batch = firestore.batch();\r\n    const doc = await memberRef.get();\r\n    if (!doc.exists) {\r\n      console.log('No such document!');\r\n      batch.set(memberRef, objectToAdd);\r\n    } else {\r\n      console.log('Document data:', doc.data());\r\n      // const membermovieRef = memberRef.collection('movies')\r\n      batch.update(memberRef, objectToAdd);\r\n    }\r\n    return await batch.commit();\r\n  \r\n  } catch(err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport default firebase;","import React from 'react';\r\n\r\nimport { Navbar, Nav, Form } from 'react-bootstrap';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nimport { logout } from '../../firebase/firebase.utils';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\n// <Nav className=\"mr-auto\" defaultActiveKey=\"/home\" as=\"ul\">\r\n// <Nav.Link href='mainpage'>Welcome to Movies-Subscriptions</Nav.Link>\r\n// </Nav>\r\n// <Nav className=\"mr-auto\"  as=\"li\">\r\n// <Nav.Link href='movies'>Movies</Nav.Link>\r\n// </Nav>\r\n// <Nav className=\"mr-auto\"  as=\"li\">\r\n// <Nav.Link href='subscriptions'>Subscriptions</Nav.Link>\r\n// </Nav>\r\n\r\n//                 <Navbar.Brand href='mainpage'></Navbar.Brand>\r\n\r\nconst Header = ({ loggedIn }) => {\r\n\r\n    const user = useSelector( state => state.user.currentUser )\r\n\r\n    return (\r\n        <div>\r\n            <header>\r\n                <Navbar fixed=\"top\" expand=\"lg\" variant=\"dark\" bg=\"dark\">\r\n                <Navbar.Brand style={{fontWeight: \"bold\", color: \"orange\", fontSize: \"12px\"}}>{loggedIn ? ((user)? user.displayName: null) : \"User\" }</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    {\r\n                        (user)?\r\n                        (\r\n                            <Nav className=\"mr-auto\" defaultActiveKey=\"mainpage\" as=\"ul\">\r\n                                <Nav.Item  as=\"li\">\r\n                                    <NavLink to='mainpage' className=\"nav-link\" activeClassName=\"selected\" \r\n                                        activeStyle={{fontWeight: \"bold\"}}>\r\n                                        Home\r\n                                    </NavLink>\r\n                                </Nav.Item>\r\n                                <Nav.Item as=\"li\">\r\n                                    <NavLink to='movies' className=\"nav-link\" activeClassName=\"selected\" \r\n                                        activeStyle={{fontWeight: \"bold\"}}>\r\n                                        Movies\r\n                                    </NavLink>\r\n                                </Nav.Item>\r\n                                <Nav.Item as=\"li\">\r\n                                    <NavLink to='subscriptions' className=\"nav-link\" activeClassName=\"selected\" \r\n                                            activeStyle={{fontWeight: \"bold\"}}>\r\n                                        Subscription\r\n                                    </NavLink>\r\n                                </Nav.Item>\r\n                                {\r\n                                    (user.userName === 'admin') ?\r\n                                    (  \r\n                                        <Nav.Item as=\"li\">\r\n                                            <NavLink to='manageusers' className=\"nav-link\" activeClassName=\"selected\" \r\n                                                activeStyle={{fontWeight: \"bold\"}} >\r\n                                                Users Management\r\n                                            </NavLink>\r\n                                        </Nav.Item>\r\n                                    ) : null\r\n                                  \r\n                                }\r\n                            </Nav>\r\n\r\n                        ) : \r\n                        (\r\n                            (\r\n                                <Nav className=\"mr-auto\" defaultActiveKey=\"signin\" as=\"ul\">\r\n                                    <Nav.Item  as=\"li\">\r\n                                        <NavLink to='signin' className=\"nav-link\" activeClassName=\"selected\" \r\n                                            activeStyle={{fontWeight: \"bold\"}}>\r\n                                            Home\r\n                                        </NavLink>\r\n                                    </Nav.Item>\r\n                                </Nav>\r\n                            )\r\n                        )\r\n                    }\r\n                   \r\n\r\n                    <Form inline>\r\n                        {\r\n                            loggedIn ?\r\n                            (<div className=\"btn btn-outline-warning\" onClick={ () =>  logout() }>SIGN OUT</div>)\r\n                            :\r\n                            (<Link to='signin' className=\"btn btn-outline-warning\">SIGN IN</Link>)\r\n                        }\r\n                    </Form>\r\n                </Navbar.Collapse>\r\n                </Navbar>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n \r\n\r\nexport default (Header);\r\n\r\n// <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n// <Button variant=\"outline-success\">Search</Button>","const UserActionType  ={\r\n    LOG_IN_USER: 'LOG_IN_USER',\r\n    SET_EMAIL_PASS_LOG_IN: 'SET_EMAIL_PASS_LOG_IN',\r\n    SET_USER_SIGNUP: 'SET_USER_SIGNUP',\r\n    GET_USERS_LIST: 'GET_USERS_LIST',\r\n    GET_PERMISSIONS_USERS: 'GET_PERMISSIONS_USERS',\r\n    SET_USERS_WITH_PERMISSIONS: 'SET_USERS_WITH_PERMISSIONS',\r\n    GET_USERS_LOGIN_LIST: 'GET_USERS_LOGIN_LIST',\r\n    GET_CURRENT_USER_PERMISSIONS: 'GET_CURRENT_USER_PERMISSIONS'\r\n}\r\n\r\nexport default UserActionType;","import UserActionTypes from './user.type';\r\n\r\nexport const setUserLoggenIn = user => ({\r\n    type: UserActionTypes.LOG_IN_USER,\r\n    payload: user\r\n});\r\n\r\nexport const setUserLoginEmailPass = user => ({\r\n    type: UserActionTypes.SET_EMAIL_PASS_LOG_IN,\r\n    payload: user\r\n});\r\n\r\nexport const setUserSignup = user => ({\r\n    type: UserActionTypes.SET_USER_SIGNUP,\r\n    payload: user\r\n});\r\n\r\nexport const getUsersList = users => ({\r\n    type: UserActionTypes.GET_USERS_LIST,\r\n    payload: users\r\n});\r\n\r\nexport const getPermissionsUsers = usersPermissions => ({\r\n    type: UserActionTypes.GET_PERMISSIONS_USERS,\r\n    payload: usersPermissions\r\n});\r\n\r\nexport const setUsersWithPermissions = users => ({\r\n    type: UserActionTypes.SET_USERS_WITH_PERMISSIONS,\r\n    payload: users\r\n});\r\n\r\nexport const getUserLoginList = users => ({\r\n    type: UserActionTypes.GET_USERS_LOGIN_LIST,\r\n    payload: users\r\n});\r\n\r\nexport const getCurrentUserPermissions = user => ({\r\n    type: UserActionTypes.GET_CURRENT_USER_PERMISSIONS,\r\n    payload: user\r\n});","import React, { useState } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { login } from '../../firebase/firebase.utils';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setUserLoginEmailPass } from '../../redux/user/user.action';\r\n\r\n\r\nconst SignIn = ({setUserLoginEmailPass}) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        // setUserLoginEmailPass({ email, password });\r\n        login(email, password);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Movies - Subscriptions: Sign In </h1>\r\n            <form className=\"text-center\">\r\n                <div className=\"form-group w-25 p-3 mx-auto\">\r\n                    <label htmlFor=\"inputEmail1\">Email address</label>\r\n                    <input type=\"email\" className=\"form-control\" id=\"inputEmail1\" \r\n                        aria-describedby=\"emailHelp\" placeholder=\"Enter email\"\r\n                        onChange={ e => setEmail(e.target.value) } />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                </div>\r\n                <div className=\"form-group w-25 p-3 mx-auto\">\r\n                    <label htmlFor=\"inputPassword1\">Password</label>\r\n                    <input type=\"password\" className=\"form-control\" id=\"inputPassword1\" \r\n                        placeholder=\"Password\"\r\n                        onChange={ e => setPassword(e.target.value) } />\r\n                </div>\r\n                \r\n                <button className=\"btn btn-warning\"\r\n                        onClick={ (e) => handleClick(e)} >\r\n                         Sign In</button><br /><br />\r\n\r\n                <div>\r\n                    <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">New User?</label>\r\n                    <Link to=\"signupusername\" className=\"badge badge-warning\"> Create Account</Link>\r\n                    <br /><br />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//     setUserLoggenIn: flag => dispatch(setUserLoggenIn(flag))\r\n// })\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedIn: state.user.loggedIn\r\n  })\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUserLoginEmailPass: user => dispatch(setUserLoginEmailPass(user))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React from 'react';\r\n\r\nimport SignIn from '../../components/SignIn/SignIn';\r\n// import SignUp from '../../components/SignUp/SignUp';\r\n\r\nconst LoginPage = () => {\r\n    return (\r\n        <div>\r\n            <SignIn />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage;","import React , { useState, useEffect } from 'react';\r\n\r\nimport { signup, updateDataInFirebase } from '../../firebase/firebase.utils';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setUserLoginEmailPass } from '../../redux/user/user.action';\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n// const [firstName, setFirstName] = useState('');\r\n// const [lastName, setLastName] = useState('');\r\n//     <div className=\"form-group w-25 p-3 mx-auto\">\r\n//     <label htmlFor=\"firstName\">First Name:</label>\r\n//     <input className=\"form-control\" id=\"firstName\"\r\n//         onChange={ e => setFirstName(e.target.value) } />\r\n// </div>\r\n// <div className=\"form-group w-25 p-3 mx-auto\">\r\n//     <label htmlFor=\"lastName\">Last Name:</label>\r\n//     <input className=\"form-control\" id=\"lastName\"\r\n//         onChange={ e => setEmail(e.target.value) } />\r\n// </div>\r\n\r\nconst SignUp = () => {\r\n\r\n  \r\n  const location = useLocation();\r\n  const {userName, userId} = location.state;\r\n\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [displayName, setDisplayName] = useState('');\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    \r\n    const onChangeHandler = event => {\r\n        const { name, value } = event.currentTarget;\r\n        if (name === \"userEmail\") {\r\n          setEmail(value);\r\n        } else if (name === \"userPassword\") {\r\n          setPassword(value);\r\n        } else if (name === \"userconfirmPassword\") {\r\n          setConfirmPassword(value);\r\n        } else if (name === \"displayName\") {\r\n          setDisplayName(value);\r\n        }\r\n      };\r\n\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      if (password !== confirmPassword) {\r\n        alert(`password don't match!`);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const flag = await signup(userName, userId, displayName, email, password);\r\n        setIsSubmitted(flag);\r\n        if(flag){\r\n          updateDataInFirebase('usersLogin', userId, {signup: true} );\r\n          // updateUsersLogin('usersLogin', userId);\r\n        }\r\n       \r\n        // createUserProfileDocument()\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n      // setUserLoginEmailPass({ email, password });\r\n      // login(email, password);\r\n    }\r\n\r\n    useEffect( () => {\r\n      if(isSubmitted) {\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n        setDisplayName('');\r\n        setIsSubmitted(false);\r\n      }\r\n\r\n    }, [isSubmitted])\r\n    return(\r\n        <div>\r\n            <h1>Movies - Subscriptions: Sign Up </h1>\r\n            <h3>Create an account</h3>\r\n            <form>\r\n                <div className=\"form-group w-25 p-3 mx-auto\">\r\n                    <label htmlFor=\"displayName\">Display Name:</label>\r\n                    <input className=\"form-control\" \r\n                        id=\"displayName\"\r\n                        name=\"displayName\"\r\n                        onChange={event => onChangeHandler(event) } />\r\n                </div>\r\n                <div className=\"form-group w-25 p-3 mx-auto\">\r\n                    <label htmlFor=\"userEmail\">Email:</label>\r\n                    <input className=\"form-control\" \r\n                            id=\"userEmail\" \r\n                            name=\"userEmail\"\r\n                            aria-describedby=\"emailHelp\"\r\n                            onChange={event => onChangeHandler(event) } />\r\n                </div>\r\n                <div className=\"form-group w-25 p-3 mx-auto\">\r\n                    <label htmlFor=\"userPassword\">Password</label>\r\n                    <input type=\"password\" className=\"form-control\" \r\n                            id=\"userPassword\"\r\n                            name=\"userPassword\"\r\n                            onChange={event => onChangeHandler(event) } />\r\n                </div>\r\n                <div className=\"form-group w-25 p-3 mx-auto\">\r\n                  <label htmlFor=\"userPassword\">Confirm Password</label>\r\n                  <input type=\"password\" className=\"form-control\" \r\n                          id=\"userconfirmPassword\"\r\n                          name=\"userconfirmPassword\"\r\n                          onChange={event => onChangeHandler(event) } />\r\n                </div>\r\n                <button className=\"btn btn-warning\"\r\n                    onClick={ (e) => handleSubmit(e) }>\r\n                        Sign up\r\n                    </button> <br /><br />\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setUserLoginEmailPass: user => dispatch(setUserLoginEmailPass(user))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);","import React from 'react';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport {Button} from 'react-bootstrap';\r\n\r\nconst  BackButton = ({ children }) => {\r\n  let history = useHistory()\r\n  return (\r\n    <Button className=\"btn btn-danger\" type=\"button\" onClick={() => history.goBack()}>\r\n      {children}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default BackButton;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { firestore,\r\n    getCollectionListSnapshotToMapUsersLogin } from '../../firebase/firebase.utils';\r\nimport { getUserLoginList } from '../../redux/user/user.action';\r\n\r\nimport BackButton from '../../components/BackButton';\r\n\r\nconst SignUpFirstUserName = () => {\r\n\r\n    const [userName, setUserName] = useState('');\r\n    // first to check if the userName is exist in firebase -> if not show a message, if yes redirect to sign up page\r\n    // with the id created in the fire base when the admin create the user\r\n    // and check in users the id is not already exist !!!\r\n    const usersList = useSelector(state => state.user.usersLoginList);\r\n    const dispatch = useDispatch();\r\n\r\n    const [isExist, setIsExist] = useState(false);  // if the user name exist\r\n    const [isSignup, setIsSignup] = useState(false);  // if already sign up \r\n    const [isSubmit, setIsSubmit] = useState(false);\r\n    const [userId, setUserId] = useState('');\r\n \r\n    useEffect( () => {\r\n        const collectionRef = firestore.collection('usersLogin');\r\n            collectionRef.onSnapshot(async snapshot => {\r\n                    const collection = getCollectionListSnapshotToMapUsersLogin(snapshot);\r\n                    dispatch(getUserLoginList(collection));\r\n                })\r\n    },[]);\r\n\r\n    const isUserNameExist = () => {\r\n        let flag = false;\r\n        let isSign=false;\r\n        let id = '';\r\n        usersList.forEach( user => {\r\n            if(user.userName === userName){\r\n                flag = true;\r\n                isSign = user.signup;\r\n                id = user.id;\r\n            }\r\n        })\r\n        return {flag, isSign, id};\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setIsSubmit(true);\r\n        const {flag, isSign, id} = isUserNameExist();\r\n        setIsExist(flag);\r\n        setIsSignup(isSign);\r\n        setUserId(id);\r\n    }\r\n\r\n    const clear = () => {\r\n        alert(`${userName} already sign in the system!`) \r\n        return <Redirect to='signin'></Redirect>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Movies - Subscriptions: Sign Up - User Name </h1>\r\n            <h3>Create an account</h3>\r\n            <form>\r\n                <div className=\"form-group w-25 p-3 mx-auto\">\r\n                    <label htmlFor=\"displayName\">User Name from admin</label>\r\n                    <input className=\"form-control\" \r\n                        onChange={event => setUserName((event.target.value.toLowerCase())) } />\r\n                        <br /><br />\r\n                        <button className=\"btn btn-warning\"\r\n                        onClick={ (e) => handleSubmit(e) }>\r\n                            Submit\r\n                        </button> <br /><br />\r\n                        {   \r\n                            (isSubmit)?(\r\n                            (isExist) ? \r\n                            ((isSignup)?\r\n                                (\r\n                                clear())\r\n                                :\r\n                                <Redirect to={{\r\n                                pathname: 'signup',\r\n                                state: {userName, userId}\r\n                                }} />\r\n                            )\r\n                            :\r\n                            alert(`User name doesn't exist !`)) : null\r\n                        }\r\n                </div>\r\n            </form>\r\n            <BackButton children='Go back'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUpFirstUserName;","const MoviesActionsTypes = {\r\n    SET_MOVIES_FROM_FIRE_STORE: 'SET_MOVIES_FROM_FIRE_STORE',\r\n    ADD_MOVIE: 'ADD_MOVIE'\r\n}\r\n\r\nexport default MoviesActionsTypes;","import React, { useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap,\r\n        getCollectionListusersPermissionsSnapShotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport { setMovies } from '../../redux/movies/movies.actions.js'\r\nimport { getPermissionsUsers, getCurrentUserPermissions } from '../../redux/user/user.action';\r\n\r\nconst MainPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const currentUser = useSelector(state => state.user.currentUser);  // from redux\r\n    \r\n    const permissionsUsers = useSelector(state => state.user.usersPermissions);  // from redux\r\n\r\n    useEffect( () => {    \r\n        \r\n        const collectionRef = firestore.collection('movies');\r\n        collectionRef.onSnapshot(async snapshot => {\r\n            const collection = convertCollectionsSnapshotToMap(snapshot);\r\n            dispatch(setMovies(collection));\r\n        })\r\n\r\n        const collectionRef2 = firestore.collection('permissions');\r\n        collectionRef2.onSnapshot(async snapshot => {\r\n            const collection =  getCollectionListusersPermissionsSnapShotToMap(snapshot);\r\n            // dispatch(getPermissionsUsers(collection));\r\n            dispatch(getPermissionsUsers(collection));\r\n        })\r\n        \r\n      }, []);\r\n\r\n      useEffect( () => {\r\n        if(permissionsUsers && currentUser){\r\n            const userPremission = permissionsUsers.filter( permission => permission.id === currentUser.id )\r\n            // currentUserPermissions['permissions'] = userPremission \r\n            dispatch(getCurrentUserPermissions(userPremission))\r\n        }\r\n        \r\n      }, [permissionsUsers, currentUser]);\r\n\r\n    return(\r\n        <div>\r\n            <br/><br/><br/>\r\n            <h1>Movies - Subscriptions: Main Page</h1>\r\n            <div>\r\n            { \r\n                (currentUser) ? ((currentUser.userName !== 'admin')) ?\r\n                ( <div>\r\n                    <Link to='movies' className=\"btn btn-outline-warning\">Movies</Link>\r\n                    <Link to='subscriptions' className=\"btn btn-outline-warning\">Subscriptions</Link>\r\n                    <Link to='signin' className=\"btn btn-outline-warning\">Log Out</Link>\r\n                </div>\r\n                )\r\n                :\r\n               (<div> \r\n                    <Link to='movies' className=\"btn btn-outline-warning\">Movies</Link>\r\n                    <Link to='subscriptions' className=\"btn btn-outline-warning\">Subscriptions</Link>\r\n                    <Link to='manageusers' className=\"btn btn-outline-warning\">Users Management</Link>\r\n                    <Link to='signin' className=\"btn btn-outline-warning\">Log Out</Link> \r\n                </div>\r\n                ) : null\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import MoviesActionsTypes from './movies.types';\r\n\r\nexport const setMovies = (moviesList) => ({\r\n    type: MoviesActionsTypes.SET_MOVIES_FROM_FIRE_STORE,\r\n    payload: moviesList\r\n});\r\n\r\nexport const addMovie = (movieToAdd) => ({\r\n    type: MoviesActionsTypes.ADD_MOVIE,\r\n    payload: movieToAdd\r\n})","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport BackButton from '../../components/BackButton';\r\n\r\n// <Link to='adduser' className=\"btn btn-outline-warning\">Add user</Link>\r\n\r\n// Only fron Admin!!!!!!\r\nconst ManageUsers = () => {\r\n\r\n    return(\r\n        <div>\r\n            <h1>Movies - Subscriptions: Manage Users</h1>\r\n            <div>\r\n                <Link to='allusers' className=\"btn btn-outline-warning\">All users</Link>\r\n                <Link to='addusername' className=\"btn btn-outline-warning\">Add user</Link>\r\n            </div>\r\n            <br /><br /><br />\r\n            <BackButton children='Go back'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManageUsers;","const TypesPermissions = {\r\n    vs: 'viewSubscriptions',\r\n    cs: 'createSubscriptions',\r\n    us: 'updateSubscriptions',\r\n    ds: 'deleteSubscriptions',\r\n    vmovies: 'viewMovies',\r\n    cm: 'createMovies',\r\n    um:'updateMovies',\r\n    dm:'deleteMovies'\r\n}\r\n\r\nexport default TypesPermissions;","import React, { useState }  from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Button, Modal, ListGroup  } from 'react-bootstrap';\r\nimport { deleteDataFromFirebase } from '../../firebase/firebase.utils.js';\r\n\r\nimport TypesPermissions from '../ManageUsers/permissionsTypes';\r\n\r\nconst MovieCard = ({movie}) => {\r\n    \r\n    const currentUserPermissions = useSelector(state => state.user.currentUserPermissions);\r\n    // const currentUser = useSelector(state => state.user.currentUser);\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () =>{ \r\n        setShow(false);\r\n    }\r\n    const handleShow = () => { \r\n        setShow(true);\r\n    }\r\n\r\n    const deleteMovie = (e, id) => {\r\n        e.preventDefault();\r\n        deleteDataFromFirebase('movies', id);\r\n        // deleteMovieFromFirebase(id, 'movies');\r\n        handleClose();\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div key={movie.id} className=\"card card-custom mx-2 mb-3\" style={{width: \"18rem\", textAlign: \"center\", background: \"black\"}}>\r\n                        <img src={movie.image} className=\"card-img-top\" alt=\"\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{movie.name}</h5>\r\n                                <p className=\"card-text\">Genres:</p>\r\n                                    <ListGroup as=\"ul\">\r\n                                        {movie.genres.map(\r\n                                            (gener, index) => <ListGroup.Item as=\"li\" variant=\"danger\" key={index}> {gener} </ListGroup.Item>\r\n                                        )} \r\n                                    </ListGroup><br /><br />\r\n                                    {\r\n                                        (currentUserPermissions[0][TypesPermissions.um])?\r\n                                        (\r\n                                            <Link to={{pathname: '/editmovie', state:{ movie}}}\r\n                                                className=\"btn btn-danger\" type=\"button\" \r\n                                                data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit\">\r\n                                                Edit\r\n                                            </Link>\r\n                                        ) : null\r\n                                    }\r\n                                \r\n                                {\r\n                                    (currentUserPermissions[0][TypesPermissions.dm])?\r\n                                    (\r\n                                        <Button className=\"btn btn-danger\" onClick={e => handleShow(e)}>Delete</Button>\r\n                                    ) : null\r\n                                }\r\n                                    <Modal show={show} onHide={handleClose} >\r\n                                    <div className=\"card text-white bg-dark mb-3\">\r\n                                        <Modal.Header closeButton>\r\n                                            <Modal.Title>Delete Movie</Modal.Title>\r\n                                        </Modal.Header>\r\n                                        <Modal.Body>\r\n                                            Are you sure you want to delete the movie {movie.name}?\r\n                                        </Modal.Body>\r\n                                        <Modal.Footer>\r\n                                            <Button variant=\"danger\" onClick={(e) => deleteMovie(e, movie.id)}>\r\n                                                Yes\r\n                                            </Button>\r\n                                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                                No\r\n                                            </Button>\r\n                                        </Modal.Footer>\r\n                                    </div>\r\n                                </Modal>\r\n                            </div>\r\n                        </div>\r\n    )\r\n}\r\n\r\nexport default MovieCard;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport MovieCard from './MovieCard';\r\n\r\nimport BackButton from '../../components/BackButton';\r\n\r\nconst AllMovies = ({searchField}) => {\r\n\r\n    const moviesList = useSelector(state => state.movies.movies);\r\n\r\n    const [moviesListTemp, setmoviesListTemp] = useState(moviesList);\r\n    \r\n\r\n    useEffect( ()=> {\r\n        try {\r\n            if(searchField) {\r\n                const filteredMovies = moviesList.filter( (movie) => \r\n                movie.name.toLowerCase().includes(searchField.toLowerCase()) \r\n                );\r\n                setmoviesListTemp(filteredMovies);\r\n            }\r\n           \r\n        }catch(err) {\r\n            console.log(err);\r\n        }\r\n       \r\n    }, [searchField]);\r\n\r\n    useEffect( () => {\r\n        setmoviesListTemp(moviesList);\r\n    },[moviesList])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container row mt-5 justify-content-center\">\r\n                {\r\n                    (moviesListTemp) ? \r\n                    (moviesListTemp.map( movie => {\r\n                        return (\r\n                            <div key={movie.id}>\r\n                                <MovieCard movie={movie} />\r\n                            </div>\r\n                        )\r\n                    } )) : null\r\n            }\r\n            </div>\r\n            \r\n            <BackButton children='Go back'/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllMovies;\r\n\r\n// <ul style={{listStyleType: \"none\"}}>\r\n// {movie.genres.map(\r\n//     (gener, index) => <li key={index}> {gener} </li>\r\n// )} \r\n// </ul>","import React, { useState } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n// import { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport { useSelector } from 'react-redux';\r\n// import { setMovies } from '../../redux/movies/movies.actions.js'\r\n\r\nimport AllMovies from './AllMovies';\r\n\r\nimport TypesPermissions from '../ManageUsers/permissionsTypes';\r\nimport BackButton from '../../components/BackButton';\r\n\r\nconst Movies = () => {\r\n\r\n    const [searchField, setSearchField] = useState('');\r\n    // const dispatch = useDispatch();\r\n    // useEffect( () => {    \r\n    //     // const unsubscribe  = null;\r\n    //     // const unsubscribe = onAuthStateChangeFirebase(, );\r\n    //     const collectionRef = firestore.collection('movies');\r\n    //     collectionRef.onSnapshot(async snapshot => {\r\n    //         const collection = convertCollectionsSnapshotToMap(snapshot);\r\n    //         dispatch(setMovies(collection));\r\n    //     })\r\n    //     // return () => {\r\n    //     //   unsubscribe();\r\n    //     // };\r\n    \r\n    //   }, []);\r\n\r\n    const moviesList = useSelector(state => state.movies.movies);\r\n    const currentUserPermissions = useSelector(state => state.user.currentUserPermissions);\r\n\r\n    return(\r\n        <div>\r\n            <h1>Movies - Subscriptions: Movies</h1>\r\n            <div>\r\n                <Link to='allmovies' className=\"btn btn-outline-warning\">All movies</Link>\r\n                {\r\n                    (currentUserPermissions[0][TypesPermissions.cm])?\r\n                    <Link to='addmovie' className=\"btn btn-outline-warning\">Add movie</Link>\r\n                    : null\r\n\r\n                }\r\n                <br /><br />\r\n                {\r\n                    moviesList ?\r\n                        (\r\n                            <div>\r\n                                Find movie: <input type='search' placeholder='Search Movie'\r\n                                            onChange={e => setSearchField(e.target.value)} /><br /><br />\r\n                                <AllMovies searchField={searchField} />\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <BackButton children='Go back'/>\r\n                }\r\n            </div>\r\n            \r\n            <div></div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movies;","const MembersActionsTypes = {\r\n    SET_MEMBERS_FROM_FIREBASE: 'SET_MEMBERS_FROM_FIREBASE',\r\n    SET_MOVIES_BY_MEMBER_FROM_FIREBASE: 'SET_MOVIES_BY_MEMBER_FROM_FIREBASE'\r\n}\r\n\r\nexport default MembersActionsTypes;","import React, { useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { firestore, getCollectionMembersSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setMembers } from '../../redux/members/members.actions';\r\n\r\nimport TypesPermissions from '../ManageUsers/permissionsTypes';\r\nimport BackButton from '../../components/BackButton';\r\n\r\nconst Subscriptions = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const currentUserPermissions = useSelector(state => state.user.currentUserPermissions);\r\n\r\n    useEffect( () => {    \r\n        const collectionRef = firestore.collection('members');\r\n        collectionRef.onSnapshot(async snapshot => {\r\n            const collection = getCollectionMembersSnapshotToMap(snapshot);\r\n            dispatch(setMembers(collection));\r\n        })\r\n      }, []);\r\n\r\n    //   const members = useSelector(state => state.members.members);\r\n\r\n    return(\r\n        <div>\r\n            <br/><br/><br/>\r\n            <h1>Movies - Subscriptions: Subscriptions</h1>\r\n            <div>\r\n            {\r\n                (currentUserPermissions[0])?\r\n                (\r\n                    (currentUserPermissions[0][TypesPermissions.vs])?\r\n                    (             \r\n                        <Link to='allmembers' className=\"btn btn-outline-warning\">All Members</Link>\r\n                    )                    \r\n                    : null\r\n                ) \r\n                : null\r\n            }\r\n            {\r\n                (currentUserPermissions[0])?\r\n                (\r\n                    (currentUserPermissions[0][TypesPermissions.cs])?\r\n                    (             \r\n                        <Link to='addmember' className=\"btn btn-outline-warning\">Add Member</Link>\r\n                    )                    \r\n                    : null\r\n                ) \r\n                : null\r\n            }\r\n            </div>\r\n            <br /><br /><br />\r\n            <BackButton children='Go back'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subscriptions;","import MembersActionsTypes from './members.types';\r\n\r\nexport const setMembers = (membersList) => ({\r\n    type: MembersActionsTypes.SET_MEMBERS_FROM_FIREBASE,\r\n    payload: membersList\r\n});\r\n\r\nexport const setMoviesByMember = (moviesByMember) => ({\r\n    type: MembersActionsTypes.SET_MOVIES_BY_MEMBER_FROM_FIREBASE,\r\n    payload: moviesByMember\r\n})","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { addMovie } from '../../redux/movies/movies.actions';\r\nimport { addDocumentToCollection } from '../../firebase/firebase.utils';\r\nimport validator from 'validator';\r\nimport BackButton from '../../components/BackButton';\r\n\r\nconst AddMovie = () => {\r\n    const [name, setName] = useState('');\r\n    const [genres, setGenres] = useState([]);\r\n    const [image, setImage] = useState('');\r\n    const [premiered, setPremiered] = useState(new Date());\r\n    const [movieToAdd, setMovieToAdd] = useState({});\r\n\r\n    const [changed, setChanged] = useState(false);\r\n\r\n    const moviesList = useSelector(state => state.movies.movies);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const changeName = (e) => {\r\n        let flag = false;\r\n        moviesList.map( movie => {\r\n            if(movie.name.toLowerCase() === e.target.value.toLowerCase())\r\n                flag = true;\r\n        })\r\n        if(!flag)\r\n            setName(e.target.value)\r\n        else\r\n            alert('The movie already exist')\r\n    }\r\n\r\n    const changeGenres = (e) => {\r\n        let genresStr = e.target.value;\r\n        var res = genresStr.split(\",\");\r\n        setGenres(res);\r\n    }\r\n\r\n    const isURLValid = (url) => {\r\n        return validator.isURL(url);\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!(image && isURLValid(image)))\r\n            alert('You must insert a URL')\r\n        else if(!(name && genres && image && premiered))\r\n            alert('You must fill in all the fields!');\r\n        else {\r\n            setMovieToAdd({name, genres, image, premiered});\r\n            setChanged(true);\r\n        }\r\n    }\r\n\r\n    const handleCancel = (e) => {\r\n        e.preventDefault();\r\n        setName('');\r\n        setGenres([]);\r\n        setImage('');\r\n        setPremiered(new Date());\r\n        setChanged(true);\r\n    }\r\n\r\n    useEffect( () => {   \r\n        async function fetchMyAPI() {\r\n            await addDocumentToCollection('movies',movieToAdd);\r\n            \r\n        }\r\n        if(Object.keys(movieToAdd).length !== 0){\r\n            dispatch(addMovie(movieToAdd));\r\n            fetchMyAPI()\r\n        }\r\n    }, [movieToAdd]);\r\n\r\n    return (\r\n        <div>\r\n            <br/><br/><br/>\r\n            <h1 className=\"text-center\"> Movies </h1>\r\n            <div className=\"container py-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"mx-auto col-sm-6\">\r\n                        <div className=\"card bg-dark\" >\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"mb-0\">Add new movie</h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form className=\"form\" autoComplete=\"off\">\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Name</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"text\" value={name} \r\n                                                    onChange={ e => changeName(e) } />\r\n                                            </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Genres</label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input className=\"form-control\" type=\"text\" value={genres}\r\n                                                onChange={ e => changeGenres(e)} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Image Url </label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input className=\"form-control\" type=\"text\" value={image}\r\n                                                onChange={ e => setImage(e.target.value) } />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Premiered</label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input className=\"form-control\" type=\"date\" value={premiered}\r\n                                                onChange={ e => setPremiered(e.target.value) } />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\"></label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input type=\"button\" className=\"btn btn-danger\" value=\"Add movie\" onClick={e => handleSubmit(e)} />\r\n                                            <button type=\"submit\" className=\"btn btn-secondary\" onClick={ e => handleCancel(e) }>Cancel</button>\r\n                                            { changed ? <Redirect to='allmovies' /> : null}\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <BackButton children='Go back'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMovie;\r\n\r\n\r\n// <form>\r\n// <div className=\"form-group\">\r\n//     <br/><br/><br/>\r\n//     <h3>Add new movie:</h3><br /><br />\r\n//     <label>\r\n//         Name: \r\n//         <input type=\"text\" name=\"name\" value={name} onChange={ e => changeName(e) } />\r\n//     </label><br />\r\n//     <label>\r\n//         Genres: \r\n//         <input type=\"text\" name=\"genres\" value={genres} onChange={ e => changeGenres(e) } />\r\n//     </label><br />\r\n//     <label>\r\n//         Image Url: \r\n//         <input type=\"url\" name=\"image\" value={image} onChange={ e => setImage(e.target.value) } />\r\n//     </label><br />\r\n//     <label>\r\n//         Premiered: \r\n//         <input type=\"date\" name=\"premiered\" value={premiered} onChange={ e => setPremiered(e.target.value) } />\r\n//     </label><br />\r\n//     <button type=\"submit\" className=\"btn btn-danger\" onClick={e => handleSubmit(e) }>Save</button>\r\n//     <button type=\"submit\" className=\"btn btn-danger\" onClick={ e => handleCancel(e) }>Cancel</button>\r\n//     { changed ? <Redirect to='allmovies' /> : null}\r\n// </div>\r\n// </form>","import React, { useState } from 'react';\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n// import {DropdownButton, Dropdown, Button } from 'react-bootstrap';\r\n\r\nimport { updateDataInFirebase } from '../../firebase/firebase.utils';\r\n\r\nimport BackButton from '../../components/BackButton';\r\n\r\n\r\nconst EditMovie = () => {\r\n\r\n    const location = useLocation();\r\n    const movie = location.state.movie;\r\n\r\n    const [name, setName] = useState(movie.name);\r\n    const [image, setImage] = useState(movie.image); // medium\r\n    const [premiered, setPremiered] = useState(movie.premiered);\r\n    const [genres, setGenres] = useState(movie.genres);\r\n\r\n    const [changed, setChanged] = useState(false);\r\n\r\n    const handleChanges = (e) => {\r\n        // e.preventDefault();\r\n        // updateMovieDataInFirebase(movie.id, name, image, premiered, genres);\r\n        // alert('Details changed successfully');\r\n        // setChanged(true);\r\n        e.preventDefault();\r\n        updateDataInFirebase('movies', movie.id, {name, image, premiered, genres} );\r\n        // updateMovieDataInFirebase(movie.id, name, image, premiered, genres);\r\n        alert('Details changed successfully');\r\n        setChanged(true);\r\n    }   \r\n\r\n    const changeGenres = (e) => {\r\n        let genresStr = e.target.value;\r\n        var temp = genresStr.split(\",\");\r\n        var res = temp.map( movieName => {\r\n            let name = capitalizeFirstLetter(movieName);\r\n            return name;\r\n        } )\r\n        setGenres(res);\r\n    }\r\n\r\n    const  capitalizeFirstLetter = (str) => {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n      }\r\n\r\n    return(\r\n        <div>\r\n        <h2>Movies</h2>\r\n        <h4>Edit movie: {name}</h4>\r\n             <div className=\"container py-3\">\r\n                 <div className=\"row\">\r\n                     <div className=\"mx-auto col-sm-6\">\r\n                         <div className=\"card bg-dark\" >\r\n                             <div className=\"card-header\">\r\n                                 <h4 className=\"mb-0\">Movie Information</h4>\r\n                             </div>\r\n                             <div className=\"card-body\">\r\n                                 <form className=\"form\" autoComplete=\"off\">\r\n                                     <div className=\"form-group row\">\r\n                                         <label className=\"col-lg-3 col-form-label form-control-label\">Name: </label>\r\n                                         <div className=\"col-lg-9\">\r\n                                             <input className=\"form-control\" type=\"text\" value={name} onChange={ e => setName(e.target.value)} />\r\n                                         </div>\r\n                                     </div>\r\n                                     <div className=\"form-group row\">\r\n                                         <label className=\"col-lg-3 col-form-label form-control-label\">Iamge Url: </label>\r\n                                         <div className=\"col-lg-9\">\r\n                                             <input className=\"form-control\" type=\"text\" value={image} onChange={ e => setImage(e.target.value)} />\r\n                                         </div>\r\n                                     </div>\r\n\r\n                                     <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Premiered: </label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input className=\"form-control\" type=\"date\" value={premiered} onChange={ e => setPremiered(e.target.value)} />\r\n                                        </div>\r\n                                     </div>\r\n                                 \r\n                                     <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Genres: </label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input className=\"form-control\" type=\"text\" value={ genres.map( genr => genr) } \r\n                                            onChange={ e => changeGenres(e)} />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                     <div className=\"form-group row\">\r\n                                         <label className=\"col-lg-3 col-form-label form-control-label\"></label>\r\n                                         <div className=\"col-lg-9\">\r\n                                             <input type=\"button\" className=\"btn btn-danger\" value=\"Save Changes\" onClick={ e => handleChanges(e) } />\r\n                                             <Link to='allmovies' className=\"btn btn-secondary\">Cancel</Link>\r\n                                             { changed ? <Redirect to='allmovies' /> : null}\r\n                                         </div>\r\n                                     </div>\r\n                                 </form>\r\n                             </div>\r\n                         </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <BackButton children='Go back'/>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default EditMovie;\r\n\r\n// <DropdownButton className=\"btn btn-danger btn-sm rounded-0\"\r\n// title='See all' size=\"sm\" variant='Warning'>\r\n// { \r\n//    genres.map( (genr, index) => {\r\n//        return <Dropdown.Item key={index} eventKey={index}>{genr}</Dropdown.Item>\r\n//    } )\r\n// }\r\n\r\n// </DropdownButton>\r\n// <Button className=\"btn btn-danger btn-sm rounded-0\" type=\"button\" data-toggle=\"tooltip\" \r\n// data-placement=\"top\" title=\"Add\"  size=\"sm\"\r\n// >\r\n// <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n// </Button>","import React, { useState } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Modal, Button, DropdownButton } from 'react-bootstrap';\r\n\r\nimport { deleteDataFromFirebase } from '../../firebase/firebase.utils';\r\n\r\n//<Link to=\"signup\" classNameName=\"badge badge-warning\"> Delete </Link>\r\n\r\nconst UserCard = ({user}) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () =>{ \r\n        setShow(false);\r\n    }\r\n    const handleShow = () => { \r\n        setShow(true);\r\n    }\r\n\r\n    const checkPermissionsTrue = (permissions) => {\r\n        const keys = Object.keys(permissions[0]);\r\n        const filtered = keys.filter( key => permissions[0][key] === true);\r\n        return filtered;\r\n    }\r\n\r\n    const deleteUser = (e) => {\r\n        e.preventDefault();\r\n        handleClose();\r\n        deleteDataFromFirebase('users', user.id);\r\n        deleteDataFromFirebase('permissions', user.id);\r\n        deleteDataFromFirebase('usersLogin', user.userId);\r\n        // deleteUserFromFirebase(user.id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br /><br />\r\n            <div className=\"card text-white bg-dark mb-3\" style={{maxWidth: \"18rem\"}}>\r\n                <div className=\"card-header\">\r\n                    <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i>\r\n                    <span> {user.email} </span>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{user.displayName}</h5>\r\n                    <p className=\"card-text\">\r\n                        Created data:  <br />\r\n                        \r\n                    </p>\r\n                    <DropdownButton\r\n                        size=\"small\"\r\n                        style={{ maxHeight: \"28px\" }}\r\n                        title={\"Permissions\"}\r\n                        key={1}\r\n                        id=\"dropdown-size-small\"\r\n                        variant=\"secondary\"     \r\n                    >\r\n                        <ul className=\"card-body\">\r\n                        Permissions: \r\n                        \r\n                        {\r\n                            checkPermissionsTrue(user.permissions).map( (p, index) =>{\r\n                                return <li key={index}>{p}</li> })\r\n                        }\r\n                        \r\n                        </ul>\r\n                        </DropdownButton>\r\n                </div>\r\n                <div className=\"card-footer bg-transparent\">\r\n                    <li className=\"list-inline-item\">\r\n                        <Link to={{pathname: '/edituser', state:{ user}}}\r\n                            className=\"btn btn-danger btn-sm rounded-0\" type=\"button\" \r\n                            data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit\">\r\n                            <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>    \r\n                        </Link>\r\n                    </li>     \r\n                      \r\n                    <li className=\"list-inline-item\">\r\n                        <Button className=\"btn btn-danger btn-sm rounded-0\" type=\"button\" data-toggle=\"tooltip\" \r\n                                data-placement=\"top\" title=\"Delete\"\r\n                                onClick={e => handleShow(e)}>\r\n                            <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                        </Button>\r\n                    </li>\r\n                    \r\n                    \r\n                            <Modal show={show} onHide={handleClose} >\r\n                                 <div className=\"card text-white bg-dark mb-3\">\r\n                                    <Modal.Header closeButton>\r\n                                        <Modal.Title>Delete User</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        Are you sure you want to delete the user {user.displayName}?\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer>\r\n                                        <Button variant=\"danger\" onClick={e => deleteUser(e) }>\r\n                                            Yes\r\n                                        </Button>\r\n                                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                                            No\r\n                                        </Button>\r\n                                    </Modal.Footer>\r\n                                </div>\r\n                            </Modal>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCard;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// import { getUsersList, getPermissionsUsers, setUsersWithPermissions } from '../../redux/user/user.action';\r\nimport { setUsersWithPermissions } from '../../redux/user/user.action';\r\n\r\nimport { firestore, getCollectionListSnapshotToMap,\r\n    getCollectionListusersPermissionsSnapShotToMap } from '../../firebase/firebase.utils';\r\n// import { onAuthStateChangeFirebase } from '../../firebase/firebase.utils';\r\n\r\nimport UserCard from './UserCard';\r\n\r\nimport BackButton from '../../components/BackButton';\r\n\r\n\r\n// Only fron Admin!!!!!!\r\nconst AllUserManage = () => {\r\n\r\n    const [users, setUsers] = useState([]);  // from firebase\r\n    const [usersPermissions, setUsersPermissions] = useState([]);  // from firebase\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const usersList = useSelector(state => state.user.users);  // from redux\r\n    // const usersPermissionsList = useSelector(state => state.user.usersPermissions);\r\n\r\n    useEffect( () => {    \r\n        // const collectionRef = firestore.collection('users');\r\n        // collectionRef.onSnapshot(async snapshot => {\r\n        //     const collection = getCollectionListSnapshotToMap(snapshot);\r\n        //     dispatch(getUsersList(collection));\r\n        // })\r\n\r\n        // const collectionRef1 = firestore.collection('permissions');\r\n        // collectionRef1.onSnapshot(async snapshot => {\r\n        //     const collection =  getCollectionListusersPermissionsSnapShotToMap(snapshot);\r\n        //     dispatch(getPermissionsUsers(collection));\r\n        // })\r\n\r\n        const collectionRef = firestore.collection('users');\r\n        collectionRef.onSnapshot(async snapshot => {\r\n            const collection = getCollectionListSnapshotToMap(snapshot);\r\n            // dispatch(getUsersList(collection));\r\n            setUsers(collection);\r\n        })\r\n  \r\n\r\n        const collectionRef1 = firestore.collection('permissions');\r\n        collectionRef1.onSnapshot(async snapshot => {\r\n            const collection =  getCollectionListusersPermissionsSnapShotToMap(snapshot);\r\n            // dispatch(getPermissionsUsers(collection));\r\n            setUsersPermissions(collection);\r\n        })\r\n        \r\n      }, []);\r\n\r\n      useEffect( () => {\r\n            users.map(user => {\r\n                const userPremission = usersPermissions.filter( userp => user.id === userp.id )\r\n                user['permissions'] = userPremission;\r\n            });\r\n            dispatch(setUsersWithPermissions(users));\r\n      },[usersPermissions])\r\n\r\n    return (\r\n        <div>\r\n            <br /><br /><br />\r\n            <h1 className=\"text-center\"> Users List: </h1>\r\n            <div className=\"card-group justify-content-center\">\r\n                {\r\n                    (usersList) ? \r\n                    ( usersList.map( user => {\r\n                            return( \r\n                                <div key={user.id}>\r\n                                    <UserCard  user={user} />\r\n                                </div>\r\n                            )\r\n                        } )) : null\r\n                }\r\n            </div>\r\n\r\n            <BackButton children='Go back'/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllUserManage;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { firestore, addNewUser,\r\n        getCollectionListSnapshotToMapUsersLogin } from '../../firebase/firebase.utils';\r\n\r\nimport { getUserLoginList } from '../../redux/user/user.action';\r\n\r\nimport BackButton from '../../components/BackButton';\r\n\r\n\r\nconst AddUserByAdmin = () => {\r\n\r\n    const [userName, setUserName] = useState('');\r\n    \r\n    const [changed, setChanged] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const usersList = useSelector(state => state.user.usersLoginList);\r\n\r\n    useEffect( () => {\r\n        const collectionRef = firestore.collection('usersLogin');\r\n            collectionRef.onSnapshot(async snapshot => {\r\n                    const collection = getCollectionListSnapshotToMapUsersLogin(snapshot);\r\n                    dispatch(getUserLoginList(collection));\r\n                })\r\n    },[]);\r\n\r\n      //check if user name from admin already exist\r\n    const isUserNameExist = () => {\r\n        let flag = true\r\n        usersList.forEach( user => {\r\n            if(user.userName === userName)\r\n                flag = false;\r\n        })\r\n        return flag;\r\n    }\r\n    \r\n    const handleChanges = (e) => {\r\n        e.preventDefault();\r\n        if(userName) {\r\n            try {\r\n                const createdAt = new Date();\r\n                const flag = isUserNameExist(userName);\r\n                const signup = false;\r\n                if (flag)  \r\n                {\r\n                    addNewUser('usersLogin', {userName, createdAt, signup});\r\n                    alert('Details saved successfully');\r\n                    setChanged(true);\r\n                }\r\n                else\r\n                    alert(`The user name ${userName} already exist !`);\r\n                \r\n\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        else{\r\n            alert('You must insert user name');\r\n            setUserName('');\r\n        }\r\n    }   \r\n\r\n    return(\r\n        <div>\r\n            <br /><br /><br />\r\n            <h1 className=\"text-center\"> Users </h1>\r\n            <div className=\"container py-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"mx-auto col-sm-6\">\r\n                        <div className=\"card bg-dark\" >\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"mb-0\">Add new user</h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form className=\"form\" autoComplete=\"off\">\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">User Name</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"text\" onChange={ e => setUserName((e.target.value).toLowerCase())} />\r\n                                            </div>\r\n                                    </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\"></label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input type=\"button\" className=\"btn btn-danger\" value=\"Add user\" onClick={ e => handleChanges(e) } />\r\n                                                <Link to='manageusers' className=\"btn btn-secondary\">Cancel</Link>\r\n                                                { changed ? <Redirect to='manageusers' /> : null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <BackButton children='Go back'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUserByAdmin;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Form } from 'react-bootstrap';\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport TypesPermissions from './permissionsTypes';\r\n\r\nimport { updateDataInFirebase } from '../../firebase/firebase.utils';\r\n\r\nimport BackButton from '../../components/BackButton';\r\n\r\n\r\nconst EditUser = () => {\r\n\r\n    const location = useLocation();\r\n    const user = location.state.user;\r\n\r\n    const [name, setName] = useState(user.displayName);\r\n    const [email, setEmail] = useState(user.email);\r\n    const [permissions, setPermissions] = useState(user.permissions);\r\n    \r\n    const [viewS, setViewS] = useState(permissions[0][TypesPermissions.vs]);\r\n    const [createS, setCreateS] = useState(permissions[0][TypesPermissions.cs]);\r\n    const [updateS, setUpdateS] = useState(permissions[0][TypesPermissions.us]);\r\n    const [deleteS, setDeleteS] = useState(permissions[0][TypesPermissions.ds]);\r\n    const [viewM,setViewM] = useState(permissions[0][TypesPermissions.vmovies]);\r\n    const [createM, setCreateM] = useState(permissions[0][TypesPermissions.cm]);\r\n    const [updateM, setUpdateM] = useState(permissions[0][TypesPermissions.um]);\r\n    const [deleteM, setDeleteM] = useState(permissions[0][TypesPermissions.dm]);\r\n\r\n\r\n    const [changed, setChanged] = useState(false);\r\n\r\n\r\n    useEffect( () => {\r\n        if(createM && updateM && deleteM) \r\n            permissionschange(setViewM, true, TypesPermissions.vmovies);\r\n        if(createS && updateS && deleteS) \r\n            permissionschange(setViewS, true, TypesPermissions.vs);\r\n        \r\n    }, [viewS, createS, updateS, deleteS, viewM, createM, updateM, deleteM ]);\r\n\r\n    const permissionschange = (func, flag, typeP) => {\r\n        func(flag);\r\n        permissions[0][typeP] = flag;\r\n        setPermissions(permissions);\r\n    }\r\n\r\n    const handlePermissions = e => {\r\n        if(e.target.id === TypesPermissions.vs) {\r\n            permissionschange(setViewS, e.target.checked, TypesPermissions.vs, viewS);\r\n            // setViewS(e.target.checked);\r\n            // permissions[0][TypesPermissions.vs] = viewS;\r\n            // setPermissions(permissions);\r\n        }\r\n        else if (e.target.id === TypesPermissions.cs)\r\n            permissionschange(setCreateS, e.target.checked, TypesPermissions.cs);\r\n        else if (e.target.id === TypesPermissions.us)\r\n            permissionschange(setUpdateS, e.target.checked, TypesPermissions.us);\r\n        else if (e.target.id === TypesPermissions.ds)\r\n            permissionschange(setDeleteS, e.target.checked, TypesPermissions.ds);\r\n        else if (e.target.id === TypesPermissions.vmovies)\r\n            permissionschange(setViewM, e.target.checked, TypesPermissions.vmovies);\r\n        else if (e.target.id === TypesPermissions.cm)\r\n            permissionschange(setCreateM, e.target.checked, TypesPermissions.cm);\r\n        else if (e.target.id === TypesPermissions.um)\r\n            permissionschange(setUpdateM, e.target.checked, TypesPermissions.um);\r\n        else if (e.target.id === TypesPermissions.dm)\r\n            permissionschange(setDeleteM, e.target.checked, TypesPermissions.dm);\r\n    }\r\n\r\n    const handleChanges = (e) => {\r\n        // e.preventDefault();\r\n        // updateUserDateInFireBase(user.id, name, email, user.createdAt);\r\n        // updateUserPermissionsDateInFireBase(user.id, permissions[0]);\r\n        // alert('Details changed successfully');\r\n        // setChanged(true);\r\n        e.preventDefault();\r\n        // update in users\r\n        var userData = {\r\n            displayName: name,\r\n            id: user.id,\r\n            email: email,\r\n            createdAt: user.createdAt,\r\n          };\r\n        updateDataInFirebase('users', user.id, userData )\r\n        // updateUserDateInFireBase(user.id, name, email, user.createdAt);\r\n        // update in permissions\r\n        const { viewSubscriptions, createSubscriptions, updateSubscriptions, deleteSubscriptions,\r\n            viewMovies, createMovies, updateMovies, deleteMovies } = permissions[0];\r\n        var userDataPermissions = {\r\n            id: user.id,\r\n            viewSubscriptions, \r\n            createSubscriptions, \r\n            updateSubscriptions,\r\n            deleteSubscriptions,\r\n            viewMovies,\r\n            createMovies,\r\n            updateMovies,\r\n            deleteMovies\r\n        };\r\n        updateDataInFirebase('permissions', user.id, userDataPermissions);\r\n        // updateUserPermissionsDateInFireBase(user.id, permissions[0]);\r\n        alert('Details changed successfully');\r\n        setChanged(true);\r\n    }   \r\n\r\n    return(\r\n        <div>\r\n           <h2>Users</h2>\r\n           <h4>Edit user: {name}</h4>\r\n                <div className=\"container py-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"mx-auto col-sm-6\">\r\n                            <div className=\"card bg-dark\" >\r\n                                <div className=\"card-header\">\r\n                                    <h4 className=\"mb-0\">User Information</h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <form className=\"form\" autoComplete=\"off\">\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\">Name</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"text\" value={name} onChange={ e => setName(e.target.value)} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\">Email</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"email\" value={email} onChange={ e => setEmail(e.target.value)} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\">Permissions</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                \r\n                                                <Form.Group controlId=\"formBasicCheckbox\">\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.vs} label={TypesPermissions.vs} checked={viewS} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.cs} label={TypesPermissions.cs} checked={createS} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.us} label={TypesPermissions.us} checked={updateS} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.ds} label={TypesPermissions.ds} checked={deleteS} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.vmovies}  label={TypesPermissions.vmovies} checked={viewM} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.cm} label={TypesPermissions.cm} checked={createM} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.um} label={TypesPermissions.um} checked={updateM} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    <Form.Check type=\"checkbox\" id={TypesPermissions.dm} label={TypesPermissions.dm} checked={deleteM} \r\n                                                        onChange={(e) => handlePermissions(e)} />\r\n                                                    \r\n                                                </Form.Group>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\"></label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input type=\"button\" className=\"btn btn-danger\" value=\"Save Changes\" onClick={ e => handleChanges(e) } />\r\n                                                <Link to='allusers' className=\"btn btn-secondary\">Cancel</Link>\r\n                                                { changed ? <Redirect to='allusers' /> : null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <BackButton children='Go back'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditUser;\r\n\r\n\r\n    // useEffect( () => {\r\n    //     setExtractPermissions(getListPermission(permissions));\r\n    // },[]);\r\n\r\n    // const getListPermission = (permissions) => {\r\n    //     delete permissions[0]['id']\r\n    //     console.log(permissions);\r\n\r\n    //     // const keys = Object.keys(permissions[0]);\r\n    //     // const filterId = keys.filter( key => {\r\n    //     //     if(key !== 'id')\r\n    //     //         return key\r\n    //     // });\r\n    //     // console.log(filterId)\r\n    //     // const maps = filterId.map( p => permissions[0][p])\r\n    //     // console.log(maps)\r\n    //     // return maps;\r\n    // }\r\n\r\n    // permissions.map ( p => {\r\n    //     return <Form.Check type=\"checkbox\" label={p} checked={permissions[0][p]} onChange={(e) => handlePermissions(e, p)} />\r\n    // }\r\n    // )\r\n\r\n  ","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Card, Nav, Button, Modal, Form, Dropdown } from 'react-bootstrap';\r\n\r\nimport { updateDataInFirebase, checkMemberInFirebase, deleteDataFromFirebase } from '../../firebase/firebase.utils';\r\n\r\nimport TypesPermissions from '../ManageUsers/permissionsTypes';\r\n\r\n\r\nconst MemberCard = ({member}) => {\r\n    \r\n    const currentUserPermissions = useSelector(state => state.user.currentUserPermissions);\r\n\r\n    const moviesList = useSelector(state => state.movies.movies);\r\n    const moviesOfmembers = useSelector(state => state.members.moviesByMember);\r\n    \r\n    const [moviesByMemberId, setmoviesByMemberId] = useState([]);\r\n    const [filteredList, setFilteredList] = useState([]);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [activeKey, setActiveKey] = useState('details');\r\n    const [isSubNewMovie, setIsSubNewMovie] = useState(false);\r\n\r\n    const [movieId, setMovieId] = useState('');\r\n    const [date,setDate] = useState('');\r\n    const [movieName, setMovieName] = useState('');\r\n    \r\n    const handleClose = () => { \r\n        setShow(false);\r\n    }\r\n\r\n    const handleShow = () => { \r\n        setShow(true);\r\n    }\r\n\r\n    const deleteUser = (e) => {\r\n        e.preventDefault();\r\n        handleClose();\r\n        // deleteMemberFromFirebase(member.id, 'members');\r\n        // deleteMemberFromFirebase(member.id, 'subscriptions');\r\n\r\n        deleteDataFromFirebase('members', member.id);\r\n        deleteDataFromFirebase('subscriptions', member.id);\r\n    }\r\n\r\n    const handleSubNewMovie = e => {\r\n        e.preventDefault();\r\n        setIsSubNewMovie(!isSubNewMovie);\r\n        if(moviesList && moviesByMemberId)\r\n            filteredMoviesExist();\r\n    }\r\n\r\n    const handleMovieSubScripbe = (e, id, name) => {\r\n        e.preventDefault();\r\n        setMovieId(id);\r\n        setMovieName(name);\r\n    }\r\n\r\n    const handleSubscribe = e => {\r\n        e.preventDefault();\r\n        if(movieId && date) {\r\n            // const obj = { movieId, date };\r\n            // console.log(obj)\r\n            // const movies = [...moviesByMemberId , obj];\r\n            // setmoviesByMemberId([...moviesByMemberId , obj]);  /// to check assingment!!!\r\n            const memberId = member.id;\r\n            checkMemberInFirebase('subscriptions', memberId, {movies: moviesByMemberId} );\r\n            // checkMemberInFirebase('subscriptions', memberId, obj );\r\n            alert(`${member.name} member is subscribed to ${movieName} movie`);\r\n            \r\n        }\r\n        else {\r\n            alert('You must choose movie & date');\r\n            setMovieId('');\r\n            setDate('');\r\n        }\r\n    }\r\n\r\n    const updateSubscriptionsMovies = async (movies) => {\r\n        // if(movies.length > 0) {\r\n            await updateDataInFirebase('subscriptions', member.id, {movies} );\r\n        // }\r\n        // if(movies.length === 0) {\r\n        //     await deleteDataFromFirebase('subscriptions', member.id);\r\n        // }\r\n    }\r\n\r\n    // const checkIfListChanged = (newMoviesMember) => {\r\n    //     var flag = false;\r\n    //     moviesByMemberId.map( oldMovie => newMoviesMember.map(\r\n    //         newMovie => {\r\n    //             if(oldMovie.movieId !== newMovie.movieId)\r\n    //                 return flag = true;\r\n    //         }\r\n    //     ) )\r\n    //     return flag;\r\n    // }\r\n\r\n    useEffect( () => {\r\n        // var flag = false;\r\n        // moviesOfmembers.map( m => {\r\n        //     if(m.id === member.id)\r\n        //         flag = true;\r\n\r\n        // })\r\n        if(moviesOfmembers.length > 0) {\r\n            const memberMovies = moviesOfmembers.filter( m => m.id === member.id);\r\n            if(memberMovies.length > 0)\r\n                setmoviesByMemberId(memberMovies[0].movies);\r\n        }\r\n    }, [moviesOfmembers]);\r\n\r\n    useEffect( () => {\r\n        if(movieId && date) {\r\n            const obj = { movieId, date };\r\n            // const movies = [...moviesByMemberId , obj];\r\n            setmoviesByMemberId([...moviesByMemberId , obj]);  /// to check assingment!!!\r\n        }\r\n    }, [movieId, date]);\r\n\r\n    useEffect( () => {\r\n        if(moviesByMemberId.length > 0) {\r\n            const filtered  = moviesByMemberId.filter(function(array_el){\r\n                return moviesList.filter(function(anotherOne_el){\r\n                    return anotherOne_el.id === array_el.movieId;\r\n                }).length > 0\r\n            });\r\n            // const flag = checkIfListChanged(filtered);\r\n            // console.log(member.name, filtered)\r\n            // if(flag){\r\n                updateSubscriptionsMovies(filtered);\r\n            // }            \r\n        }\r\n    }, [moviesList, moviesByMemberId] );\r\n   \r\n    const filteredMoviesExist = () => {\r\n        const filtered  = moviesList.filter(function(array_el){\r\n            return moviesByMemberId.filter(function(anotherOne_el){\r\n                return anotherOne_el.movieId === array_el.id;\r\n            }).length === 0\r\n        });\r\n        setFilteredList(filtered);\r\n    }\r\n       \r\n    return(\r\n        <div>\r\n            <Card bg='dark'>\r\n                <Card.Header bg='secondary'>\r\n                    <Nav variant=\"tabs\" defaultActiveKey=\"details\"\r\n                        activeKey={activeKey} as=\"ul\" \r\n                        onSelect={(selectedKey) => setActiveKey(selectedKey)}>\r\n                        <Nav.Item as=\"li\"> \r\n                            <Nav.Link eventKey=\"details\" className=\"nav nav-tabs btn btn-danger\" \r\n                            >\r\n                                Member Details\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item as=\"li\">\r\n                            <Nav.Link eventKey=\"watched\" className=\"nav nav-tabs btn btn-danger\" \r\n                            >\r\n                                Movies watched\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </Card.Header>\r\n                {\r\n                    (activeKey === 'details') ? \r\n                    <div>\r\n                        <Card.Body>\r\n                            <Card.Title>{member.name}</Card.Title>\r\n                            <Card.Text>\r\n                                Email: {member.email}<br />\r\n                                City: {member.city}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                        {\r\n                            (currentUserPermissions[0][TypesPermissions.us])?\r\n                            (\r\n                                <li className=\"list-inline-item\">\r\n                                    <Link to={{pathname: '/editmember', state:{ member}}}\r\n                                        className=\"btn btn-danger btn-sm rounded-0\" type=\"button\" \r\n                                        data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit\">\r\n                                        <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>    \r\n                                    </Link>\r\n                                </li>     \r\n                            ) : null\r\n                        }\r\n                        {\r\n                            (currentUserPermissions[0][TypesPermissions.ds])?\r\n                            (\r\n                                <li className=\"list-inline-item\">\r\n                                    <Button className=\"btn btn-danger btn-sm rounded-0\" type=\"button\" data-toggle=\"tooltip\" \r\n                                            data-placement=\"top\" title=\"Delete\"\r\n                                            onClick={e => handleShow(e)}>\r\n                                        <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                    </Button>\r\n                                </li>\r\n                            ) : null\r\n                        }\r\n                            <Modal show={show} onHide={handleClose} >\r\n                                        <div className=\"card text-white bg-dark mb-3\">\r\n                                            <Modal.Header closeButton>\r\n                                                <Modal.Title>Delete Member</Modal.Title>\r\n                                            </Modal.Header>\r\n                                            <Modal.Body>\r\n                                                Are you sure you want to delete the member {member.name}?\r\n                                            </Modal.Body>\r\n                                            <Modal.Footer>\r\n                                                <Button variant=\"danger\" onClick={e => deleteUser(e) }>\r\n                                                    Yes\r\n                                                </Button>\r\n                                                <Button variant=\"secondary\" onClick={handleClose}>\r\n                                                    No\r\n                                                </Button>\r\n                                            </Modal.Footer>\r\n                                        </div>\r\n                                    </Modal>\r\n                        </Card.Footer>\r\n                    </div> : \r\n                    <div>\r\n                        <Card.Body>\r\n                            <Card.Title>Movies watched</Card.Title>\r\n                            <Card.Text as=\"ul\">\r\n                                    \r\n                                    {\r\n                                        (moviesByMemberId) ?\r\n                                        moviesByMemberId.map( (m, index) => {\r\n                                               var name = '';\r\n                                                moviesList.filter( movie => {\r\n                                                if(movie.id === m.movieId){\r\n                                                    name = movie.name;\r\n                                                }\r\n                                                    return name;\r\n                                                } ) \r\n                                            \r\n                                            return <li key={index}>\r\n                                                    Movie : {name} <br />\r\n                                                    Date: {m.date}\r\n                                                </li>\r\n                                        } )\r\n                                        : null\r\n                                    }\r\n                                    \r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                        {\r\n                            (currentUserPermissions[0][TypesPermissions.us])?\r\n                            (\r\n                                <Button className=\"btn btn-danger\" onClick={ e => {handleSubNewMovie(e)}}>Subscribe to new movie </Button>\r\n                            ): null\r\n                        }\r\n                            {\r\n                                (isSubNewMovie) ? \r\n                                <div>\r\n                                    <br />\r\n                                    <Dropdown>\r\n                                        <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                                            {(!movieName) ? 'Movies List' : `${movieName}` }\r\n                                        </Dropdown.Toggle>\r\n\r\n                                        <Dropdown.Menu>\r\n                                        {\r\n                                            (filteredList.length > 0) ? \r\n                                                (\r\n                                                    filteredList.map( (m, index) => {\r\n                                                        return <Dropdown.Item key={index}\r\n                                                                variant=\"warning\"\r\n                                                                className=\"btn btn-secondary\"\r\n                                                                onClick={e => handleMovieSubScripbe(e, m.id, m.name)}>\r\n                                                                {m.name}\r\n                                                                </Dropdown.Item>\r\n                                                    }) \r\n                                                \r\n                                                )\r\n                                            : \r\n                                                (\r\n                                                    moviesList.map( (m, index) => {\r\n                                                        return <Dropdown.Item key={index}\r\n                                                                variant=\"warning\"\r\n                                                                className=\"btn btn-secondary\"\r\n                                                                onClick={e => handleMovieSubScripbe(e, m.id, m.name)}>\r\n                                                                {m.name}\r\n                                                                </Dropdown.Item>\r\n                                                    }) \r\n                                                \r\n                                            ) \r\n                                        }\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n\r\n                                    <Form.Group controlId=\"dw\">\r\n                                        <Form.Label>Select Date watched:</Form.Label>\r\n                                        <Form.Control className=\"btn btn-secondary\" type=\"date\" name=\"dw\" \r\n                                            placeholder=\"Date watched\" \r\n                                            onChange={e => setDate(e.target.value)} />\r\n                                    </Form.Group>\r\n                                    <Button className=\"btn btn-danger\" onClick={handleSubscribe}>Subscribe</Button>\r\n                                </div> : null\r\n                            }\r\n                        </Card.Footer>\r\n                    </div>\r\n                }\r\n               \r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemberCard;","import React, { useEffect } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport MemberCard from './MemberCard';\r\n\r\nimport { firestore, getMoviesByMemberid } from '../../firebase/firebase.utils';\r\n\r\nimport { setMoviesByMember } from '../../redux/members/members.actions';\r\n\r\nimport BackButton from '../../components/BackButton';\r\n\r\nconst AllMembers = () => {\r\n\r\n    const members = useSelector(state => state.members.members);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect( ()=> {\r\n        const collectionRef = firestore.collection('subscriptions');\r\n        collectionRef.onSnapshot(async snapshot => {\r\n            const collection = getMoviesByMemberid(snapshot);\r\n            dispatch(setMoviesByMember(collection));\r\n        })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <br/><br/><br/>\r\n            <h1 className=\"text-center\"> Members List: </h1>\r\n            <div className=\"card-group justify-content-center\">\r\n\r\n            {\r\n                members.map( (member, index) => {\r\n                    return <MemberCard key={index} member={member}/>\r\n                })\r\n            }\r\n            </div>\r\n            <BackButton children='Go back'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllMembers;","import React, { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { updateDataInFirebase } from '../../firebase/firebase.utils';\r\nimport BackButton from '../../components/BackButton';\r\n\r\nconst EditMember = () => {\r\n\r\n    const location = useLocation();\r\n    const member = location.state.member;\r\n\r\n    const [name, setName] = useState(member.name);\r\n    const [email, setEmail] = useState(member.email);\r\n    const [city, setCity] = useState(member.city);\r\n\r\n    const [changed, setChanged] = useState(false);\r\n\r\n    const handleChanges = (e) => {\r\n        // e.preventDefault();\r\n        // updateMemberDataInFirebase(member.id, name, email,city, 'members')\r\n        // alert('Details changed successfully');\r\n        // setChanged(true);\r\n        e.preventDefault();\r\n        updateDataInFirebase('members', member.id, {name, email,city} );\r\n        // updateMemberDataInFirebase(member.id, name, email,city, 'members')\r\n        alert('Details changed successfully');\r\n        setChanged(true);\r\n    }   \r\n\r\n    return(\r\n        <div>\r\n            <br/><br/><br/>\r\n            <h2>Members</h2>\r\n            <h4>Edit member: {name}</h4>\r\n            <div className=\"container py-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"mx-auto col-sm-6\">\r\n                            <div className=\"card bg-dark\" >\r\n                                <div className=\"card-header\">\r\n                                    <h4 className=\"mb-0\">Member Information</h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <form className=\"form\" autoComplete=\"off\">\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\">Name</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"text\" value={name} onChange={ e => setName(e.target.value)} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\">Email</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"email\" value={email} onChange={ e => setEmail(e.target.value)} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\">City</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"text\" value={city} onChange={ e => setCity(e.target.value)} />\r\n                                            </div>\r\n                                         </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\"></label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input type=\"button\" className=\"btn btn-danger\" value=\"Save Changes\" onClick={ e => handleChanges(e) } />\r\n                                                <Link to='allmembers' className=\"btn btn-secondary\">Cancel</Link>\r\n                                                { changed ? <Redirect to='allmembers' /> : null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <BackButton children='Go back'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMember;","import React, { useState } from 'react';\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { addNewUser } from '../../firebase/firebase.utils';\r\nimport BackButton from '../../components/BackButton';\r\n\r\nconst AddMember = () => {\r\n\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [city, setCity] = useState('');\r\n\r\n    const [changed, setChanged] = useState(false);\r\n\r\n    const capitalize = (s) => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n      }\r\n\r\n    const handleChanges = (e) => {\r\n        e.preventDefault();\r\n        if(name && email && city) {\r\n            addNewUser('members', {name, email, city});\r\n            alert('Details saved successfully');\r\n            setChanged(true);\r\n        }\r\n        else{\r\n            alert('You muse insert name & email & city');\r\n            setName('');\r\n            setEmail('');\r\n            setCity('');\r\n        }\r\n    }   \r\n\r\n    return(\r\n        <div>\r\n            <br/><br/><br/>\r\n            <h1 className=\"text-center\"> Members </h1>\r\n            <div className=\"container py-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"mx-auto col-sm-6\">\r\n                        <div className=\"card bg-dark\" >\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"mb-0\">Add new member</h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form className=\"form\" autoComplete=\"off\">\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Name</label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input className=\"form-control\" type=\"text\" onChange={ e => setName(capitalize(e.target.value))} />\r\n                                            </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">Email</label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input className=\"form-control\" type=\"email\" onChange={ e => setEmail(capitalize(e.target.value))} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-lg-3 col-form-label form-control-label\">City</label>\r\n                                        <div className=\"col-lg-9\">\r\n                                            <input className=\"form-control\" type=\"text\" onChange={ e => setCity(capitalize(e.target.value))} />\r\n                                        </div>\r\n                                    </div>\r\n                                       \r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-lg-3 col-form-label form-control-label\"></label>\r\n                                            <div className=\"col-lg-9\">\r\n                                                <input type=\"button\" className=\"btn btn-danger\" value=\"Add member\" onClick={ e => handleChanges(e) } />\r\n                                                <Link to='allmembers' className=\"btn btn-secondary\">Cancel</Link>\r\n                                                { changed ? <Redirect to='allmembers' /> : null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <BackButton children='Go back'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMember;","import React, { useEffect } from 'react';\nimport './App.css';\n\nimport { Switch, Route, Redirect  } from 'react-router-dom';\n\nimport Error from './components/Error';\nimport Home from './pages/MainPage/Home';\nimport Header from './components/header/Header';\nimport LoginPage from './pages/Login/LoginPage';\nimport SignUp from './components/SignUp/SignUp';\nimport SignUpFirstUserName from './components/SignUp/SignUpFirstUserName';\nimport MainPage from './pages/MainPage/MainPage.jsx';\n\nimport ManageUsers from './pages/ManageUsers/ManageUsers.jsx';\nimport Movies from './pages/Movies/Movies.jsx';\nimport Subscriptions from './pages/Subscriptions/Subscriptions.jsx';\n\nimport AllMovies from './pages/Movies/AllMovies';\nimport AddMovie from './pages/Movies/AddMovie';\nimport EditMovie from './pages/Movies/EditMovie';\nimport AllUserManage from './pages/ManageUsers/AllUserManage';\nimport AddUserByAdmin from './pages/ManageUsers/AddUserByAdmin';\nimport EditUser from './pages/ManageUsers/EditUser';\nimport AllMembers from './pages/Subscriptions/AllMembers';\nimport EditMember from './pages/Subscriptions/EditMember';\nimport AddMember from './pages/Subscriptions/AddMember';\n\nimport { onAuthStateChangeFirebase } from './firebase/firebase.utils';\n// import { addCollectionsAndDocuments } from './firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { setUserLoggenIn, setUserLoginEmailPass } from './redux/user/user.action';\n\n// import util from './utils/utils';\n\n// <Route path='/adduser' component={AddUser} />\n// <Route exact path='/' component={LoginPage} />\n\nfunction App({ loggedIn, setUserLoggenIn, setUserLoginEmailPass }) {\n  // const [movies, setMovies] = useState([]);\n  // const [members, setMembers] = useState([]);\n  //  will be to start listening to auth state changes when our application mounts.\n  useEffect( () => {\n    // for first time insert to db in firebase\n    // util.getMovies().then(resp => setMovies(resp));\n    // util.getMembers().then(resp => setMembers(resp));\n\n    const unsubscribe = onAuthStateChangeFirebase(setUserLoggenIn, setUserLoginEmailPass);\n    return () => {\n      unsubscribe();\n    };\n\n  }, []);\n\n    // needs to delete - for first time insert to db in firebase\n    // useEffect( () => {\n    //   addCollectionsAndDocuments('members', members);\n    // }, [members]);\n  \n      // needs to delete - for first time insert to db in firebase\n    // useEffect( () => {\n    //   addCollectionsAndDocuments('movies', movies);\n    // }, [movies]);\n\n  // console.log(\"This is the process.env\", process.env.PUBLIC_URL)\n  return (\n      <div className=\"App\">\n        <Header loggedIn={loggedIn} />\n            <Switch>  \n              <Route exact path='/' component={Home} />\n              <Route path='/signup' component={SignUp} />\n              <Route path='/signupusername' component={SignUpFirstUserName} />\n              <Route path='/mainpage' component={MainPage} />\n              <Route path='/signin' component={LoginPage} />\n              <Route path='/manageusers' component={ManageUsers} />\n              <Route path='/allusers' component={AllUserManage} />\n              <Route path='/addusername' component={AddUserByAdmin} />\n              <Route path='/edituser' component={EditUser} />\n              <Route path='/movies' component={Movies} />\n              <Route path='/allmovies' component={AllMovies} />\n              <Route path='/editmovie' component={EditMovie} />\n              <Route path='/addmovie' component={AddMovie} />\n              <Route path='/subscriptions' component={Subscriptions} />\n              <Route path='/allmembers' component={AllMembers} />\n              <Route path='/editmember' component={EditMember} />\n              <Route path='/addmember' component={AddMember} />\n              <Route component={Error} />\n            </Switch>\n            { loggedIn ? <Redirect from=\"/\" to=\"/mainpage\" /> : <Redirect  to=\"/\" />  }\n      </div>\n  );\n}\n// { loggedIn ? <Redirect from=\"/signin\" to=\"/mainpage\" /> : <Redirect  to=\"signin\" />  }\nconst mapStateToProps = state => ({\n  loggedIn: state.user.loggedIn\n})\n\n\nconst mapDispatchToProps = dispatch => ({\n  setUserLoggenIn: flag => dispatch(setUserLoggenIn(flag)),\n  setUserLoginEmailPass: user => dispatch(setUserLoginEmailPass(user))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import UserActionTypes from './user.type';\r\nconst INITIAL_STATE = {\r\n    currentUser: null,\r\n    currentUserPermissions: [],\r\n    loggedIn: false,\r\n    error: null,\r\n    users: [],\r\n    usersPermissions: [],\r\n    usersLoginList : [],\r\n}\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case UserActionTypes.LOG_IN_USER:\r\n            return {\r\n                ...state,\r\n                loggedIn: action.payload\r\n            }\r\n        case UserActionTypes.SET_EMAIL_PASS_LOG_IN:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload\r\n            }\r\n        case UserActionTypes.GET_USERS_LIST:\r\n            return {\r\n                ...state,\r\n                users: action.payload\r\n            }\r\n        case UserActionTypes.GET_PERMISSIONS_USERS:\r\n            return {\r\n                ...state,\r\n                usersPermissions: action.payload\r\n            } \r\n        case UserActionTypes.SET_USERS_WITH_PERMISSIONS:\r\n            return{\r\n                ...state,\r\n                users: action.payload\r\n            }\r\n            case UserActionTypes.GET_USERS_LOGIN_LIST:\r\n                return {\r\n                    ...state,\r\n                    usersLoginList: action.payload\r\n                }\r\n            case UserActionTypes.GET_CURRENT_USER_PERMISSIONS: \r\n                return {\r\n                    ...state,\r\n                    currentUserPermissions: action.payload\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import MoviesActionsTypes from './movies.types';\r\n\r\nconst INITIAL_STATE = {\r\n    movies: []\r\n}\r\n\r\nconst moviesReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case MoviesActionsTypes.SET_MOVIES_FROM_FIRE_STORE:\r\n            return {\r\n                ...state,\r\n                movies: action.payload\r\n            }\r\n        case MoviesActionsTypes.ADD_MOVIE:\r\n            return {\r\n                ...state,\r\n                movies: [...state.movies, action.payload]\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default moviesReducer;","import MembersActionsTypes from './members.types';\r\n\r\nconst INITIAL_STATE = {\r\n    members: [],\r\n    moviesByMember: []\r\n}\r\n\r\nconst membersReducer = (state=INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case MembersActionsTypes.SET_MEMBERS_FROM_FIREBASE:\r\n            return {\r\n                ...state,\r\n                members: action.payload\r\n            }\r\n        case MembersActionsTypes.SET_MOVIES_BY_MEMBER_FROM_FIREBASE:\r\n            return {\r\n                ...state,\r\n                moviesByMember: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default membersReducer;","// represent all the state of the application\r\nimport { combineReducers } from 'redux';\r\n\r\nimport userReducer from './user/user.reducer';\r\nimport moviesReducer from './movies/movies.reducer';\r\nimport membersReducer from './members/members.reducer';\r\n\r\nconst rootReducer = combineReducers ({\r\n    user: userReducer,\r\n    movies: moviesReducer,\r\n    members: membersReducer\r\n});\r\n\r\nexport default rootReducer;\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from './root-reducer';\r\n// import thunk from 'redux-thunk';\r\n\r\n// const middlewares = [logger];\r\n\r\nlet middlewares = [];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    // middlewares.push(logger);\r\n    middlewares = [...middlewares, logger];\r\n} \r\n\r\nexport const store = createStore(rootReducer,  applyMiddleware(...middlewares));\r\n// export const store = createStore(rootReducer,  applyMiddleware(thunk));\r\n\r\nexport default {store};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nimport {store} from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}